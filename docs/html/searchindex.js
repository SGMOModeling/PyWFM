Search.setIndex({"docnames": ["index", "installation/anaconda", "installation/index", "installation/python", "reference/budget", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_horizontal_k", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_parameters", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_specific_storage", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_specific_yield", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_vertical_k", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquitard_vertical_k", "reference/generated/budget/data/pywfm.IWFMBudget.get_column_headers", "reference/generated/budget/data/pywfm.IWFMBudget.get_n_columns", "reference/generated/budget/data/pywfm.IWFMBudget.get_values", "reference/generated/budget/data/pywfm.IWFMBudget.get_values_for_a_column", "reference/generated/budget/location/pywfm.IWFMBudget.get_location_names", "reference/generated/budget/location/pywfm.IWFMBudget.get_n_locations", "reference/generated/budget/other/pywfm.IWFMBudget.close_budget_file", "reference/generated/budget/time/pywfm.IWFMBudget.get_n_time_steps", "reference/generated/budget/time/pywfm.IWFMBudget.get_time_specs", "reference/generated/budget/titles/pywfm.IWFMBudget.get_n_title_lines", "reference/generated/budget/titles/pywfm.IWFMBudget.get_title_length", "reference/generated/budget/titles/pywfm.IWFMBudget.get_title_lines", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_export_nodes", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_exports_destinations", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_ids", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_nonrecoverable_loss_factor", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_outflows", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_recoverable_loss_factor", "reference/generated/bypasses/pywfm.IWFMModel.get_n_bypasses", "reference/generated/diversions/pywfm.IWFMModel.get_ag_diversion_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_ag_elempump_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_ag_well_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_diversion_ids", "reference/generated/diversions/pywfm.IWFMModel.get_diversion_purpose", "reference/generated/diversions/pywfm.IWFMModel.get_element_pump_ids", "reference/generated/diversions/pywfm.IWFMModel.get_element_pump_purpose", "reference/generated/diversions/pywfm.IWFMModel.get_n_diversions", "reference/generated/diversions/pywfm.IWFMModel.get_n_element_pumps", "reference/generated/diversions/pywfm.IWFMModel.get_n_wells", "reference/generated/diversions/pywfm.IWFMModel.get_stream_diversion_locations", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_ag_elements", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_ag_subregions", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_urban_elements", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_urban_subregions", "reference/generated/diversions/pywfm.IWFMModel.get_urban_diversion_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_urban_elempump_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_urban_well_supply_shortage_at_origin", "reference/generated/diversions/pywfm.IWFMModel.get_well_ids", "reference/generated/diversions/pywfm.IWFMModel.get_well_pumping_purpose", "reference/generated/drains/pywfm.IWFMModel.get_n_tile_drains", "reference/generated/drains/pywfm.IWFMModel.get_tile_drain_ids", "reference/generated/drains/pywfm.IWFMModel.get_tile_drain_nodes", "reference/generated/general/pywfm.IWFMModel.delete_inquiry_data_file", "reference/generated/general/pywfm.IWFMModel.get_version", "reference/generated/general/pywfm.IWFMModel.is_model_instantiated", "reference/generated/general/pywfm.IWFMModel.kill", "reference/generated/general/pywfm.IWFMModel.new", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_config", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_ids", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_info", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_spatial_info", "reference/generated/geometry/elements/pywfm.IWFMModel.get_n_elements", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_elements_in_lake", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_lake_ids", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_n_elements_in_lake", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_n_lakes", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_boundary_nodes", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_n_nodes", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_coordinates", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_ids", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_info", "reference/generated/geometry/nodes/pywfm.IWFMModel.order_boundary_nodes", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_aquifer_bottom_elevation", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_aquifer_top_elevation", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_ground_surface_elevation", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_n_layers", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_stratigraphy_atXYcoordinate", "reference/generated/geometry/streams/pywfm.IWFMModel.get_downstream_node_in_stream_reaches", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_nodes_in_stream_reach", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_rating_table_points", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_reaches_upstream_of_reach", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_nodes", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_nodes_upstream_of_stream_node", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_reaches", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reach_outflow_destination", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reach_outflow_destination_types", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reaches_upstream_of_reach", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_bottom_elevations", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_network", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_node_ids", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_nodes_upstream_of_stream_node", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_rating_table", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_groundwater_nodes", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_ids", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_names", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_stream_nodes", "reference/generated/geometry/streams/pywfm.IWFMModel.get_upstream_nodes_in_stream_reaches", "reference/generated/geometry/streams/pywfm.IWFMModel.is_stream_upstream_node", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_n_subregions", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_ids", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_name", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_names", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregions_by_element", "reference/generated/heads/pywfm.IWFMModel.get_depth_to_water", "reference/generated/heads/pywfm.IWFMModel.get_gwheads_all", "reference/generated/heads/pywfm.IWFMModel.get_gwheads_foralayer", "reference/generated/heads/pywfm.IWFMModel.get_subregion_ag_pumping_average_depth_to_water", "reference/generated/heads/pywfm.IWFMModel.get_subsidence_all", "reference/generated/heads/pywfm.IWFMModel.get_zone_ag_pumping_average_depth_to_water", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_at_node_and_layer", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_coordinates", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_ids", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_info", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_names", "reference/generated/hydrographs/pywfm.IWFMModel.get_hydrograph_type_list", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_groundwater_hydrographs", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_hydrograph_types", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_stream_hydrographs", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_subsidence_hydrographs", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_tile_drain_hydrographs", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_coordinates", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_ids", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_names", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_coordinates", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_ids", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_names", "reference/generated/hydrographs/pywfm.IWFMModel.get_tile_drain_hydrograph_coordinates", "reference/generated/hydrographs/pywfm.IWFMModel.get_tile_drain_hydrograph_ids", "reference/generated/inflows/pywfm.IWFMModel.get_n_small_watersheds", "reference/generated/inflows/pywfm.IWFMModel.get_n_stream_inflows", "reference/generated/inflows/pywfm.IWFMModel.get_small_watershed_ids", "reference/generated/inflows/pywfm.IWFMModel.get_stream_inflow_ids", "reference/generated/inflows/pywfm.IWFMModel.get_stream_inflow_nodes", "reference/generated/internal/pywfm.IWFMModel.get_budget_type_ids", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_id_area", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_id_length", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_ids", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_volume", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_element", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_elementset", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_gwelement", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_lake", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_outside", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_streamnode", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_subregion", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_gen_ag", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_native_riparian", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_nonponded_ag", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_refuge", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_rice", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_urban", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_ids", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_element", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_gwheadobs", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_lake", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_node", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_smallwatershed", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamhydobs", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamnode", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamnodebud", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamreach", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_subregion", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_subsidenceobs", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_tiledrainobs", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_zone", "reference/generated/internal/pywfm.IWFMModel.get_location_type_ids", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_diversion", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_elempump", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_well", "reference/generated/internal/pywfm.IWFMModel.get_zbudget_type_ids", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_id_horizontal", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_id_vertical", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_budget_type_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_area", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_length", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_volume", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_element", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_elementset", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_gwelement", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_lake", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_outside", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_streamnode", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_subregion", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_gen_ag", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_native_riparian", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_nonponded_ag", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_refuge", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_rice", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_indoor", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_outdoor", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids_1", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_bypass", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_diversion", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_element", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_gwheadobs", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_lake", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_node", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_smallwatershed", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamhydobs", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnode", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnodebud", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamreach", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_subregion", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_subsidenceobs", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_tiledrainobs", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_zone", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_ids_1", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_diversion", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_elempump", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_well", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zbudget_type_ids", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_horizontal", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_vertical", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_ids", "reference/generated/landuse/pywfm.IWFMModel.get_n_ag_crops", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.close_log_file", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.get_last_message", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.log_last_message", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.set_log_file", "reference/generated/plotting/pywfm.IWFMModel.plot_elements", "reference/generated/plotting/pywfm.IWFMModel.plot_nodes", "reference/generated/private/pywfm.IWFMModel._get_hydrograph", "reference/generated/private/pywfm.IWFMModel._get_hydrograph_coordinates", "reference/generated/private/pywfm.IWFMModel._get_hydrograph_ids", "reference/generated/private/pywfm.IWFMModel._get_location_ids", "reference/generated/private/pywfm.IWFMModel._get_n_hydrographs", "reference/generated/private/pywfm.IWFMModel._get_n_locations", "reference/generated/private/pywfm.IWFMModel._get_names", "reference/generated/private/pywfm.IWFMModel._get_supply_purpose", "reference/generated/private/pywfm.IWFMModel._get_supply_requirement_ag", "reference/generated/private/pywfm.IWFMModel._get_supply_requirement_urban", "reference/generated/private/pywfm.IWFMModel._get_supply_shortage_at_origin_ag", "reference/generated/private/pywfm.IWFMModel._get_supply_shortage_at_origin_urban", "reference/generated/private/pywfm.IWFMModel._is_time_interval_greater_or_equal", "reference/generated/private/pywfm.IWFMModel._string_to_list_by_array", "reference/generated/private/pywfm.IWFMModel._validate_iwfm_date", "reference/generated/private/pywfm.IWFMModel._validate_time_interval", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._is_time_interval_greater_or_equal", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._string_to_list_by_array", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._validate_iwfm_date", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._validate_time_interval", "reference/generated/pywfm.IWFMBudget", "reference/generated/pywfm.IWFMModel", "reference/generated/pywfm.IWFMZBudget", "reference/generated/pywfm.misc.IWFMMiscellaneous", "reference/generated/simulation/pywfm.IWFMModel.advance_state", "reference/generated/simulation/pywfm.IWFMModel.advance_time", "reference/generated/simulation/pywfm.IWFMModel.close_log_file", "reference/generated/simulation/pywfm.IWFMModel.get_last_message", "reference/generated/simulation/pywfm.IWFMModel.is_end_of_simulation", "reference/generated/simulation/pywfm.IWFMModel.log_last_message", "reference/generated/simulation/pywfm.IWFMModel.print_results", "reference/generated/simulation/pywfm.IWFMModel.read_timeseries_data", "reference/generated/simulation/pywfm.IWFMModel.read_timeseries_data_overwrite", "reference/generated/simulation/pywfm.IWFMModel.restore_pumping_to_read_values", "reference/generated/simulation/pywfm.IWFMModel.set_log_file", "reference/generated/simulation/pywfm.IWFMModel.set_preprocessor_path", "reference/generated/simulation/pywfm.IWFMModel.set_simulation_path", "reference/generated/simulation/pywfm.IWFMModel.set_supply_adjustment_max_iterations", "reference/generated/simulation/pywfm.IWFMModel.set_supply_adjustment_tolerance", "reference/generated/simulation/pywfm.IWFMModel.simulate_all", "reference/generated/simulation/pywfm.IWFMModel.simulate_for_an_interval", "reference/generated/simulation/pywfm.IWFMModel.simulate_for_one_timestep", "reference/generated/simulation/pywfm.IWFMModel.turn_supply_adjustment_on_off", "reference/generated/streams/pywfm.IWFMModel.get_actual_stream_diversions_at_some_locations", "reference/generated/streams/pywfm.IWFMModel.get_net_bypass_inflows", "reference/generated/streams/pywfm.IWFMModel.get_stream_flow_at_location", "reference/generated/streams/pywfm.IWFMModel.get_stream_flows", "reference/generated/streams/pywfm.IWFMModel.get_stream_gain_from_groundwater", "reference/generated/streams/pywfm.IWFMModel.get_stream_gain_from_lakes", "reference/generated/streams/pywfm.IWFMModel.get_stream_inflows_at_some_locations", "reference/generated/streams/pywfm.IWFMModel.get_stream_rainfall_runoff", "reference/generated/streams/pywfm.IWFMModel.get_stream_reaches_for_stream_nodes", "reference/generated/streams/pywfm.IWFMModel.get_stream_return_flows", "reference/generated/streams/pywfm.IWFMModel.get_stream_riparian_evapotranspiration", "reference/generated/streams/pywfm.IWFMModel.get_stream_stages", "reference/generated/streams/pywfm.IWFMModel.get_stream_tile_drain_flows", "reference/generated/streams/pywfm.IWFMModel.get_stream_tributary_inflows", "reference/generated/time/pywfm.IWFMModel.get_current_date_and_time", "reference/generated/time/pywfm.IWFMModel.get_n_intervals", "reference/generated/time/pywfm.IWFMModel.get_n_time_steps", "reference/generated/time/pywfm.IWFMModel.get_output_interval", "reference/generated/time/pywfm.IWFMModel.get_time_specs", "reference/generated/time/pywfm.IWFMModel.increment_time", "reference/generated/time/pywfm.IWFMModel.is_date_greater", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.get_n_intervals", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.increment_time", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.is_date_greater", "reference/generated/version/pywfm.misc.IWFMMiscellaneous.get_version", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_column_headers_for_a_zone", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_values_for_a_zone", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_values_for_some_zones_for_an_interval", "reference/generated/zbudget/other/pywfm.IWFMZBudget.close_zbudget_file", "reference/generated/zbudget/time/pywfm.IWFMZBudget.get_n_time_steps", "reference/generated/zbudget/time/pywfm.IWFMZBudget.get_time_specs", "reference/generated/zbudget/titles/pywfm.IWFMZBudget.get_n_title_lines", "reference/generated/zbudget/titles/pywfm.IWFMZBudget.get_title_lines", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.generate_zone_list_from_file", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_n_zones", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_zone_list", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_zone_names", "reference/index", "reference/misc", "reference/model", "reference/zbudget", "tutorial/index", "tutorial/tutorial01_pywfm_runsamplemodel", "tutorial/tutorial02_pywfm_plothorizontalK", "tutorial/tutorial03_pywfm_plotheadcontours"], "filenames": ["index.rst", "installation/anaconda.rst", "installation/index.rst", "installation/python.rst", "reference/budget.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_horizontal_k.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_parameters.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_specific_storage.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_specific_yield.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquifer_vertical_k.rst", "reference/generated/aquiferprops/pywfm.IWFMModel.get_aquitard_vertical_k.rst", "reference/generated/budget/data/pywfm.IWFMBudget.get_column_headers.rst", "reference/generated/budget/data/pywfm.IWFMBudget.get_n_columns.rst", "reference/generated/budget/data/pywfm.IWFMBudget.get_values.rst", "reference/generated/budget/data/pywfm.IWFMBudget.get_values_for_a_column.rst", "reference/generated/budget/location/pywfm.IWFMBudget.get_location_names.rst", "reference/generated/budget/location/pywfm.IWFMBudget.get_n_locations.rst", "reference/generated/budget/other/pywfm.IWFMBudget.close_budget_file.rst", "reference/generated/budget/time/pywfm.IWFMBudget.get_n_time_steps.rst", "reference/generated/budget/time/pywfm.IWFMBudget.get_time_specs.rst", "reference/generated/budget/titles/pywfm.IWFMBudget.get_n_title_lines.rst", "reference/generated/budget/titles/pywfm.IWFMBudget.get_title_length.rst", "reference/generated/budget/titles/pywfm.IWFMBudget.get_title_lines.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_export_nodes.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_exports_destinations.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_ids.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_nonrecoverable_loss_factor.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_outflows.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_bypass_recoverable_loss_factor.rst", "reference/generated/bypasses/pywfm.IWFMModel.get_n_bypasses.rst", "reference/generated/diversions/pywfm.IWFMModel.get_ag_diversion_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_ag_elempump_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_ag_well_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_diversion_ids.rst", "reference/generated/diversions/pywfm.IWFMModel.get_diversion_purpose.rst", "reference/generated/diversions/pywfm.IWFMModel.get_element_pump_ids.rst", "reference/generated/diversions/pywfm.IWFMModel.get_element_pump_purpose.rst", "reference/generated/diversions/pywfm.IWFMModel.get_n_diversions.rst", "reference/generated/diversions/pywfm.IWFMModel.get_n_element_pumps.rst", "reference/generated/diversions/pywfm.IWFMModel.get_n_wells.rst", "reference/generated/diversions/pywfm.IWFMModel.get_stream_diversion_locations.rst", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_ag_elements.rst", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_ag_subregions.rst", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_urban_elements.rst", "reference/generated/diversions/pywfm.IWFMModel.get_supply_requirement_urban_subregions.rst", "reference/generated/diversions/pywfm.IWFMModel.get_urban_diversion_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_urban_elempump_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_urban_well_supply_shortage_at_origin.rst", "reference/generated/diversions/pywfm.IWFMModel.get_well_ids.rst", "reference/generated/diversions/pywfm.IWFMModel.get_well_pumping_purpose.rst", "reference/generated/drains/pywfm.IWFMModel.get_n_tile_drains.rst", "reference/generated/drains/pywfm.IWFMModel.get_tile_drain_ids.rst", "reference/generated/drains/pywfm.IWFMModel.get_tile_drain_nodes.rst", "reference/generated/general/pywfm.IWFMModel.delete_inquiry_data_file.rst", "reference/generated/general/pywfm.IWFMModel.get_version.rst", "reference/generated/general/pywfm.IWFMModel.is_model_instantiated.rst", "reference/generated/general/pywfm.IWFMModel.kill.rst", "reference/generated/general/pywfm.IWFMModel.new.rst", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_config.rst", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_ids.rst", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_info.rst", "reference/generated/geometry/elements/pywfm.IWFMModel.get_element_spatial_info.rst", "reference/generated/geometry/elements/pywfm.IWFMModel.get_n_elements.rst", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_elements_in_lake.rst", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_lake_ids.rst", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_n_elements_in_lake.rst", "reference/generated/geometry/lakes/pywfm.IWFMModel.get_n_lakes.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_boundary_nodes.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_n_nodes.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_coordinates.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_ids.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.get_node_info.rst", "reference/generated/geometry/nodes/pywfm.IWFMModel.order_boundary_nodes.rst", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_aquifer_bottom_elevation.rst", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_aquifer_top_elevation.rst", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_ground_surface_elevation.rst", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_n_layers.rst", "reference/generated/geometry/stratigraphy/pywfm.IWFMModel.get_stratigraphy_atXYcoordinate.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_downstream_node_in_stream_reaches.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_nodes_in_stream_reach.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_rating_table_points.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_reaches_upstream_of_reach.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_nodes.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_nodes_upstream_of_stream_node.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_n_stream_reaches.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reach_outflow_destination.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reach_outflow_destination_types.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_reaches_upstream_of_reach.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_bottom_elevations.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_network.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_node_ids.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_nodes_upstream_of_stream_node.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_rating_table.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_groundwater_nodes.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_ids.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_names.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_stream_reach_stream_nodes.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.get_upstream_nodes_in_stream_reaches.rst", "reference/generated/geometry/streams/pywfm.IWFMModel.is_stream_upstream_node.rst", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_n_subregions.rst", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_ids.rst", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_name.rst", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregion_names.rst", "reference/generated/geometry/subregions/pywfm.IWFMModel.get_subregions_by_element.rst", "reference/generated/heads/pywfm.IWFMModel.get_depth_to_water.rst", "reference/generated/heads/pywfm.IWFMModel.get_gwheads_all.rst", "reference/generated/heads/pywfm.IWFMModel.get_gwheads_foralayer.rst", "reference/generated/heads/pywfm.IWFMModel.get_subregion_ag_pumping_average_depth_to_water.rst", "reference/generated/heads/pywfm.IWFMModel.get_subsidence_all.rst", "reference/generated/heads/pywfm.IWFMModel.get_zone_ag_pumping_average_depth_to_water.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_at_node_and_layer.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_coordinates.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_ids.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_info.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_groundwater_hydrograph_names.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_hydrograph_type_list.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_groundwater_hydrographs.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_hydrograph_types.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_stream_hydrographs.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_subsidence_hydrographs.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_n_tile_drain_hydrographs.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_coordinates.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_ids.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_stream_hydrograph_names.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_coordinates.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_ids.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_subsidence_hydrograph_names.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_tile_drain_hydrograph_coordinates.rst", "reference/generated/hydrographs/pywfm.IWFMModel.get_tile_drain_hydrograph_ids.rst", "reference/generated/inflows/pywfm.IWFMModel.get_n_small_watersheds.rst", "reference/generated/inflows/pywfm.IWFMModel.get_n_stream_inflows.rst", "reference/generated/inflows/pywfm.IWFMModel.get_small_watershed_ids.rst", "reference/generated/inflows/pywfm.IWFMModel.get_stream_inflow_ids.rst", "reference/generated/inflows/pywfm.IWFMModel.get_stream_inflow_nodes.rst", "reference/generated/internal/pywfm.IWFMModel.get_budget_type_ids.rst", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_id_area.rst", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_id_length.rst", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_ids.rst", "reference/generated/internal/pywfm.IWFMModel.get_data_unit_type_volume.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_element.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_elementset.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_gwelement.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_lake.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_outside.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_streamnode.rst", "reference/generated/internal/pywfm.IWFMModel.get_flow_destination_type_id_subregion.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_gen_ag.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_native_riparian.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_nonponded_ag.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_refuge.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_rice.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_id_urban.rst", "reference/generated/internal/pywfm.IWFMModel.get_land_use_type_ids.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_element.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_gwheadobs.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_lake.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_node.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_smallwatershed.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamhydobs.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamnode.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamnodebud.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_streamreach.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_subregion.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_subsidenceobs.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_tiledrainobs.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_id_zone.rst", "reference/generated/internal/pywfm.IWFMModel.get_location_type_ids.rst", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_diversion.rst", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_elempump.rst", "reference/generated/internal/pywfm.IWFMModel.get_supply_type_id_well.rst", "reference/generated/internal/pywfm.IWFMModel.get_zbudget_type_ids.rst", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_id_horizontal.rst", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_id_vertical.rst", "reference/generated/internal/pywfm.IWFMModel.get_zone_extent_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_budget_type_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_area.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_length.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_data_unit_type_volume.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_element.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_elementset.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_gwelement.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_lake.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_outside.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_streamnode.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_subregion.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_gen_ag.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_native_riparian.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_nonponded_ag.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_refuge.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_rice.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_indoor.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_outdoor.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids_1.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_bypass.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_diversion.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_element.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_gwheadobs.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_lake.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_node.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_smallwatershed.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamhydobs.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnode.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnodebud.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamreach.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_subregion.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_subsidenceobs.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_tiledrainobs.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_id_zone.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_location_type_ids_1.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_diversion.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_elempump.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_supply_type_id_well.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zbudget_type_ids.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_horizontal.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_vertical.rst", "reference/generated/internal/pywfm.misc.IWFMMiscellaneous.get_zone_extent_ids.rst", "reference/generated/landuse/pywfm.IWFMModel.get_n_ag_crops.rst", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.close_log_file.rst", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.get_last_message.rst", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.log_last_message.rst", "reference/generated/logging/pywfm.misc.IWFMMiscellaneous.set_log_file.rst", "reference/generated/plotting/pywfm.IWFMModel.plot_elements.rst", "reference/generated/plotting/pywfm.IWFMModel.plot_nodes.rst", "reference/generated/private/pywfm.IWFMModel._get_hydrograph.rst", "reference/generated/private/pywfm.IWFMModel._get_hydrograph_coordinates.rst", "reference/generated/private/pywfm.IWFMModel._get_hydrograph_ids.rst", "reference/generated/private/pywfm.IWFMModel._get_location_ids.rst", "reference/generated/private/pywfm.IWFMModel._get_n_hydrographs.rst", "reference/generated/private/pywfm.IWFMModel._get_n_locations.rst", "reference/generated/private/pywfm.IWFMModel._get_names.rst", "reference/generated/private/pywfm.IWFMModel._get_supply_purpose.rst", "reference/generated/private/pywfm.IWFMModel._get_supply_requirement_ag.rst", "reference/generated/private/pywfm.IWFMModel._get_supply_requirement_urban.rst", "reference/generated/private/pywfm.IWFMModel._get_supply_shortage_at_origin_ag.rst", "reference/generated/private/pywfm.IWFMModel._get_supply_shortage_at_origin_urban.rst", "reference/generated/private/pywfm.IWFMModel._is_time_interval_greater_or_equal.rst", "reference/generated/private/pywfm.IWFMModel._string_to_list_by_array.rst", "reference/generated/private/pywfm.IWFMModel._validate_iwfm_date.rst", "reference/generated/private/pywfm.IWFMModel._validate_time_interval.rst", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._is_time_interval_greater_or_equal.rst", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._string_to_list_by_array.rst", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._validate_iwfm_date.rst", "reference/generated/private/pywfm.misc.IWFMMiscellaneous._validate_time_interval.rst", "reference/generated/pywfm.IWFMBudget.rst", "reference/generated/pywfm.IWFMModel.rst", "reference/generated/pywfm.IWFMZBudget.rst", "reference/generated/pywfm.misc.IWFMMiscellaneous.rst", "reference/generated/simulation/pywfm.IWFMModel.advance_state.rst", "reference/generated/simulation/pywfm.IWFMModel.advance_time.rst", "reference/generated/simulation/pywfm.IWFMModel.close_log_file.rst", "reference/generated/simulation/pywfm.IWFMModel.get_last_message.rst", "reference/generated/simulation/pywfm.IWFMModel.is_end_of_simulation.rst", "reference/generated/simulation/pywfm.IWFMModel.log_last_message.rst", "reference/generated/simulation/pywfm.IWFMModel.print_results.rst", "reference/generated/simulation/pywfm.IWFMModel.read_timeseries_data.rst", "reference/generated/simulation/pywfm.IWFMModel.read_timeseries_data_overwrite.rst", "reference/generated/simulation/pywfm.IWFMModel.restore_pumping_to_read_values.rst", "reference/generated/simulation/pywfm.IWFMModel.set_log_file.rst", "reference/generated/simulation/pywfm.IWFMModel.set_preprocessor_path.rst", "reference/generated/simulation/pywfm.IWFMModel.set_simulation_path.rst", "reference/generated/simulation/pywfm.IWFMModel.set_supply_adjustment_max_iterations.rst", "reference/generated/simulation/pywfm.IWFMModel.set_supply_adjustment_tolerance.rst", "reference/generated/simulation/pywfm.IWFMModel.simulate_all.rst", "reference/generated/simulation/pywfm.IWFMModel.simulate_for_an_interval.rst", "reference/generated/simulation/pywfm.IWFMModel.simulate_for_one_timestep.rst", "reference/generated/simulation/pywfm.IWFMModel.turn_supply_adjustment_on_off.rst", "reference/generated/streams/pywfm.IWFMModel.get_actual_stream_diversions_at_some_locations.rst", "reference/generated/streams/pywfm.IWFMModel.get_net_bypass_inflows.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_flow_at_location.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_flows.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_gain_from_groundwater.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_gain_from_lakes.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_inflows_at_some_locations.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_rainfall_runoff.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_reaches_for_stream_nodes.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_return_flows.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_riparian_evapotranspiration.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_stages.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_tile_drain_flows.rst", "reference/generated/streams/pywfm.IWFMModel.get_stream_tributary_inflows.rst", "reference/generated/time/pywfm.IWFMModel.get_current_date_and_time.rst", "reference/generated/time/pywfm.IWFMModel.get_n_intervals.rst", "reference/generated/time/pywfm.IWFMModel.get_n_time_steps.rst", "reference/generated/time/pywfm.IWFMModel.get_output_interval.rst", "reference/generated/time/pywfm.IWFMModel.get_time_specs.rst", "reference/generated/time/pywfm.IWFMModel.increment_time.rst", "reference/generated/time/pywfm.IWFMModel.is_date_greater.rst", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.get_n_intervals.rst", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.increment_time.rst", "reference/generated/time/pywfm.misc.IWFMMiscellaneous.is_date_greater.rst", "reference/generated/version/pywfm.misc.IWFMMiscellaneous.get_version.rst", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_column_headers_for_a_zone.rst", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_values_for_a_zone.rst", "reference/generated/zbudget/data/pywfm.IWFMZBudget.get_values_for_some_zones_for_an_interval.rst", "reference/generated/zbudget/other/pywfm.IWFMZBudget.close_zbudget_file.rst", "reference/generated/zbudget/time/pywfm.IWFMZBudget.get_n_time_steps.rst", "reference/generated/zbudget/time/pywfm.IWFMZBudget.get_time_specs.rst", "reference/generated/zbudget/titles/pywfm.IWFMZBudget.get_n_title_lines.rst", "reference/generated/zbudget/titles/pywfm.IWFMZBudget.get_title_lines.rst", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.generate_zone_list_from_file.rst", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_n_zones.rst", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_zone_list.rst", "reference/generated/zbudget/zones/pywfm.IWFMZBudget.get_zone_names.rst", "reference/index.rst", "reference/misc.rst", "reference/model.rst", "reference/zbudget.rst", "tutorial/index.rst", "tutorial/tutorial01_pywfm_runsamplemodel.rst", "tutorial/tutorial02_pywfm_plothorizontalK.rst", "tutorial/tutorial03_pywfm_plotheadcontours.rst"], "titles": ["PyWFM Documentation", "Installation using Anaconda", "Installation", "Installation using Python", "IWFMBudget", "pywfm.IWFMModel.get_aquifer_horizontal_k", "pywfm.IWFMModel.get_aquifer_parameters", "pywfm.IWFMModel.get_aquifer_specific_storage", "pywfm.IWFMModel.get_aquifer_specific_yield", "pywfm.IWFMModel.get_aquifer_vertical_k", "pywfm.IWFMModel.get_aquitard_vertical_k", "pywfm.IWFMBudget.get_column_headers", "pywfm.IWFMBudget.get_n_columns", "pywfm.IWFMBudget.get_values", "pywfm.IWFMBudget.get_values_for_a_column", "pywfm.IWFMBudget.get_location_names", "pywfm.IWFMBudget.get_n_locations", "pywfm.IWFMBudget.close_budget_file", "pywfm.IWFMBudget.get_n_time_steps", "pywfm.IWFMBudget.get_time_specs", "pywfm.IWFMBudget.get_n_title_lines", "pywfm.IWFMBudget.get_title_length", "pywfm.IWFMBudget.get_title_lines", "pywfm.IWFMModel.get_bypass_export_nodes", "pywfm.IWFMModel.get_bypass_exports_destinations", "pywfm.IWFMModel.get_bypass_ids", "pywfm.IWFMModel.get_bypass_nonrecoverable_loss_factor", "pywfm.IWFMModel.get_bypass_outflows", "pywfm.IWFMModel.get_bypass_recoverable_loss_factor", "pywfm.IWFMModel.get_n_bypasses", "pywfm.IWFMModel.get_ag_diversion_supply_shortage_at_origin", "pywfm.IWFMModel.get_ag_elempump_supply_shortage_at_origin", "pywfm.IWFMModel.get_ag_well_supply_shortage_at_origin", "pywfm.IWFMModel.get_diversion_ids", "pywfm.IWFMModel.get_diversion_purpose", "pywfm.IWFMModel.get_element_pump_ids", "pywfm.IWFMModel.get_element_pump_purpose", "pywfm.IWFMModel.get_n_diversions", "pywfm.IWFMModel.get_n_element_pumps", "pywfm.IWFMModel.get_n_wells", "pywfm.IWFMModel.get_stream_diversion_locations", "pywfm.IWFMModel.get_supply_requirement_ag_elements", "pywfm.IWFMModel.get_supply_requirement_ag_subregions", "pywfm.IWFMModel.get_supply_requirement_urban_elements", "pywfm.IWFMModel.get_supply_requirement_urban_subregions", "pywfm.IWFMModel.get_urban_diversion_supply_shortage_at_origin", "pywfm.IWFMModel.get_urban_elempump_supply_shortage_at_origin", "pywfm.IWFMModel.get_urban_well_supply_shortage_at_origin", "pywfm.IWFMModel.get_well_ids", "pywfm.IWFMModel.get_well_pumping_purpose", "pywfm.IWFMModel.get_n_tile_drains", "pywfm.IWFMModel.get_tile_drain_ids", "pywfm.IWFMModel.get_tile_drain_nodes", "pywfm.IWFMModel.delete_inquiry_data_file", "pywfm.IWFMModel.get_version", "pywfm.IWFMModel.is_model_instantiated", "pywfm.IWFMModel.kill", "pywfm.IWFMModel.new", "pywfm.IWFMModel.get_element_config", "pywfm.IWFMModel.get_element_ids", "pywfm.IWFMModel.get_element_info", "pywfm.IWFMModel.get_element_spatial_info", "pywfm.IWFMModel.get_n_elements", "pywfm.IWFMModel.get_elements_in_lake", "pywfm.IWFMModel.get_lake_ids", "pywfm.IWFMModel.get_n_elements_in_lake", "pywfm.IWFMModel.get_n_lakes", "pywfm.IWFMModel.get_boundary_nodes", "pywfm.IWFMModel.get_n_nodes", "pywfm.IWFMModel.get_node_coordinates", "pywfm.IWFMModel.get_node_ids", "pywfm.IWFMModel.get_node_info", "pywfm.IWFMModel.order_boundary_nodes", "pywfm.IWFMModel.get_aquifer_bottom_elevation", "pywfm.IWFMModel.get_aquifer_top_elevation", "pywfm.IWFMModel.get_ground_surface_elevation", "pywfm.IWFMModel.get_n_layers", "pywfm.IWFMModel.get_stratigraphy_atXYcoordinate", "pywfm.IWFMModel.get_downstream_node_in_stream_reaches", "pywfm.IWFMModel.get_n_nodes_in_stream_reach", "pywfm.IWFMModel.get_n_rating_table_points", "pywfm.IWFMModel.get_n_reaches_upstream_of_reach", "pywfm.IWFMModel.get_n_stream_nodes", "pywfm.IWFMModel.get_n_stream_nodes_upstream_of_stream_node", "pywfm.IWFMModel.get_n_stream_reaches", "pywfm.IWFMModel.get_reach_outflow_destination", "pywfm.IWFMModel.get_reach_outflow_destination_types", "pywfm.IWFMModel.get_reaches_upstream_of_reach", "pywfm.IWFMModel.get_stream_bottom_elevations", "pywfm.IWFMModel.get_stream_network", "pywfm.IWFMModel.get_stream_node_ids", "pywfm.IWFMModel.get_stream_nodes_upstream_of_stream_node", "pywfm.IWFMModel.get_stream_rating_table", "pywfm.IWFMModel.get_stream_reach_groundwater_nodes", "pywfm.IWFMModel.get_stream_reach_ids", "pywfm.IWFMModel.get_stream_reach_names", "pywfm.IWFMModel.get_stream_reach_stream_nodes", "pywfm.IWFMModel.get_upstream_nodes_in_stream_reaches", "pywfm.IWFMModel.is_stream_upstream_node", "pywfm.IWFMModel.get_n_subregions", "pywfm.IWFMModel.get_subregion_ids", "pywfm.IWFMModel.get_subregion_name", "pywfm.IWFMModel.get_subregion_names", "pywfm.IWFMModel.get_subregions_by_element", "pywfm.IWFMModel.get_depth_to_water", "pywfm.IWFMModel.get_gwheads_all", "pywfm.IWFMModel.get_gwheads_foralayer", "pywfm.IWFMModel.get_subregion_ag_pumping_average_depth_to_water", "pywfm.IWFMModel.get_subsidence_all", "pywfm.IWFMModel.get_zone_ag_pumping_average_depth_to_water", "pywfm.IWFMModel.get_groundwater_hydrograph", "pywfm.IWFMModel.get_groundwater_hydrograph_at_node_and_layer", "pywfm.IWFMModel.get_groundwater_hydrograph_coordinates", "pywfm.IWFMModel.get_groundwater_hydrograph_ids", "pywfm.IWFMModel.get_groundwater_hydrograph_info", "pywfm.IWFMModel.get_groundwater_hydrograph_names", "pywfm.IWFMModel.get_hydrograph_type_list", "pywfm.IWFMModel.get_n_groundwater_hydrographs", "pywfm.IWFMModel.get_n_hydrograph_types", "pywfm.IWFMModel.get_n_stream_hydrographs", "pywfm.IWFMModel.get_n_subsidence_hydrographs", "pywfm.IWFMModel.get_n_tile_drain_hydrographs", "pywfm.IWFMModel.get_stream_hydrograph", "pywfm.IWFMModel.get_stream_hydrograph_coordinates", "pywfm.IWFMModel.get_stream_hydrograph_ids", "pywfm.IWFMModel.get_stream_hydrograph_names", "pywfm.IWFMModel.get_subsidence_hydrograph", "pywfm.IWFMModel.get_subsidence_hydrograph_coordinates", "pywfm.IWFMModel.get_subsidence_hydrograph_ids", "pywfm.IWFMModel.get_subsidence_hydrograph_names", "pywfm.IWFMModel.get_tile_drain_hydrograph_coordinates", "pywfm.IWFMModel.get_tile_drain_hydrograph_ids", "pywfm.IWFMModel.get_n_small_watersheds", "pywfm.IWFMModel.get_n_stream_inflows", "pywfm.IWFMModel.get_small_watershed_ids", "pywfm.IWFMModel.get_stream_inflow_ids", "pywfm.IWFMModel.get_stream_inflow_nodes", "pywfm.IWFMModel.get_budget_type_ids", "pywfm.IWFMModel.get_data_unit_type_id_area", "pywfm.IWFMModel.get_data_unit_type_id_length", "pywfm.IWFMModel.get_data_unit_type_ids", "pywfm.IWFMModel.get_data_unit_type_volume", "pywfm.IWFMModel.get_flow_destination_type_id", "pywfm.IWFMModel.get_flow_destination_type_id_element", "pywfm.IWFMModel.get_flow_destination_type_id_elementset", "pywfm.IWFMModel.get_flow_destination_type_id_gwelement", "pywfm.IWFMModel.get_flow_destination_type_id_lake", "pywfm.IWFMModel.get_flow_destination_type_id_outside", "pywfm.IWFMModel.get_flow_destination_type_id_streamnode", "pywfm.IWFMModel.get_flow_destination_type_id_subregion", "pywfm.IWFMModel.get_land_use_type_id_gen_ag", "pywfm.IWFMModel.get_land_use_type_id_native_riparian", "pywfm.IWFMModel.get_land_use_type_id_nonponded_ag", "pywfm.IWFMModel.get_land_use_type_id_refuge", "pywfm.IWFMModel.get_land_use_type_id_rice", "pywfm.IWFMModel.get_land_use_type_id_urban", "pywfm.IWFMModel.get_land_use_type_ids", "pywfm.IWFMModel.get_location_type_id_element", "pywfm.IWFMModel.get_location_type_id_gwheadobs", "pywfm.IWFMModel.get_location_type_id_lake", "pywfm.IWFMModel.get_location_type_id_node", "pywfm.IWFMModel.get_location_type_id_smallwatershed", "pywfm.IWFMModel.get_location_type_id_streamhydobs", "pywfm.IWFMModel.get_location_type_id_streamnode", "pywfm.IWFMModel.get_location_type_id_streamnodebud", "pywfm.IWFMModel.get_location_type_id_streamreach", "pywfm.IWFMModel.get_location_type_id_subregion", "pywfm.IWFMModel.get_location_type_id_subsidenceobs", "pywfm.IWFMModel.get_location_type_id_tiledrainobs", "pywfm.IWFMModel.get_location_type_id_zone", "pywfm.IWFMModel.get_location_type_ids", "pywfm.IWFMModel.get_supply_type_id_diversion", "pywfm.IWFMModel.get_supply_type_id_elempump", "pywfm.IWFMModel.get_supply_type_id_well", "pywfm.IWFMModel.get_zbudget_type_ids", "pywfm.IWFMModel.get_zone_extent_id_horizontal", "pywfm.IWFMModel.get_zone_extent_id_vertical", "pywfm.IWFMModel.get_zone_extent_ids", "pywfm.misc.IWFMMiscellaneous.get_budget_type_ids", "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_area", "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_length", "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_ids", "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_volume", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_element", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_elementset", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_gwelement", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_lake", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_outside", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_streamnode", "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_subregion", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_gen_ag", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_native_riparian", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_nonponded_ag", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_refuge", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_rice", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_indoor", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_outdoor", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids", "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids_1", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_bypass", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_diversion", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_element", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_gwheadobs", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_lake", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_node", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_smallwatershed", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamhydobs", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnode", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnodebud", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamreach", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subregion", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subsidenceobs", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_tiledrainobs", "pywfm.misc.IWFMMiscellaneous.get_location_type_id_zone", "pywfm.misc.IWFMMiscellaneous.get_location_type_ids", "pywfm.misc.IWFMMiscellaneous.get_location_type_ids_1", "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_diversion", "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_elempump", "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_well", "pywfm.misc.IWFMMiscellaneous.get_zbudget_type_ids", "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_horizontal", "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_vertical", "pywfm.misc.IWFMMiscellaneous.get_zone_extent_ids", "pywfm.IWFMModel.get_n_ag_crops", "pywfm.misc.IWFMMiscellaneous.close_log_file", "pywfm.misc.IWFMMiscellaneous.get_last_message", "pywfm.misc.IWFMMiscellaneous.log_last_message", "pywfm.misc.IWFMMiscellaneous.set_log_file", "pywfm.IWFMModel.plot_elements", "pywfm.IWFMModel.plot_nodes", "pywfm.IWFMModel._get_hydrograph", "pywfm.IWFMModel._get_hydrograph_coordinates", "pywfm.IWFMModel._get_hydrograph_ids", "pywfm.IWFMModel._get_location_ids", "pywfm.IWFMModel._get_n_hydrographs", "pywfm.IWFMModel._get_n_locations", "pywfm.IWFMModel._get_names", "pywfm.IWFMModel._get_supply_purpose", "pywfm.IWFMModel._get_supply_requirement_ag", "pywfm.IWFMModel._get_supply_requirement_urban", "pywfm.IWFMModel._get_supply_shortage_at_origin_ag", "pywfm.IWFMModel._get_supply_shortage_at_origin_urban", "pywfm.IWFMModel._is_time_interval_greater_or_equal", "pywfm.IWFMModel._string_to_list_by_array", "pywfm.IWFMModel._validate_iwfm_date", "pywfm.IWFMModel._validate_time_interval", "pywfm.misc.IWFMMiscellaneous._is_time_interval_greater_or_equal", "pywfm.misc.IWFMMiscellaneous._string_to_list_by_array", "pywfm.misc.IWFMMiscellaneous._validate_iwfm_date", "pywfm.misc.IWFMMiscellaneous._validate_time_interval", "pywfm.IWFMBudget", "pywfm.IWFMModel", "pywfm.IWFMZBudget", "pywfm.misc.IWFMMiscellaneous", "pywfm.IWFMModel.advance_state", "pywfm.IWFMModel.advance_time", "pywfm.IWFMModel.close_log_file", "pywfm.IWFMModel.get_last_message", "pywfm.IWFMModel.is_end_of_simulation", "pywfm.IWFMModel.log_last_message", "pywfm.IWFMModel.print_results", "pywfm.IWFMModel.read_timeseries_data", "pywfm.IWFMModel.read_timeseries_data_overwrite", "pywfm.IWFMModel.restore_pumping_to_read_values", "pywfm.IWFMModel.set_log_file", "pywfm.IWFMModel.set_preprocessor_path", "pywfm.IWFMModel.set_simulation_path", "pywfm.IWFMModel.set_supply_adjustment_max_iterations", "pywfm.IWFMModel.set_supply_adjustment_tolerance", "pywfm.IWFMModel.simulate_all", "pywfm.IWFMModel.simulate_for_an_interval", "pywfm.IWFMModel.simulate_for_one_timestep", "pywfm.IWFMModel.turn_supply_adjustment_on_off", "pywfm.IWFMModel.get_actual_stream_diversions_at_some_locations", "pywfm.IWFMModel.get_net_bypass_inflows", "pywfm.IWFMModel.get_stream_flow_at_location", "pywfm.IWFMModel.get_stream_flows", "pywfm.IWFMModel.get_stream_gain_from_groundwater", "pywfm.IWFMModel.get_stream_gain_from_lakes", "pywfm.IWFMModel.get_stream_inflows_at_some_locations", "pywfm.IWFMModel.get_stream_rainfall_runoff", "pywfm.IWFMModel.get_stream_reaches_for_stream_nodes", "pywfm.IWFMModel.get_stream_return_flows", "pywfm.IWFMModel.get_stream_riparian_evapotranspiration", "pywfm.IWFMModel.get_stream_stages", "pywfm.IWFMModel.get_stream_tile_drain_flows", "pywfm.IWFMModel.get_stream_tributary_inflows", "pywfm.IWFMModel.get_current_date_and_time", "pywfm.IWFMModel.get_n_intervals", "pywfm.IWFMModel.get_n_time_steps", "pywfm.IWFMModel.get_output_interval", "pywfm.IWFMModel.get_time_specs", "pywfm.IWFMModel.increment_time", "pywfm.IWFMModel.is_date_greater", "pywfm.misc.IWFMMiscellaneous.get_n_intervals", "pywfm.misc.IWFMMiscellaneous.increment_time", "pywfm.misc.IWFMMiscellaneous.is_date_greater", "pywfm.misc.IWFMMiscellaneous.get_version", "pywfm.IWFMZBudget.get_column_headers_for_a_zone", "pywfm.IWFMZBudget.get_values_for_a_zone", "pywfm.IWFMZBudget.get_values_for_some_zones_for_an_interval", "pywfm.IWFMZBudget.close_zbudget_file", "pywfm.IWFMZBudget.get_n_time_steps", "pywfm.IWFMZBudget.get_time_specs", "pywfm.IWFMZBudget.get_n_title_lines", "pywfm.IWFMZBudget.get_title_lines", "pywfm.IWFMZBudget.generate_zone_list_from_file", "pywfm.IWFMZBudget.get_n_zones", "pywfm.IWFMZBudget.get_zone_list", "pywfm.IWFMZBudget.get_zone_names", "API Reference", "IWFMMiscellaneous", "IWFMModel", "IWFMZBudget", "Tutorials", "PyWFM Tutorial 1", "PyWFM Tutorial 2", "PyWFM Tutorial 3"], "terms": {"current": [0, 23, 24, 25, 26, 27, 28, 29, 105, 106, 108, 256, 263, 264, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "version": [0, 1, 54, 89, 93, 235, 237, 299, 312], "0": [0, 1, 8, 10, 13, 14, 22, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 60, 61, 71, 73, 74, 77, 81, 83, 85, 86, 89, 92, 104, 105, 106, 107, 108, 109, 110, 111, 114, 122, 126, 227, 228, 233, 253, 257, 259, 261, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 293, 301, 302, 307, 317, 318], "2": [0, 7, 10, 13, 14, 22, 25, 26, 28, 29, 33, 34, 49, 51, 58, 59, 60, 61, 69, 70, 71, 76, 77, 83, 87, 89, 90, 91, 92, 94, 96, 99, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 122, 123, 124, 126, 127, 128, 130, 233, 277, 278, 281, 283, 286, 289, 293, 300, 301, 302, 307, 309, 310, 316, 319], "5": [0, 13, 33, 37, 38, 51, 70, 71, 77, 80, 89, 90, 92, 96, 108, 110, 113, 114, 118, 120, 124, 128, 278, 286, 300, 301], "i": [0, 11, 12, 14, 16, 18, 22, 27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 55, 57, 58, 72, 77, 81, 85, 91, 98, 103, 105, 106, 107, 108, 109, 230, 231, 235, 237, 239, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 263, 264, 265, 267, 268, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 305, 307, 312, 316, 317, 318, 319], "python": [0, 1, 2, 312, 316, 317], "packag": [0, 2, 3, 89], "expos": 0, "function": [0, 53, 57, 77, 312], "iwfm": [0, 1, 13, 14, 17, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 225, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 259, 261, 265, 270, 272, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 302, 303, 307, 308, 312, 317], "api": [0, 227, 228, 252, 253, 254, 255, 259, 261], "applic": [0, 17, 50, 59, 62, 272, 273, 303, 312, 317], "simul": [0, 13, 14, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 93, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 225, 232, 244, 248, 253, 257, 260, 262, 263, 264, 265, 268, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 312], "differ": [0, 3, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 270, 312], "than": [0, 13, 14, 93, 104, 227, 228, 244, 248, 259, 261, 270, 272, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302], "mai": [0, 3], "fail": 0, "silent": 0, "In": [0, 1, 58], "case": [0, 93, 227, 247, 251, 259], "user": [0, 3, 22, 34, 36, 49, 50, 51, 52, 62, 68, 76, 82, 104, 105, 106, 107, 108, 109, 133, 135, 136, 239, 270, 277, 278, 281, 286, 301, 302, 309, 310, 311, 312, 316, 317, 318, 319], "should": 0, "abl": 0, "rerun": 0, "model": [0, 3, 5, 6, 7, 8, 9, 10, 14, 15, 16, 17, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 225, 230, 231, 232, 235, 238, 240, 241, 242, 243, 253, 256, 257, 260, 263, 264, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 307, 308, 312], "same": [0, 264, 308], "includ": [0, 3, 61, 114, 290, 296, 300, 301, 302], "If": [0, 1, 34, 36, 49, 58, 77, 253, 302, 317], "you": 0, "do": [0, 77, 235, 237, 246, 247, 250, 251], "plan": 0, "instal": 0, "avail": [0, 16, 18, 53, 57, 232, 238, 292, 304, 305, 312, 318, 319], "new": 0, "now": 0, "an": [0, 3, 17, 23, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 39, 40, 48, 50, 51, 52, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 225, 227, 228, 245, 246, 247, 249, 250, 251, 255, 259, 261, 265, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 303, 317, 319], "indic": [0, 30, 31, 32, 45, 46, 47, 84, 85, 133, 135, 239, 240, 241, 242, 243, 264, 277, 278, 281, 286, 300, 302], "1273": [0, 1, 22, 307], "2015": [0, 1], "1403": 0, "1443": [0, 1], "1": [0, 9, 13, 14, 22, 24, 25, 26, 27, 30, 31, 32, 33, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 51, 58, 59, 60, 61, 63, 64, 66, 70, 71, 77, 79, 80, 81, 83, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 101, 103, 104, 105, 106, 108, 110, 111, 113, 114, 122, 124, 126, 128, 131, 133, 135, 136, 230, 231, 232, 233, 253, 270, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 293, 294, 296, 297, 300, 301, 302, 307, 310, 316, 318], "The": [0, 3, 58, 83, 90, 100, 103, 312], "librari": [0, 312], "4": [0, 13, 14, 33, 51, 58, 60, 61, 69, 70, 71, 77, 89, 90, 96, 104, 107, 108, 109, 112, 113, 114, 123, 124, 127, 128, 130, 131, 277, 278, 281, 286, 300, 301], "class": [0, 57, 252, 253, 254, 255], "iwfmmodel": [0, 296, 297, 298, 312, 317, 318, 319], "iwfmbudget": [0, 312], "iwfmzbudget": [0, 312], "iwfmmiscellan": [0, 312], "allow": [0, 34, 36, 49, 239, 263, 264, 312], "instanti": [0, 53, 55, 57, 253, 289], "directli": [0, 255], "thi": [0, 1, 2, 3, 13, 14, 27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 56, 57, 93, 105, 106, 107, 108, 109, 110, 111, 122, 126, 232, 233, 234, 235, 236, 237, 239, 255, 257, 263, 264, 265, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 300, 302, 308, 312, 316, 317, 318, 319], "wa": 0, "done": [0, 3], "addit": 0, "conveni": 0, "script": 0, "command": 0, "line": [0, 20, 21, 22, 306, 307], "interfac": 0, "cli": 0, "It": [0, 239, 255, 312], "also": [0, 58], "reduc": 0, "duplic": 0, "code": [0, 72, 227, 228, 259, 261, 317, 318, 319], "becaus": [0, 319], "each": [0, 5, 6, 7, 8, 9, 10, 15, 23, 24, 30, 31, 32, 34, 36, 45, 46, 47, 49, 60, 61, 64, 71, 73, 74, 75, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 104, 106, 108, 109, 115, 125, 129, 239, 242, 243, 245, 249, 255, 264, 283, 300, 311], "call": [0, 85, 105, 107, 108, 109, 227, 228, 239, 255, 259, 261, 289, 317], "ctype": [0, 245, 249], "cdll": 0, "when": [0, 27, 34, 35, 36, 38, 39, 48, 49, 53, 57, 105, 107, 108, 109, 228, 257, 261, 263, 264, 265, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 295, 298, 307], "can": [0, 3, 58, 72, 93, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317], "onc": 0, "inherit": 0, "other": [0, 14, 77, 227, 228, 259, 261, 312], "still": 0, "access": [0, 252, 253, 254, 255], "all": [0, 5, 6, 7, 8, 9, 10, 13, 19, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 53, 57, 60, 61, 71, 77, 104, 105, 106, 107, 108, 109, 262, 263, 264, 271, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 304, 305, 317, 318, 319], "via": 0, "wrap": 0, "procedur": [0, 227, 228, 235, 237, 252, 253, 254, 255, 259, 261, 265], "so": [0, 34, 36, 49, 53, 72, 239, 255], "doe": [0, 3, 253], "have": [0, 83, 90, 100, 103, 235, 237, 253], "deal": 0, "syntax": 0, "instead": 0, "familiar": 0, "work": [0, 3, 233, 234, 236, 312, 319], "standard": 0, "object": [0, 53, 55, 56, 57, 230, 231, 252, 253, 254, 255, 289, 312], "string": [0, 77, 238, 245, 246, 247, 249, 250, 251, 292, 312], "int": [0, 11, 12, 13, 14, 16, 18, 20, 21, 22, 23, 24, 26, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 58, 62, 63, 65, 66, 68, 76, 77, 79, 80, 81, 82, 83, 84, 87, 91, 92, 93, 94, 96, 98, 99, 101, 104, 106, 110, 111, 117, 118, 119, 120, 121, 122, 126, 132, 133, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 269, 274, 275, 277, 281, 283, 290, 291, 294, 296, 297, 300, 301, 302, 304, 306, 307, 309], "float": [0, 13, 14, 22, 26, 27, 28, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 77, 88, 105, 106, 108, 110, 111, 122, 126, 232, 240, 241, 242, 243, 270, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 301, 302, 307], "list": [0, 11, 13, 15, 19, 22, 23, 24, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 78, 79, 81, 84, 85, 86, 87, 93, 94, 95, 96, 97, 102, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 230, 231, 238, 240, 241, 242, 243, 245, 249, 264, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 307, 308, 309, 310, 311], "numpi": [0, 77, 318, 319], "arrai": [0, 5, 7, 8, 9, 10, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 232, 233, 234, 235, 239, 240, 241, 242, 243, 245, 249, 281, 283, 300, 310, 312], "mani": [0, 235, 237], "part": 0, "ar": [0, 2, 13, 23, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 40, 45, 46, 47, 49, 50, 51, 52, 57, 58, 77, 78, 79, 81, 84, 85, 86, 87, 91, 93, 94, 96, 97, 105, 106, 107, 109, 110, 111, 116, 122, 126, 232, 238, 239, 240, 241, 242, 243, 256, 275, 283, 300, 301, 307, 318, 319], "handl": 0, "intern": [0, 233, 234, 236, 265, 267, 268, 312], "provid": [0, 34, 36, 49, 58, 63, 65, 77, 82, 83, 90, 91, 104, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 233, 234, 236, 238, 239, 244, 246, 247, 248, 250, 251, 255, 264, 275, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 308, 312, 317], "onli": [0, 22, 34, 36, 49, 67, 83, 89, 91, 93, 111, 232, 233, 234, 236, 239, 274, 289, 317, 319], "few": 0, "piec": [0, 245, 249], "requir": [0, 2, 41, 42, 43, 44, 230, 231, 240, 241, 275], "inform": [0, 60, 61, 114, 289, 312], "obtain": [0, 13, 63, 65, 81, 87, 93, 96, 316, 318], "result": [0, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 34, 36, 49, 73, 74, 90, 100, 103, 105, 107, 108, 109, 262, 277, 278, 281, 286, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 312, 317], "contain": [0, 3, 13, 60, 61, 65, 71, 72, 77, 79, 94, 99, 100, 101, 103, 234, 238], "within": [0, 77, 98, 99, 101, 103], "dynam": [0, 34, 36, 49, 239], "dll": [0, 1, 34, 35, 36, 38, 48, 49, 53, 54, 105, 106, 107, 108, 109, 255, 289, 290, 294, 295, 296, 297, 298, 299, 317, 318, 319], "refer": [0, 300], "tutori": 0, "download": 0, "sourc": 0, "repositori": 0, "github": [0, 3], "sgma": 0, "data": [0, 3, 12, 13, 14, 16, 18, 22, 34, 36, 49, 57, 62, 68, 76, 80, 82, 88, 92, 105, 107, 108, 109, 133, 135, 136, 230, 231, 253, 263, 264, 277, 278, 281, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 312, 317, 318, 319], "tool": 0, "start": [1, 67, 72, 104, 245, 249, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "menu": 1, "type": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 264, 265, 266, 267, 268, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312], "appear": [1, 300], "To": [1, 2, 3, 85], "go": [1, 3], "http": [1, 3], "www": [1, 3], "com": [1, 3], "product": [1, 3], "individu": [1, 3], "n": 1, "env_nam": 1, "ha": [1, 3, 58, 73, 74, 83, 253, 260, 318, 319], "been": [1, 3, 260], "test": [1, 3], "7": [1, 3, 51, 89, 90, 96, 108, 113, 114, 124, 131, 225, 278, 286, 300, 301, 302], "9": [1, 3, 7, 40, 51, 89, 90, 96, 108, 113, 114, 116, 124, 233, 234, 236, 278, 286, 300, 301], "11": [1, 3, 13, 34, 36, 49, 51, 83, 89, 90, 91, 97, 106, 113, 114, 124, 239, 278, 286, 300, 301, 302, 319], "10": [1, 3, 13, 14, 19, 34, 36, 49, 51, 65, 74, 78, 79, 89, 90, 96, 106, 107, 108, 109, 110, 111, 113, 114, 116, 122, 124, 126, 131, 233, 234, 236, 239, 277, 278, 281, 286, 289, 293, 294, 295, 297, 298, 300, 301, 302, 305, 318], "c": [1, 3, 318, 319], "cadwr": 1, "sgmo": 1, "latest": 1, "want": [1, 3, 317], "guid": 2, "explain": [2, 316], "process": [2, 34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 300, 317], "us": [2, 11, 14, 16, 22, 24, 27, 30, 31, 32, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 63, 65, 72, 79, 80, 83, 89, 91, 92, 93, 98, 101, 104, 105, 106, 107, 108, 109, 110, 111, 122, 126, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 253, 255, 257, 263, 264, 265, 266, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 300, 301, 302, 307, 308, 312, 317, 318, 319], "pywfm": [2, 316], "sever": 2, "step": [2, 13, 14, 18, 34, 36, 49, 105, 106, 107, 108, 109, 257, 263, 264, 272, 277, 278, 281, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 317], "anaconda": [2, 3], "check": [3, 55, 98, 239, 246, 247, 250, 251, 260], "prompt": 3, "need": [3, 265], "either": [3, 58], "add": [3, 290, 296], "path": [3, 72, 230, 231, 252, 253, 254, 267, 268], "variabl": 3, "org": 3, "git": 3, "sgmomodel": 3, "alreadi": [3, 235, 237], "recommend": 3, "uninstal": 3, "first": [3, 13, 14, 57, 89, 93, 104, 264, 301, 302], "see": [3, 308], "between": [3, 104, 106, 270, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 307], "updat": [3, 274, 317], "zip": 3, "archiv": 3, "By": 3, "modul": [3, 312, 316], "upzip": 3, "place": 3, "locat": [3, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 40, 45, 46, 47, 77, 95, 98, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 233, 234, 235, 236, 237, 238, 240, 241, 242, 243, 267, 268, 275, 277, 278, 281, 286, 312, 317, 318, 319], "choic": 3, "pth": 3, "file": [3, 15, 16, 17, 22, 34, 36, 49, 53, 56, 57, 105, 107, 108, 109, 228, 229, 230, 231, 252, 253, 254, 261, 265, 266, 267, 268, 277, 278, 281, 286, 303, 307, 308], "save": [3, 230, 231, 317, 318, 319], "site": 3, "For": [3, 89, 300, 319], "exampl": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311], "arcgi": 3, "pro": 3, "clone": 3, "here": 3, "usernam": 3, "appdata": 3, "local": 3, "esri": 3, "conda": 3, "env": 3, "virtualenvironmentnam": 3, "lib": 3, "cnra": 3, "ca": 3, "gov": 3, "dataset": 3, "integr": 3, "water": [3, 20, 33, 34, 36, 37, 40, 49, 104, 107, 109, 239, 240, 241, 270, 274, 300, 301, 302], "flow": [3, 23, 24, 25, 27, 28, 29, 78, 79, 80, 81, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 264, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 312], "click": 3, "button": 3, "next": [3, 72], "depend": 3, "could": 3, "__init__": [3, 252, 253, 254, 255], "py": 3, "import": [3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 317, 318, 319], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 264, 265, 266, 267, 268, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 318, 319], "aquif": [5, 6, 7, 8, 9, 10, 73, 74, 75, 77, 105, 106, 108, 312, 316, 318], "horizont": [5, 6, 7, 8, 9, 10, 316], "hydraul": [5, 6, 7, 8, 9, 10], "conduct": [5, 6, 7, 8, 9, 10], "finit": [5, 6, 7, 8, 9, 10, 63, 64, 65, 66, 73, 74, 75, 77], "element": [5, 6, 7, 8, 9, 10, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 99, 101, 103, 109, 132, 134, 230, 235, 237, 239, 240, 241, 242, 243], "node": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 27, 28, 29, 33, 37, 40, 50, 51, 52, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 231, 232, 235, 237, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "layer": [5, 6, 7, 8, 9, 10, 62, 68, 73, 74, 75, 76, 77, 104, 105, 106, 108, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 232, 316], "np": [5, 6, 7, 8, 9, 10, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 58, 59, 63, 64, 69, 70, 73, 74, 75, 77, 78, 83, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 230, 231, 232, 233, 234, 235, 239, 240, 241, 242, 243, 245, 249, 264, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 310, 318, 319], "ndarrai": [5, 6, 7, 8, 9, 10, 23, 24, 25, 27, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 58, 59, 63, 64, 69, 70, 73, 74, 75, 77, 78, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 100, 103, 105, 107, 108, 109, 112, 113, 123, 124, 127, 128, 130, 131, 134, 135, 136, 230, 231, 235, 239, 240, 241, 242, 243, 264, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300, 301, 302, 310], "get_aquifer_vertical_k": [5, 6, 7, 8, 10], "vertic": [5, 6, 7, 8, 9, 10], "get_aquitard_vertical_k": [5, 6, 7, 8, 9], "aquitard": [5, 6, 7, 8, 9, 10], "get_aquifer_specific_yield": [5, 6, 7, 9, 10], "specif": [5, 6, 7, 8, 9, 10, 270], "yield": [5, 6, 7, 8, 9, 10], "get_aquifer_specific_storag": [5, 6, 8, 9, 10], "storag": [5, 6, 7, 8, 9, 10, 11, 300, 301, 302], "get_aquifer_paramet": [5, 7, 8, 9, 10], "paramet": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 58, 63, 65, 67, 72, 77, 79, 80, 81, 83, 87, 91, 92, 93, 96, 98, 101, 104, 105, 106, 108, 109, 110, 111, 122, 126, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 264, 266, 267, 268, 269, 270, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 294, 295, 296, 297, 298, 300, 301, 302, 307, 308], "get_aquifer_transmiss": [5, 6, 7, 8, 9, 10], "from": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 227, 228, 240, 241, 242, 243, 259, 261, 265, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311, 317, 318, 319], "pp_file": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 318, 319], "preprocessor": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 253, 267, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "preprocessor_main": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 318, 319], "IN": [5, 6, 7, 8, 9, 10, 22, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 307, 317, 318, 319], "sim_fil": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 318, 319], "simulation_main": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 318, 319], "50": [5, 105], "kill": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317, 318, 319], "close_log_fil": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 48, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 225, 277, 278, 281, 283, 286, 289, 291, 292, 293, 317, 318, 319], "tupl": [6, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 69, 77, 92, 112, 123, 127, 130, 230, 231, 233, 275, 281, 283, 293], "get_aquifer_horizontal_k": [6, 7, 8, 9, 10, 318], "hk": 6, "vk": 6, "avk": 6, "sy": 6, "ss": 6, "5e": 7, "01": [7, 13, 14, 19, 104, 110, 111, 122, 126, 239, 270, 289, 293, 294, 295, 297, 298, 301, 302, 305], "0e": 7, "05": [7, 13, 14, 22, 104, 106, 293, 301, 305, 307], "25": [8, 92, 111, 113, 114, 300, 301, 319], "location_id": [11, 12, 13, 14, 22], "length_unit": [11, 13, 14, 22], "ft": [11, 13, 14, 22, 110, 111, 122, 126, 300, 301, 302, 307, 319], "area_unit": [11, 13, 14, 22, 300, 301, 302, 307], "sq": [11, 13, 14, 22, 300, 301, 302, 307], "volume_unit": [11, 13, 14, 22, 300, 301, 302, 307], "cu": [11, 13, 14, 22, 300, 301, 302, 307], "column": [11, 12, 13, 14, 72, 114, 300, 301, 302], "header": [11, 300], "budget": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 252, 254, 300, 301, 303, 307, 308, 312], "identif": [11, 12, 13, 23, 24, 25, 26, 27, 28, 29, 33, 34, 36, 37, 40, 41, 42, 43, 44, 49, 64, 65, 101, 133, 134, 135, 136, 235, 237, 239, 240, 241, 242, 243, 264, 300, 301, 302, 307], "number": [11, 12, 13, 16, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 58, 59, 60, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 106, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 225, 230, 231, 232, 235, 236, 237, 239, 240, 241, 242, 243, 245, 249, 264, 269, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "e": [11, 12, 13, 15, 16, 85, 105, 107, 108, 109, 110, 111, 122, 126, 230, 231, 235, 237, 239, 256, 265, 289, 294, 297, 300, 307], "g": [11, 12, 13, 15, 16, 110, 111, 122, 126, 230, 231, 235, 237, 239, 256, 265, 300, 307], "subregion": [11, 12, 13, 15, 16, 22, 41, 42, 43, 44, 60, 61, 62, 67, 68, 76, 82, 95, 99, 100, 101, 102, 103, 107, 109, 115, 125, 129, 132, 134, 235, 237, 240, 241, 264], "id": [11, 13, 22, 23, 24, 25, 26, 27, 28, 29, 33, 35, 37, 38, 39, 40, 48, 50, 51, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 101, 102, 103, 104, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 134, 135, 136, 233, 234, 236, 239, 275, 277, 281, 283, 312], "stream": [11, 12, 13, 16, 23, 24, 25, 26, 27, 28, 29, 33, 37, 40, 62, 68, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 233, 234, 236, 253, 264, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 312], "reach": [11, 12, 13, 16, 78, 79, 81, 83, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 115, 125, 129, 132, 134, 260, 283], "etc": [11, 13, 15, 235, 237, 307], "str": [11, 13, 14, 19, 22, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 72, 101, 104, 106, 110, 111, 122, 126, 227, 229, 230, 231, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 259, 266, 267, 268, 272, 275, 281, 283, 289, 290, 293, 294, 295, 296, 297, 298, 300, 301, 302, 305, 307, 308], "default": [11, 13, 14, 22, 27, 30, 31, 32, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 49, 67, 77, 104, 105, 106, 108, 110, 111, 122, 126, 229, 230, 231, 253, 266, 275, 277, 278, 281, 283, 290, 296, 300, 301, 302, 307], "unit": [11, 13, 14, 22, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 77, 105, 106, 108, 110, 111, 122, 126, 230, 231, 232, 240, 241, 242, 243, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 300, 301, 302, 307], "length": [11, 13, 14, 21, 22, 77, 90, 92, 100, 103, 105, 108, 110, 111, 122, 126, 232, 233, 245, 246, 249, 250, 264, 286, 293], "one": [11, 13, 16, 23, 24, 34, 36, 40, 41, 42, 43, 44, 49, 58, 93, 105, 107, 108, 109, 232, 239, 257, 275, 277, 278, 281, 283, 286, 301, 302, 312, 317], "area": [11, 13, 14, 15, 16, 22, 264, 300, 301, 302, 307, 312], "volum": [11, 13, 14, 22, 110, 111, 122, 126, 232, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 287, 288, 300, 301, 302, 307], "bud_fil": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22], "gw": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 300, 301, 302], "hdf": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "gw_bud": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22], "time": [11, 13, 14, 18, 19, 34, 36, 49, 57, 104, 105, 106, 107, 108, 109, 244, 247, 248, 251, 256, 257, 263, 264, 272, 277, 278, 281, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 312, 317], "percol": [11, 13], "begin": [11, 13, 14, 105, 106, 110, 111, 122, 126, 232, 289, 290, 296], "end": [11, 13, 14, 67, 72, 104, 105, 106, 110, 111, 122, 126, 232, 260, 262, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 319], "deep": [11, 300, 301, 302], "gain": [11, 275, 276, 279, 280, 282, 284, 285, 287, 288], "recharg": 11, "lake": [11, 12, 15, 63, 64, 65, 66, 85, 86, 132, 134, 275, 276, 279, 280, 282, 284, 285, 287, 288], "boundari": [11, 62, 67, 68, 76, 82, 133, 135, 136, 264, 277, 278, 281, 286], "inflow": [11, 62, 68, 76, 82, 133, 135, 136, 264, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 300, 301, 302, 312], "subsid": [11, 95, 105, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 233, 234, 236], "subsurfac": 11, "irrig": 11, "tile": [11, 50, 51, 52, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 233, 234, 236, 275, 276, 279, 280, 282, 284, 285, 287, 288, 300, 301, 302, 312], "drain": [11, 50, 51, 52, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 233, 234, 236, 275, 276, 279, 280, 282, 284, 285, 287, 288, 312], "outflow": [11, 23, 24, 25, 26, 27, 28, 29, 78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 97, 283, 300, 301, 302], "pump": [11, 13, 14, 30, 31, 32, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 107, 109, 239, 242, 243, 265, 270, 274, 300, 301, 302, 312], "root": [11, 300, 301, 302], "zone": [11, 109, 300, 301, 302, 306, 307, 308, 309, 310, 311, 312], "net": [11, 275, 276, 279, 280, 282, 284, 285, 287, 288], "discrep": [11, 300, 301, 302], "cumul": 11, "close_budget_fil": [11, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22], "retriev": [12, 15, 21, 79, 110, 111, 122, 126, 232, 239, 277, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302, 307, 312], "specifi": [12, 13, 14, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 48, 49, 50, 51, 52, 62, 63, 64, 65, 66, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 98, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 235, 237, 239, 240, 241, 272, 277, 278, 281, 283, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 309, 310, 311, 317, 318, 319], "where": [12, 13, 14, 16, 18, 23, 24, 25, 27, 28, 29, 30, 31, 32, 40, 45, 46, 47, 50, 51, 52, 93, 103, 109, 111, 136, 240, 241, 242, 243, 264, 267, 268, 275, 277, 283, 301, 304, 305], "being": [12, 98, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 232, 239], "17": [12, 23, 24, 51, 85, 89, 90, 97, 105, 113, 114, 124, 278, 286, 300, 301], "begin_d": [13, 14, 104, 106, 110, 111, 122, 126, 232, 290, 296, 301], "none": [13, 14, 22, 87, 91, 104, 106, 110, 111, 122, 126, 229, 230, 231, 246, 247, 250, 251, 264, 265, 266, 267, 268, 274, 301, 302, 308], "end_dat": [13, 14, 104, 106, 110, 111, 122, 126, 232, 290, 296, 301], "output_interv": [13, 14, 19, 301, 302], "length_conversion_factor": [13, 14, 106, 110, 111, 122, 126, 232], "area_conversion_factor": [13, 14, 22, 301, 302, 307], "volume_conversion_factor": [13, 14, 110, 111, 122, 126, 232, 301, 302], "select": [13, 14, 77, 232, 275, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "interv": [13, 14, 19, 104, 105, 106, 244, 247, 248, 251, 272, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 304, 305, 319], "name": [13, 14, 15, 22, 72, 89, 95, 99, 100, 101, 102, 103, 114, 115, 125, 129, 229, 230, 231, 238, 252, 253, 254, 266, 300, 302, 308, 309, 310, 311], "date": [13, 14, 19, 104, 106, 110, 111, 122, 126, 232, 246, 250, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 305, 312, 319], "last": [13, 14, 104, 228, 261, 301], "valid": [13, 14, 230, 231, 239, 244, 246, 247, 248, 250, 251, 272, 290, 294, 296, 297, 302], "output": [13, 14, 22, 30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 72, 77, 105, 106, 107, 108, 109, 110, 111, 122, 126, 230, 231, 232, 240, 241, 242, 243, 245, 249, 277, 278, 281, 286, 292, 301, 302, 307, 317, 318, 319], "must": [13, 14, 58, 104, 255, 264, 272, 302, 308], "greater": [13, 14, 244, 248, 272, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302], "equal": [13, 14, 34, 36, 49, 72, 90, 100, 103, 104, 239, 244, 248, 272, 301, 302], "convers": [13, 14, 22, 77, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288], "factor": [13, 14, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 77, 105, 108, 240, 241, 242, 243, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 301, 302, 307], "convert": [13, 14, 22, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 105, 106, 108, 110, 111, 122, 126, 232, 240, 241, 242, 243, 245, 249, 301, 302, 307], "anoth": [13, 85, 86, 98], "datafram": [13, 14, 60, 61, 67, 71, 72, 89, 104, 114, 301, 302, 319], "more": [13, 23, 24, 34, 36, 40, 41, 42, 43, 44, 49, 93, 239, 275, 281, 283, 301, 302], "pd": [13, 14, 60, 61, 67, 71, 72, 89, 104, 114, 301, 318, 319], "get_values_for_a_column": 13, "singl": [13, 14, 58, 104, 105, 106, 273], "31": [13, 106, 113, 114, 290, 294, 296, 297, 300, 301, 302], "1999_24": 13, "00": [13, 14, 19, 22, 34, 49, 92, 104, 106, 107, 108, 109, 277, 278, 281, 286, 289, 290, 293, 294, 295, 296, 297, 298, 301, 305, 307], "09": [13, 14, 34, 49, 92, 104, 106, 107, 108, 109, 110, 111, 122, 126, 277, 278, 281, 286, 289, 290, 293, 295, 296, 298, 301, 302], "30": [13, 14, 34, 49, 104, 106, 107, 109, 110, 111, 113, 114, 122, 126, 277, 278, 281, 286, 289, 290, 293, 295, 296, 298, 300, 301, 302], "2000_24": [13, 34, 49, 104, 106, 107, 109, 277, 278, 281, 286, 293, 294, 297], "1999": 13, "409162e": 13, "06": [13, 108, 286, 290, 293, 295, 296, 298, 301, 302], "000000e": [13, 14], "591003e": 13, "02": [13, 14, 19, 34, 49, 104, 107, 109, 110, 111, 122, 126, 277, 281, 293, 294, 297, 301, 305], "774809e": 13, "3": [13, 14, 16, 20, 33, 34, 49, 51, 58, 59, 60, 61, 70, 71, 77, 81, 84, 86, 87, 89, 90, 92, 94, 96, 104, 107, 108, 109, 110, 111, 113, 114, 122, 124, 126, 128, 277, 278, 281, 283, 286, 294, 297, 300, 301, 302, 306, 316], "03": [13, 14, 19, 34, 49, 104, 107, 109, 110, 111, 122, 126, 277, 281, 293, 294, 295, 297, 298, 301, 305], "961015e": 13, "04": [13, 14, 19, 104, 107, 109, 277, 281, 293, 301, 305], "6": [13, 51, 52, 61, 69, 71, 89, 90, 92, 96, 108, 112, 113, 114, 121, 123, 124, 127, 130, 278, 286, 290, 296, 300, 301], "161024e": 13, "331": 13, "2000": [13, 14, 104, 106, 110, 111, 122, 126], "26": [13, 14, 104, 113, 114, 300, 301], "8": [13, 51, 61, 69, 71, 89, 90, 96, 105, 108, 110, 111, 112, 113, 114, 116, 122, 123, 124, 126, 127, 130, 278, 286, 300, 301], "134227e": 13, "905547e": [13, 14], "07": [13, 14, 19, 92, 108, 293, 301], "332": 13, "27": [13, 14, 52, 104, 113, 114, 300, 301], "144577e": 13, "892258e": [13, 14], "333": 13, "28": [13, 14, 104, 107, 109, 110, 111, 113, 114, 122, 126, 294, 295, 297, 298, 300, 301, 302], "153966e": 13, "879084e": [13, 14], "334": 13, "29": [13, 14, 34, 49, 104, 107, 109, 110, 111, 113, 114, 122, 126, 277, 281, 293, 294, 297, 300, 301, 302], "162175e": 13, "879133e": [13, 14], "335": 13, "168388e": 13, "879282e": [13, 14], "column_nam": [14, 300], "valu": [14, 34, 36, 49, 58, 77, 83, 86, 90, 100, 103, 106, 107, 109, 110, 111, 116, 122, 126, 230, 231, 232, 239, 245, 246, 247, 249, 250, 251, 265, 301, 302, 316, 319], "some": [14, 77, 316], "repres": [14, 63, 65, 92, 238, 244, 248, 270], "get_valu": 14, "1990": [14, 110, 111, 122, 126, 302], "3648": 14, "3649": 14, "3650": 14, "3651": [14, 107, 109], "3652": [14, 34, 49, 107, 109, 277, 281], "open": [15, 17, 57, 229, 266, 303], "region1": [15, 22, 101, 102, 302, 307, 311], "sr1": [15, 22, 101, 102], "region2": [15, 102, 302, 311], "sr2": [15, 102], "entir": [15, 16, 53, 57, 271, 317], "groundwat": [16, 22, 69, 70, 78, 79, 81, 84, 85, 86, 87, 89, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 232, 233, 234, 236, 256, 275, 276, 279, 280, 282, 283, 284, 285, 287, 288, 300, 307, 316, 319], "plu": [16, 30, 31, 32, 45, 46, 47, 242, 243], "close": [17, 56, 303], "3653": [18, 34, 49, 107, 109, 277, 278, 281, 286, 291, 304], "stamp": [19, 304, 305], "dates_list": [19, 305], "1990_24": [19, 34, 49, 107, 109, 277, 281, 289, 293, 294, 297, 305], "18": [19, 51, 89, 90, 105, 113, 114, 124, 278, 286, 300, 301], "1992_24": [19, 294, 297], "19": [19, 51, 89, 90, 113, 114, 124, 278, 286, 300, 301], "20": [19, 51, 89, 90, 113, 114, 124, 278, 286, 300, 301, 318], "21": [19, 50, 51, 89, 90, 113, 114, 124, 278, 286, 300, 301, 319], "1dai": [19, 290, 292, 293, 294, 296, 297, 305], "titl": [20, 21, 22, 300, 306, 307, 312], "charact": [21, 245, 249], "make": [21, 63, 64, 65, 66, 67], "up": [21, 22, 63, 64, 65, 66, 67, 230, 231], "242": [21, 105], "alternate_location_nam": 22, "desir": [22, 30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 105, 106, 108, 110, 111, 122, 126, 232, 240, 241, 242, 243, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 301, 302, 307], "show": 22, "option": [22, 253], "altern": 22, "given": [22, 73, 74, 75, 77, 83, 104, 114, 234, 236, 238, 265, 270, 292, 301, 302], "gener": [22, 53, 57, 228, 230, 231, 235, 237, 261, 308, 312], "acr": [22, 307], "29568e": [22, 110, 111, 122, 126, 307], "v2015": [22, 307], "FOR": [22, 307], "8610918912": [22, 307], "bypass_list": [23, 24], "correspond": [23, 24, 25, 26, 27, 28, 29, 33, 37, 40, 63, 78, 79, 81, 84, 85, 86, 87, 89, 93, 94, 96, 97, 99, 100, 101, 102, 103, 109, 116, 283], "bypass": [23, 24, 25, 26, 27, 28, 29, 275, 276, 279, 280, 282, 284, 285, 287, 288, 300, 312], "get_n_bypass": [23, 24, 25, 26, 27, 28], "get_bypass_id": [23, 24, 26, 27, 28, 29], "get_bypass_exports_destin": [23, 25, 26, 27, 28, 29], "destin": [23, 24, 25, 27, 28, 29, 30, 31, 32, 45, 46, 47, 78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 97, 242, 243, 283], "deliv": [23, 24, 25, 27, 28, 29], "get_bypass_outflow": [23, 24, 25, 26, 28, 29], "timestep": [23, 24, 25, 26, 27, 28, 29, 34, 36, 49, 105, 107, 108, 109, 256, 265, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317], "get_bypass_recoverable_loss_factor": [23, 24, 25, 26, 27, 29], "recover": [23, 24, 25, 26, 27, 28, 29, 300], "loss": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 45, 46, 47, 242, 243, 279], "nonrecover": [23, 24, 25, 26, 27, 28, 29], "13": [23, 24, 51, 89, 90, 113, 114, 116, 124, 131, 233, 234, 236, 278, 286, 300, 301], "export_stream_nod": 24, "occur": [24, 136, 275], "destination_typ": 24, "flag": [24, 34, 36, 49, 105, 239, 253, 274, 300], "destination_id": 24, "get_bypass_export_nod": [24, 25, 26, 27, 28, 29], "22": [24, 40, 58, 60, 61, 89, 90, 113, 114, 124, 278, 286, 300, 301], "bypass_id": [26, 28], "bypass_conversion_factor": 27, "method": [27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 56, 57, 58, 90, 100, 103, 105, 107, 108, 109, 232, 233, 234, 235, 236, 237, 239, 242, 252, 253, 254, 255, 257, 263, 264, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 300, 312, 318, 319], "intend": [27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 107, 109, 257, 263, 264, 271, 272, 273], "is_for_inquiri": [27, 30, 31, 32, 34, 35, 36, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 105, 107, 108, 109, 253, 257, 263, 264, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 317], "perform": [27, 35, 38, 39, 48, 107, 109, 239, 246, 247, 250, 251, 271], "get_bypass_nonrecoverable_loss_factor": [27, 28], "divers": [30, 31, 32, 33, 34, 36, 37, 40, 45, 46, 47, 49, 239, 242, 243, 264, 270, 274, 275, 276, 279, 280, 282, 284, 285, 287, 288, 300, 312], "conversion_factor": [30, 31, 32, 41, 42, 43, 44, 45, 46, 47, 240, 241], "suppli": [30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 239, 240, 241, 242, 243, 269, 270, 274], "shortag": [30, 31, 32, 45, 46, 47, 242, 243], "agricultur": [30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 107, 109, 225, 239, 240, 242, 243, 274, 275, 276, 279, 280, 282, 284, 285, 287, 288], "those": [30, 31, 32, 45, 46, 47, 242, 243], "ani": [30, 31, 32, 45, 46, 47, 242, 243], "convey": [30, 31, 32, 45, 46, 47, 242, 243], "ag": [30, 31, 32, 34, 36, 41, 42, 49, 239, 240, 241, 242, 243], "dure": [30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 107, 109, 256, 257, 260, 263, 264, 265, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 317], "get_ag_well_supply_shortage_at_origin": [30, 31, 45, 46, 47], "well": [30, 31, 32, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 239, 242, 243], "get_ag_elempump_supply_shortage_at_origin": [30, 32, 45, 47], "get_urban_diversion_supply_shortage_at_origin": [30, 31, 32, 46, 47], "urban": [30, 31, 32, 34, 36, 41, 42, 43, 44, 45, 46, 47, 49, 239, 241, 264, 274, 275, 276, 279, 280, 282, 284, 285, 287, 288], "get_urban_well_supply_shortage_at_origin": [30, 31, 32, 45, 46], "get_urban_elempump_supply_shortage_at_origin": [30, 31, 32, 45, 47], "element_pump": [31, 36, 46], "get_ag_diversion_supply_shortage_at_origin": [31, 32, 45, 46, 47], "surfac": [33, 37, 40, 73, 74, 75, 77, 104, 239], "get_n_divers": [33, 40], "get_stream_diversion_loc": [33, 37], "initi": [34, 36, 49, 239], "purpos": [34, 36, 49, 239], "both": [34, 36, 49, 225, 239, 270], "One": [34, 36, 49, 301, 302], "index": [34, 36, 49, 78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 97, 232, 233, 239, 245, 249, 264, 283, 293], "after": [34, 36, 49, 105, 107, 108, 109, 294, 297], "timeseri": [34, 36, 49, 62, 68, 76, 82, 133, 135, 136], "read": [34, 36, 49, 105, 107, 108, 109, 263, 264, 265, 277, 278, 281, 286, 317], "regardless": [34, 36, 49], "demand": [34, 36, 49, 239, 270, 274], "automat": [34, 36, 49, 239, 269, 270, 274], "adjust": [34, 36, 49, 239, 265, 269, 270, 274], "chang": [34, 36, 49, 239], "get_well_pumping_purpos": [34, 36], "get_element_pumping_purpos": [34, 36], "while": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "is_end_of_simul": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "advanc": [34, 36, 49, 105, 107, 108, 109, 256, 257, 277, 278, 281, 286, 317], "forward": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "advance_tim": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 289, 317], "seri": [34, 36, 49, 105, 107, 108, 109, 263, 264, 277, 278, 281, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 317], "input": [34, 36, 49, 62, 68, 76, 82, 105, 107, 108, 109, 133, 135, 136, 245, 246, 247, 249, 250, 251, 253, 265, 267, 268, 277, 278, 281, 286], "read_timeseries_data": [34, 36, 49, 105, 107, 108, 109, 264, 277, 278, 281, 286, 317], "get": [34, 36, 49, 105, 107, 108, 109, 235, 237, 278, 286], "print": [34, 36, 49, 87, 91, 105, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 228, 229, 261, 262, 266, 277, 278, 281, 286, 317], "hydrolog": [34, 36, 49, 105, 107, 108, 109, 256, 265, 277, 278, 281, 286, 317], "simulate_for_one_timestep": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "print_result": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "state": [34, 36, 49, 105, 107, 108, 109, 256, 277, 278, 281, 286, 317], "system": [34, 36, 49, 105, 107, 108, 109, 256, 265, 277, 278, 281, 286, 317], "advance_st": [34, 36, 49, 105, 107, 108, 109, 277, 278, 281, 286, 317], "AT": [34, 49, 107, 109, 277, 278, 281, 286], "get_well_id": [35, 38, 39], "get_n_wel": [35, 38, 48], "get_n_element_pump": [35, 39, 48], "get_diversion_purpos": [36, 49], "get_diversion_id": [37, 40], "get_element_pump_id": [38, 39, 48], "get_well_coordin": [39, 48], "x": [39, 48, 61, 68, 69, 70, 71, 73, 74, 75, 77, 104, 105, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 230, 231, 233, 318, 319], "y": [39, 48, 61, 68, 69, 70, 71, 73, 74, 75, 77, 104, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 230, 231, 233, 318, 319], "coordin": [39, 48, 61, 68, 69, 70, 71, 73, 74, 75, 77, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 233], "diversion_loc": [40, 275], "export": 40, "12": [40, 51, 89, 90, 106, 113, 114, 116, 124, 233, 234, 236, 278, 286, 290, 294, 296, 297, 300, 301], "get_supply_requirement_ag_subregion": [41, 43, 44], "get_supply_requirement_urban_el": [41, 42, 44], "get_supply_requirement_urban_subregion": [41, 42, 43], "get_supply_requirement_ag_el": [42, 43, 44], "get_element_pump_purpos": 49, "get_tile_drain_id": [50, 52], "get_tile_drain_nod": [50, 51], "get_n_tile_drain": [51, 52], "14": [51, 89, 90, 113, 114, 124, 278, 286, 300, 301], "15": [51, 89, 90, 92, 113, 114, 124, 278, 286, 300, 301], "16": [51, 78, 89, 90, 113, 114, 124, 131, 278, 286, 300, 301], "48": 52, "69": 52, "90": 52, "111": 52, "132": 52, "153": [52, 105], "174": 52, "195": 52, "216": 52, "237": 52, "258": 52, "279": 52, "300": [52, 88], "321": [52, 105], "342": 52, "363": 52, "384": [52, 105], "405": 52, "426": 52, "delet": [53, 253], "binari": [53, 57], "iw_modeldata_forinquiri": 53, "bin": [53, 290, 294, 295, 296, 297, 298], "exist": [53, 57, 253], "creat": [53, 57], "true": [55, 67, 98, 105, 230, 231, 244, 248, 253, 260, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "otherwis": [55, 81, 244, 248, 260, 317], "fals": [55, 67, 230, 231, 244, 248, 260, 290, 295, 296, 298], "bool": [55, 98, 105, 253, 260], "termin": [56, 270], "associ": 56, "clear": 56, "memori": [56, 57], "relat": [57, 312], "alloc": 57, "instanc": [57, 252, 253, 254, 255], "A": [57, 72, 86], "quicker": 57, "load": 57, "subsequ": 57, "element_id": 58, "counter": 58, "clockwis": 58, "direct": 58, "get_element_id": [58, 60, 62, 109, 134], "compos": 58, "fourth": 58, "order": [58, 60, 72, 264], "get_n_el": [58, 59, 60, 68, 76, 103, 132], "23": [58, 60, 61, 78, 82, 89, 90, 106, 113, 114, 119, 124, 278, 286, 300, 301], "get_element_config": [59, 60, 62], "398": 59, "399": [59, 60, 61], "400": [59, 60, 61, 62, 319], "configur": [60, 61], "get_subregions_by_el": [60, 99, 100, 101, 109], "ie": [60, 61], "sr": [60, 61], "nodenum": [60, 61], "nodeid": [60, 61, 71, 104], "node1": [60, 61], "node2": [60, 61], "node3": [60, 61], "node4": [60, 61], "1595": [60, 61], "439": [60, 61, 70, 71, 106], "1596": [60, 61], "419": [60, 61], "1597": [60, 61], "420": [60, 61], "1598": [60, 61], "441": [60, 61, 68, 70, 71, 104], "1599": [60, 61], "440": [60, 61, 70, 71, 106], "get_element_info": 61, "get_node_info": [61, 318, 319], "1804440": [61, 69, 71, 104, 127], "14435520": [61, 69, 71, 104, 112, 114, 123, 130], "1811001": [61, 69, 71, 127], "14442081": [61, 112, 114, 123], "1922548": [61, 69, 71], "14566752": [61, 69, 71, 104, 112, 114, 123], "1929110": [61, 69, 71], "14560190": [61, 112, 114, 123], "1935672": [61, 69, 71, 104, 127], "get_n_nod": [62, 69, 70, 71, 76, 82, 132], "get_n_subregion": [62, 68, 76, 82, 100, 101, 102, 103, 132], "get_n_stream_nod": [62, 68, 76, 80, 83, 88, 90, 91, 92, 132], "get_n_stream_inflow": [62, 68, 76, 82, 135, 136], "get_n_lay": [62, 68], "lake_id": [63, 65], "get_n_lak": [63, 64, 65, 132], "get_lake_id": [63, 65, 66, 134], "get_n_elements_in_lak": [63, 64, 66], "grid": [63, 64, 65, 66], "cell": [63, 64, 65, 66], "169": 63, "170": 63, "171": 63, "188": 63, "189": 63, "190": 63, "207": 63, "208": 63, "209": 63, "210": [63, 104], "get_elements_in_lak": [64, 65, 66], "remove_dupl": 67, "boolean": [67, 230, 231, 244, 248, 290, 295, 296, 298, 300], "uniqu": [67, 319], "get_node_coordin": [68, 70, 71], "get_node_id": [68, 69, 71, 134], "1817563": [69, 71, 127], "1824124": [69, 71], "1830686": [69, 71], "1837248": [69, 130], "1902864": 69, "1909425": [69, 71], "1915987": [69, 71], "437": [70, 71], "438": [70, 71], "436": 71, "static": 72, "in_boundary_nod": 72, "start_node_column": 72, "end_node_column": 72, "take": 72, "unord": 72, "two": [72, 83, 290, 296], "them": [72, 316, 318, 319], "previou": [72, 256], "ad": 72, "build": 72, "matplotlib": [72, 230, 231, 318, 319], "patch": 72, "panda": [72, 318, 319], "sequenc": 72, "continu": 72, "set": [72, 240, 241, 267, 268, 269, 270, 277, 278, 281, 286], "bottom": [73, 74, 75, 77, 80, 88, 92], "elev": [73, 74, 75, 77, 80, 88, 92, 104], "shape": [73, 74, 318], "n_layer": [73, 74, 105, 108], "n_node": [73, 74, 105, 108], "get_ground_surface_elev": [73, 74, 77, 104], "ground": [73, 74, 75, 77, 104], "get_aquifer_top_elev": [73, 75, 77], "top": [73, 74, 75, 77], "get_stratigraphy_atxycoordin": [73, 74, 75, 114], "stratigraphi": [73, 74, 75, 77, 114], "110": [73, 114], "100": [73, 77, 114], "get_aquifer_bottom_elev": [74, 75, 77], "500": [74, 75, 77, 114], "270": [74, 75, 88, 105], "250": [74, 75], "everi": [75, 89, 104, 105, 106, 108, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288], "fact": 77, "output_opt": 77, "spatial": 77, "how": [77, 316, 317, 318, 319], "combin": 77, "gse": [77, 114], "integ": [77, 90, 91, 93, 94, 96, 100, 103, 113, 124, 128, 131, 134, 135, 136, 233, 234, 236], "defin": [77, 270, 311], "abov": 77, "zero": 77, "fall": 77, "feet": 77, "meter": 77, "2808": 77, "590000": 77, "4440000": 77, "downstream": [78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 97, 283], "get_n_stream_reach": [78, 79, 81, 85, 86, 87, 93, 94, 96, 97, 132, 283], "get_stream_reach_id": [78, 79, 81, 84, 85, 86, 87, 89, 93, 96, 97, 134, 283], "get_n_nodes_in_stream_reach": [78, 81, 84, 85, 86, 87, 93, 94, 96, 97, 283], "get_stream_reach_groundwater_nod": [78, 79, 81, 84, 85, 86, 87, 89, 94, 96, 97, 283], "get_stream_reach_stream_nod": [78, 79, 81, 84, 85, 86, 87, 89, 93, 94, 97, 283], "get_stream_reaches_for_stream_nod": [78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 97], "get_upstream_nodes_in_stream_reach": [78, 79, 81, 84, 85, 86, 87, 93, 94, 96, 283], "upstream": [78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 96, 97, 98, 283], "get_n_reaches_upstream_of_reach": [78, 79, 84, 85, 86, 87, 93, 94, 96, 97, 283], "immedi": [78, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 96, 97, 283], "get_reaches_upstream_of_reach": [78, 79, 81, 84, 85, 86, 93, 94, 96, 97, 283], "get_reach_outflow_destin": [78, 79, 81, 84, 86, 87, 93, 94, 96, 97, 283], "get_reach_outflow_destination_typ": [78, 79, 81, 84, 85, 87, 93, 94, 96, 97, 283], "reach_id": [79, 81, 87, 93, 94, 96], "get_downstream_node_in_stream_reach": [79, 81, 84, 85, 86, 87, 93, 94, 96, 97, 283], "stream_node_id": [80, 83, 91, 92, 277, 278, 283, 286], "point": [80, 88, 92], "rate": [80, 88, 92, 107, 109, 265], "tabl": [80, 88, 92], "determin": [80, 83, 91, 98, 106, 244, 248, 300], "get_stream_rating_t": [80, 88], "get_stream_node_id": [80, 82, 83, 88, 91, 92, 134, 278, 286], "get_stream_bottom_elev": [80, 92], "channel": [80, 88, 92], "tributari": 81, "confluenc": [81, 83], "get_n_stream_nodes_upstream_of_stream_nod": [82, 90, 91], "get_stream_nodes_upstream_of_stream_nod": [82, 83, 90], "int32": 83, "most": [83, 91, 97], "exit": 85, "find": 85, "out": [85, 229, 262, 266], "outsid": 85, "domain": [85, 86], "necessari": [85, 265], "leav": 86, "get_n_rating_table_point": [88, 92], "298": [88, 105], "296": 88, "294": 88, "292": 88, "290": [88, 105], "288": 88, "286": [88, 89, 93], "284": 88, "282": 88, "280": 88, "278": 88, "276": 88, "274": 88, "272": 88, "268": 88, "266": [88, 107, 109], "264": [88, 89, 93], "262": 88, "260": [88, 105], "wide": [89, 93], "featur": [89, 233, 236, 238, 270, 316], "streamreach": 89, "streamnod": 89, "groundwaternod": 89, "reachnam": 89, "433": [89, 93], "reach1": [89, 95], "412": [89, 93], "391": [89, 93], "370": [89, 93], "349": [89, 93], "328": [89, 93], "307": [89, 93], "265": [89, 93], "222": 89, "reach2": [89, 95], "223": 89, "202": 89, "181": [89, 111], "160": 89, "139": 89, "reach3": [89, 95], "118": 89, "97": 89, "76": 89, "55": 89, "34": [89, 113, 114], "stage": [92, 277, 278, 281, 286], "respect": [92, 107, 109, 230, 231], "00000000e": [92, 108], "34988160e": 92, "85058656e": 92, "08": [92, 108, 301], "64450304e": 92, "59151408e": 92, "identifi": [93, 99, 100, 101, 103, 238], "As": 93, "get_stream_id": 94, "get_subregion_nam": [95, 99, 100, 103, 115, 125, 129], "get_groundwater_hydrograph_nam": [95, 114, 125, 129], "hydrograph": [95, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 232, 233, 234, 236, 312], "get_stream_hydrograph_nam": [95, 115, 129], "get_subsidence_hydrograph_nam": [95, 115, 125], "stream_node_1": 98, "stream_node_2": 98, "network": 98, "get_subregion_id": [99, 101, 102, 103, 134], "subregion_id": [99, 100, 101, 102, 103], "assign": [103, 239], "layer_numb": [104, 106, 111, 232], "calcul": [104, 109], "depth": [104, 107, 109], "less": [104, 270, 275, 295, 298], "total": 104, "start_dat": 104, "format": [104, 246, 247, 250, 251, 289, 290, 294, 295, 296, 297, 298, 308, 318, 319], "head": [104, 105, 106, 108, 110, 111, 232, 256, 300, 316], "get_gwheads_foralay": [104, 105, 319], "over": [104, 105, 106], "dtw": 104, "13225": 104, "150": 104, "13226": 104, "13227": 104, "13228": 104, "13229": 104, "end_of_timestep": 105, "head_conversion_factor": 105, "d": [105, 106, 108, 110, 111, 122, 126, 232], "design": [105, 108, 239, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 312], "simulate_for_one_time_step": [105, 108], "get_subsidence_al": 105, "91608535": 105, "227": 105, "00867495": 105, "167": 105, "74555991": 105, "105": 105, "91475847": 105, "59": 105, "04810571": 105, "39": [105, 113, 114], "79054585": 105, "65187809": 105, "91": [105, 301], "00726903": 105, "29920797": 105, "226": 105, "15115974": 105, "271": 105, "19315214": 105, "2607369": 105, "303": 105, "35660843": 105, "311": 105, "31169633": 105, "305": 105, "90957475": 105, "35463253": 105, "355": 105, "7188358": 105, "48837442": 105, "386": 105, "49402002": 105, "12576488": 105, "93821192": 105, "6193171": 105, "49": 105, "84626859": 105, "106": 105, "55261355": 105, "173": 105, "83027192": 105, "241": 105, "06147185": 105, "302": [105, 110], "07195334": 105, "38004499": 105, "182": 105, "36353339": 105, "135": 105, "25658569": 105, "113": 105, "92664973": 105, "148": 105, "55304883": 105, "213": 105, "27613546": 105, "283": 105, "62446262": 105, "350": 105, "289": 105, "86590389": 105, "87158528": 105, "06977264": 105, "88058171": 105, "13198455": 105, "32285765": 105, "40": [105, 113, 114], "07646505": 105, "94091062": 105, "26247611": 105, "4724245": 105, "06276796": 105, "90750721": 105, "56535206": 105, "12285555": 105, "18101766": 105, "9841988": 105, "44444412": 105, "67939387": 105, "33129245": 105, "27373876": 105, "79083667": 105, "240": 105, "64972466": 105, "0367555": 105, "18629887": 105, "68916297": 105, "136": 105, "05482407": 105, "115": 105, "70455947": 105, "149": 105, "58589408": 105, "48004259": 105, "3592372": 105, "345": 105, "65879897": 105, "style": [106, 110, 111, 122, 126, 232, 294, 297], "multipli": [106, 110, 111, 122, 126, 232], "get_time_spec": [106, 289, 290, 291, 292, 294, 295, 296, 297, 298, 304], "get_gwheads_al": [106, 108], "preprocessor_fil": 106, "simulation_fil": 106, "get_gwheadsall_foralay": 106, "1980_24": 106, "1980": 106, "458": 106, "57": 106, "460": 106, "32": [106, 113, 114], "457": 106, "86": 106, "686": 106, "42": [106, 113, 114, 117], "459": 106, "462": 106, "38": [106, 113, 114], "689": 106, "435": 106, "75": 106, "99": 106, "650": 106, "78": 106, "weight": [107, 109], "averag": [107, 109], "run": [107, 109, 256, 260, 265, 274, 289, 318, 319], "get_zone_ag_pumping_average_depth_to_wat": 107, "zonal": [107, 109], "avg_dtw": [107, 109], "999": [107, 109], "03824182": [107, 109], "19381051": [107, 109], "34883635": [107, 109], "subsidence_conversion_factor": 108, "12421873e": 108, "73373541e": 108, "63445271e": 108, "04725462e": 108, "92948676e": 108, "86274019e": 108, "11426842e": 108, "21177410e": 108, "62634163e": 108, "59144202e": 108, "22135411e": 108, "85916107e": 108, "56677111e": 108, "15424348e": 108, "17841866e": 108, "36860631e": 108, "07195572e": 108, "52772869e": 108, "18096043e": 108, "84415247e": 108, "02272008e": 108, "16997563e": 108, "97240436e": 108, "66264783e": 108, "44911097e": 108, "84703993e": 108, "14116606e": 108, "77884442e": 108, "07113403e": 108, "81570268e": 108, "87282031e": 108, "94854603e": 108, "18511495e": 108, "61317621e": 108, "07439096e": 108, "06630654e": 108, "30119974e": 108, "51566730e": 108, "43953427e": 108, "77063898e": 108, "31092635e": 108, "42168088e": 108, "20884863e": 108, "89134140e": 108, "49219032e": 108, "60718472e": 108, "37134674e": 108, "80396324e": 108, "elements_list": 109, "zones_list": 109, "get_subregion_ag_pumping_average_depth_to_wat": 109, "groundwater_hydrograph_id": 110, "taf": [110, 111, 122, 126], "get_n_hydrograph_typ": [110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_hydrograph_type_list": [110, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 232], "get_n_groundwater_hydrograph": [110, 111, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_n_subsidence_hydrograph": [110, 111, 112, 113, 116, 117, 118, 119, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_n_stream_hydrograph": [110, 111, 112, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_n_tile_drain_hydrograph": [110, 111, 112, 113, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 130, 131], "get_groundwater_hydrograph_id": [110, 111, 112, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_subsidence_hydrograph_id": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 130, 131], "get_stream_hydrograph_id": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 130, 131], "get_tile_drain_hydrograph_id": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130], "get_groundwater_hydrograph_coordin": [110, 111, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_subsidence_hydrograph_coordin": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 128, 130, 131], "get_stream_hydrograph_coordin": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 130, 131], "observ": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_tile_drain_hydrograph_coordin": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 131], "get_groundwater_hydrograph_at_node_and_lay": [110, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "get_subsidence_hydrograph": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131], "get_stream_hydrograph": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 130, 131], "get_tile_drain_hydrograph": [110, 111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "dtype": [110, 111, 122, 126], "datetime64": [110, 111, 122, 126], "9855": 110, "9691": 110, "9509": 110, "0719": 110, "072": 110, "node_id": 111, "get_groundwater_hydrograph": [111, 112, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131], "180": 111, "9377": 111, "0441": 111, "1501": 111, "1883179": [112, 114, 123], "14553628": [112, 114, 123], "14547067": [112, 114, 123], "14540505": [112, 114, 123], "14533944": [112, 114, 123, 130], "14527382": [112, 114, 123], "14520820": [112, 114, 123], "14514259": [112, 114, 123, 130], "14507697": [112, 114], "14501136": [112, 114, 123], "14494574": [112, 114, 123, 130], "14488012": [112, 114, 123, 127], "14481451": [112, 114, 123, 127], "14474889": [112, 114, 123, 130], "14468328": [112, 114, 123], "14461766": [112, 114, 123], "14455204": [112, 114, 123, 130], "14448643": [112, 114, 123], "24": [113, 114, 300, 301], "33": [113, 114], "35": [113, 114], "36": [113, 114], "37": [113, 114], "41": [113, 114], "btm_lay1": 114, "btm_lay2": 114, "btm_layn": 114, "gwhyd1": [114, 115], "gwhyd2": [114, 115], "gwhyd3": [114, 115], "gwhyd4": [114, 115], "gwhyd5": [114, 115], "gwhyd6": [114, 115], "gwhyd7": [114, 115], "gwhyd8": [114, 115], "gwhyd9": [114, 115], "gwhyd10": [114, 115], "gwhyd11": [114, 115], "gwhyd12": [114, 115], "gwhyd13": [114, 115], "gwhyd14": [114, 115], "gwhyd15": [114, 115], "gwhyd16": [114, 115], "gwhyd17": [114, 115], "gwhyd18": [114, 115], "gwhyd19": [114, 115], "gwhyd20": [114, 115], "gwhyd21": [114, 115], "gwhyd22": [114, 115], "gwhyd23": [114, 115], "gwhyd24": [114, 115], "gwhyd25": [114, 115], "gwhyd26": [114, 115], "gwhyd27": [114, 115], "gwhyd28": [114, 115], "gwhyd29": [114, 115], "gwhyd30": [114, 115], "gwhyd31": [114, 115], "gwhyd32": [114, 115], "gwhyd33": [114, 115], "gwhyd34": [114, 115], "gwhyd35": [114, 115], "gwhyd36": [114, 115], "gwhyd37": [114, 115], "gwhyd38": [114, 115], "gwhyd39": [114, 115], "gwhyd40": [114, 115], "gwhyd41": [114, 115], "gwhyd42": [114, 115], "get_stream_reach_nam": [115, 125, 129], "kei": 116, "dict": [116, 302], "produc": 118, "stream_hydrograph_id": 122, "75741603": 122, "86810122": 122, "85301215": 122, "31559001": 122, "1876617": 123, "strmhyd_1": 125, "strmhyd_2": 125, "strmhyd_3": 125, "strmhyd_4": 125, "strmhyd_5": 125, "strmhyd_6": 125, "strmhyd_7": 125, "strmhyd_8": 125, "strmhyd_9": 125, "strmhyd_10": 125, "strmhyd_11": 125, "strmhyd_12": 125, "strmhyd_13": 125, "strmhyd_14": 125, "strmhyd_15": 125, "strmhyd_16": 125, "strmhyd_17": 125, "strmhyd_18": 125, "strmhyd_19": 125, "strmhyd_20": 125, "strmhyd_21": 125, "strmhyd_22": 125, "strmhyd_23": 125, "subsidence_hydrograph_id": 126, "0152": 126, "0153": 126, "0189": 126, "1863494": 127, "subshyd1": 129, "subshyd2": 129, "subshyd3": 129, "subshyd4": 129, "subshyd5": 129, "small": [132, 134, 275, 276, 279, 280, 282, 284, 285, 287, 288, 300, 312], "watersh": [132, 134, 275, 276, 279, 280, 282, 284, 285, 287, 288, 300, 312], "get_stream_inflow_nod": [133, 135], "receiv": [133, 135, 136], "get_stream_inflow_id": [133, 136], "crop": 225, "non": [225, 245, 249, 264], "pond": [225, 264, 275, 276, 279, 280, 282, 284, 285, 287, 288], "error": [227, 228, 229, 246, 247, 250, 251, 259, 261, 266], "messag": [227, 228, 229, 253, 259, 261, 266, 312], "statu": [227, 228, 259, 261], "log": [228, 229, 253, 261, 266, 312], "file_nam": [229, 230, 231, 266], "text": [229, 266, 307, 308], "warn": [229, 266], "write": [229, 266], "ax": [230, 231, 318, 319], "cmap": [230, 231], "jet": [230, 231], "scale_factor": [230, 231], "10000": [230, 231], "buffer_dist": [230, 231], "write_to_fil": [230, 231], "plot": [230, 231, 312], "predefin": [230, 231], "plt": [230, 231, 318, 319], "figur": [230, 231], "displai": [230, 231, 307], "color": [230, 231], "colormap": [230, 231], "map": [230, 231], "normal": [230, 231], "rgba": [230, 231], "scale": [230, 231], "limit": [230, 231], "axi": [230, 231], "round": [230, 231], "min": [230, 231], "max": [230, 231], "down": [230, 231], "nearest": [230, 231], "whole": [230, 231], "buffer": [230, 231], "extens": [230, 231], "pyplot": [230, 231, 318, 319], "savefig": [230, 231], "hydrograph_typ": 232, "hydrograph_index": 232, "privat": [232, 233, 234, 235, 236, 237, 239, 242, 312], "location_type_id": [233, 234, 235, 236, 237, 238, 240, 241], "note": [233, 234, 236, 245, 249], "particular": [235, 237], "dedic": [235, 237], "location_typ": 238, "empti": 238, "feature_typ": 238, "supply_type_id": [239, 242, 243], "supply_indic": 239, "thei": 239, "serv": 239, "which": [239, 312], "chosen": 239, "would": 239, "assum": [239, 270, 317, 318, 319], "locations_list": [240, 241], "supply_location_list": [242, 243], "supply_conversion_factor": [242, 243], "time_interv": [244, 247, 248, 251, 272, 290, 293, 294, 296, 297], "simulation_time_interv": [244, 248], "compar": [244, 248, 295, 298], "in_str": [245, 249], "starting_position_arrai": [245, 249], "length_output_list": [245, 249], "base": [245, 246, 249, 250, 255, 270, 300, 308, 312], "posit": [245, 249], "c_int": [245, 249], "c_long": [245, 249], "placehold": [245, 249], "slice": [245, 249], "dt": [246, 250], "mm": [246, 250, 289, 290, 294, 295, 296, 297, 298], "dd": [246, 250, 289, 290, 294, 295, 296, 297, 298], "yyyy_hh": [246, 250, 289, 290, 294, 295, 296, 297, 298], "rais": [246, 247, 250, 251], "pass": [246, 247, 250, 251], "sensit": [247, 251], "budget_file_nam": 252, "interact": [252, 253, 254, 255, 312, 317], "fortran": [252, 253, 254, 255], "preprocessor_file_nam": 253, "simulation_file_nam": 253, "has_routed_stream": 253, "delete_inquiry_data_fil": 253, "log_fil": 253, "rout": 253, "inquiri": [253, 318, 319], "zbudget_file_nam": 254, "zbudget": [254, 300, 301, 302, 304, 305, 306, 307, 308, 309, 310, 311, 312], "miscellan": 255, "meant": 255, "self": 255, "through": [255, 316, 317, 318, 319], "subclass": 255, "switch": 256, "period": [260, 271, 301, 302], "read_timeseries_data_overwrit": [263, 317], "overwrit": [263, 264], "certain": [263, 264, 317], "land_use_area": 264, "diversion_id": 264, "stream_inflow_id": 264, "stream_inflow": 264, "land": [264, 312], "overwritten": 264, "nativ": 264, "riparian": [264, 275, 276, 279, 280, 282, 284, 285, 287, 288], "amount": [264, 275, 276, 279, 280, 282, 284, 285, 287, 288], "restor": 265, "re": 265, "link": 265, "reservoir": 265, "oper": 265, "iter": [265, 269, 270], "fashion": 265, "origin": 265, "preprocessor_path": 267, "directori": [267, 268], "main": [267, 268, 317, 318, 319], "store": [267, 268], "simulation_path": 268, "max_iter": 269, "maximum": 269, "toler": 270, "fraction": 270, "converg": 270, "criteria": 270, "turn": [270, 274], "tri": 270, "meet": [270, 274], "equival": [270, 317], "comput": 271, "diversion_adjustment_flag": 274, "pumping_adjustment_flag": 274, "off": 274, "global": 274, "diversion_conversion_factor": 275, "actual": [275, 276, 279, 280, 282, 284, 285, 287, 288], "goe": 275, "dry": 275, "get_stream_tributary_inflow": [275, 276, 279, 280, 282, 284, 285, 287], "get_stream_rainfall_runoff": [275, 276, 279, 280, 284, 285, 287, 288], "rainfal": [275, 276, 279, 280, 282, 284, 285, 287, 288], "runoff": [275, 276, 279, 280, 282, 284, 285, 287, 288], "get_stream_return_flow": [275, 276, 279, 280, 282, 285, 287, 288], "get_stream_pond_drain": [275, 276, 279, 280, 282, 284, 285, 287, 288], "drainag": [275, 276, 279, 280, 282, 284, 285, 287, 288], "rice": [275, 276, 279, 280, 282, 284, 285, 287, 288], "refug": [275, 276, 279, 280, 282, 284, 285, 287, 288], "get_stream_tile_drain_flow": [275, 276, 279, 280, 282, 284, 285, 288], "get_stream_riparian_evapotranspir": [275, 276, 279, 280, 282, 284, 287, 288], "evapotranspir": [275, 276, 279, 280, 282, 284, 285, 287, 288], "get_stream_gain_from_groundwat": [275, 276, 280, 282, 284, 285, 287, 288], "get_stream_gain_from_lak": [275, 276, 279, 282, 284, 285, 287, 288], "get_net_bypass_inflow": [275, 279, 280, 282, 284, 285, 287, 288], "bypass_inflow_conversion_factor": 276, "without": [276, 280, 282, 284, 285, 287, 288, 290, 296], "get_actual_stream_diversions_at_some_loc": [276, 279, 280, 282, 284, 285, 287, 288], "flow_conversion_factor": [277, 278], "get_stream_inflows_at_some_loc": [277, 278, 286], "get_stream_flow": [277, 281, 286], "get_stream_stag": [277, 278, 281], "75741791": 277, "53232515": 277, "85301157": 277, "65510693": 277, "85301292": [277, 278], "67626143": [277, 278], "get_stream_flow_at_loc": [278, 281, 286], "stream_flow": [278, 286], "enumer": [278, 286], "83142941": 278, "70620254": 278, "81028792": 278, "9071748": 278, "78985517": 278, "65754062": 278, "77081104": 278, "67763746": 278, "75724877": 278, "72101441": 278, "74440170": 278, "86435351": 278, "73367874": 278, "87547392": 278, "71735544": 278, "16731748": 278, "70995694": 278, "52663273": 278, "53285997": 278, "91790043": 278, "44": 278, "84964866936207": 278, "2553191": 278, "7510338724": 278, "1948997": 278, "4229038805": 278, "1487781": 278, "3046951443": 278, "2345774": 278, "2345003784": 278, "1599258": 278, "8286072314": 278, "2495579": 278, "2758224607": 278, "stream_gain_conversion_factor": 279, "lake_inflow_conversion_factor": 280, "stream_inflow_loc": 281, "inflow_conversion_factor": [281, 288], "86400000": 281, "runoff_conversion_factor": 282, "due": 282, "stream_nod": 283, "return_flow_conversion_factor": 284, "evapotranspiration_conversion_factor": 285, "stage_conversion_factor": 286, "2952133835661925": 286, "265988534377925": 286, "23736219849917": 286, "209695515995236": 286, "183909078616921": 286, "1655452773528054": 286, "148149883990982": 286, "133630610251487": 286, "1115282647882054": 286, "1015104342912423": 286, "6783304406148432": 286, "4126136989034421e": 286, "08041698765009642": 286, "061386890202925315": 286, "046860127429624754": 286, "07388403067233185": 286, "050371296013054234": 286, "07860238766727434": 286, "tile_drain_conversion_factor": 287, "get_n_time_step": [289, 290, 292, 293, 294, 295, 296, 297, 298, 305], "get_n_interv": [289, 291, 292, 293, 294, 295, 297, 298], "get_output_interv": [289, 290, 291, 293, 294, 295, 296, 297, 298], "possibl": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "is_date_great": [289, 290, 291, 292, 293, 294, 296, 297], "first_dat": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "comparison_d": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "increment_tim": [289, 290, 291, 292, 293, 295, 296, 298], "increment": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "intent": 289, "about": 289, "includes_end_d": [290, 296], "get_current_date_and_tim": [290, 291, 292, 293, 294, 295, 296, 297, 298], "iwfm2015_c_x64": [290, 294, 295, 296, 297, 298], "preprocessor_infil": [290, 294, 295, 296, 297, 298], "simulation_infil": [290, 294, 295, 296, 297, 298], "1997_24": [290, 296, 301], "1mon": [290, 292, 294, 296, 297], "2011_24": [290, 295, 296, 298], "92": [290, 296], "1week": 292, "1year": [292, 294, 297], "time_stamp": 293, "date_str": [294, 297], "n_interv": [294, 297], "2001_24": [294, 295, 297, 298], "1991_24": [294, 297], "futur": [295, 298], "past": [295, 298], "1989_24": [295, 298], "zone_id": [300, 301, 302, 307], "column_list": 300, "include_tim": 300, "z": [300, 301, 308], "exchang": 300, "neighbor": [300, 308], "separ": [300, 312], "get_column_headers_gener": 300, "column_head": 300, "column_indic": 300, "These": [300, 317, 318, 319], "diversifi": 300, "sinc": 300, "treat": 300, "zbud_fil": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "gw_zbud": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "zone_def": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "zonedef_sr": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "dat": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "generate_zone_list_from_fil": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "column_id": [300, 301, 302], "storage_inflow": [300, 301, 302], "storage_outflow": [300, 301, 302], "streams_inflow": [300, 301, 302], "streams_outflow": [300, 301, 302], "drains_inflow": [300, 301, 302], "drains_outflow": [300, 301, 302], "subsidence_inflow": [300, 301, 302], "subsidence_outflow": [300, 301, 302], "percolation_inflow": [300, 301, 302], "percolation_outflow": 300, "bc_inflow": 300, "bc_outflow": 300, "baseflow_inflow": 300, "baseflow_outflow": 300, "loss_inflow": 300, "loss_outflow": 300, "lakes_inflow": [300, 301, 302], "lakes_outflow": [300, 301, 302], "element_inflow": [300, 301, 302], "element_outflow": [300, 301, 302], "uptake_inflow": [300, 301, 302], "uptake_outflow": [300, 301, 302], "absolut": [300, 301, 302], "close_zbudget_fil": [300, 301, 302, 304, 305, 306, 307, 309, 310, 311], "whether": [301, 302], "get_values_for_some_zones_for_an_interv": 301, "295684e": 301, "1997": 301, "79": 301, "117137": 301, "273784": 301, "736884": 301, "075730": 301, "000803": 301, "014421": 301, "174256": 301, "001044": 301, "737228": 301, "439488": 301, "011498": 301, "061790e": 301, "12682": 301, "016587": 301, "476564": 301, "531435": 301, "983505": 301, "000181": 301, "048284": 301, "456883": 301, "168174": 301, "002426": 301, "000000": 301, "057273": 301, "012413": 301, "353508e": 301, "12685": 301, "071458": 301, "118540": 301, "098311": 301, "028430": 301, "000023": 301, "009861": 301, "333921": 301, "144118": 301, "003028": 301, "051278": 301, "017210": 301, "352258e": 301, "12688": 301, "051229": 301, "124331": 301, "139859": 301, "055758": 301, "000035": 301, "000891": 301, "356049": 301, "130077": 301, "003131": 301, "045703": 301, "020294": 301, "350949e": 301, "12691": 301, "066758": 301, "125371": 301, "137400": 301, "071419": 301, "000828": 301, "345139": 301, "122925": 301, "002835": 301, "045204": 301, "021375": 301, "349395e": 301, "12694": 301, "078787": 301, "121523": 301, "131010": 301, "080384": 301, "000034": 301, "000826": 301, "336899": 301, "120920": 301, "003890": 301, "045043": 301, "021543": 301, "346893e": 301, "12697": 301, "088273": 301, "119390": 301, "127247": 301, "085778": 301, "000825": 301, "331394": 301, "119790": 301, "004249": 301, "044929": 301, "021578": 301, "343586e": 301, "12700": 301, "096130": 301, "118504": 301, "125456": 301, "089236": 301, "000033": 301, "327955": 301, "119299": 301, "004664": 301, "044825": 301, "021610": 301, "329593e": 301, "12703": 301, "103082": 301, "116697": 301, "121263": 301, "089829": 301, "000824": 301, "325716": 301, "119320": 301, "005395": 301, "044724": 301, "021658": 301, "351564e": 301, "12706": 301, "107648": 301, "110528": 301, "069641": 301, "046827": 301, "000031": 301, "000808": 301, "323624": 301, "119355": 301, "005760": 301, "044625": 301, "021718": 301, "412480e": 301, "12709": 301, "066761": 301, "103343": 301, "019542": 301, "013182": 301, "000029": 301, "000792": 301, "310378": 301, "121383": 301, "003774": 301, "044529": 301, "021787": 301, "397671e": 301, "12711": 301, "982960": 301, "097684": 301, "989921": 301, "992680": 301, "000027": 301, "000783": 301, "302120": 301, "125047": 301, "002714": 301, "044449": 301, "021756": 301, "392872e": 301, "12714": 301, "875197": 301, "092270": 301, "977330": 301, "980767": 301, "000025": 301, "000779": 301, "303162": 301, "127959": 301, "001985": 301, "044371": 301, "021740": 301, "388498e": 301, "12717": 301, "760257": 301, "087135": 301, "972108": 301, "974152": 301, "000024": 301, "000777": 301, "307402": 301, "129874": 301, "001615": 301, "044288": 301, "021767": 301, "380029e": 301, "12720": 301, "645231": 301, "083334": 301, "970342": 301, "970651": 301, "311762": 301, "130990": 301, "001515": 301, "044203": 301, "021831": 301, "348849e": 301, "12723": 301, "532238": 301, "080477": 301, "969707": 301, "968900": 301, "000022": 301, "315298": 301, "131575": 301, "001592": 301, "044115": 301, "021921": 301, "389897e": 301, "12726": 301, "421469": 301, "074166": 301, "947561": 301, "950310": 301, "000020": 301, "000770": 301, "318054": 301, "131835": 301, "001773": 301, "044025": 301, "022027": 301, "493825e": 301, "12729": 301, "294864": 301, "068129": 301, "932866": 301, "938721": 301, "000019": 301, "000766": 301, "321243": 301, "131910": 301, "002013": 301, "043935": 301, "022141": 301, "458619e": 301, "12732": 301, "159601": 301, "063871": 301, "928707": 301, "932968": 301, "000018": 301, "000764": 301, "327390": 301, "131989": 301, "002284": 301, "043845": 301, "022259": 301, "450796e": 301, "12735": 301, "024437": 301, "061503": 301, "930320": 301, "930234": 301, "000017": 301, "000765": 301, "334442": 301, "132041": 301, "002569": 301, "043754": 301, "022378": 301, "445811e": 301, "12737": 301, "893254": 301, "058493": 301, "932425": 301, "928972": 301, "000016": 301, "341225": 301, "132034": 301, "002862": 301, "043663": 301, "022497": 301, "442677e": 301, "12740": 301, "767185": 301, "056101": 301, "933823": 301, "928477": 301, "000015": 301, "345979": 301, "131970": 301, "003159": 301, "043573": 301, "022617": 301, "438571e": 301, "12743": 301, "644907": 301, "054233": 301, "934300": 301, "928376": 301, "000767": 301, "348934": 301, "131871": 301, "003459": 301, "043482": 301, "022738": 301, "433619e": 301, "12746": 301, "524974": 301, "052717": 301, "933964": 301, "928475": 301, "350545": 301, "131752": 301, "003760": 301, "043391": 301, "022858": 301, "426365e": 301, "12749": 301, "406221": 301, "051644": 301, "933234": 301, "928675": 301, "000014": 301, "351228": 301, "131625": 301, "004063": 301, "043301": 301, "022978": 301, "411061e": 301, "12752": 301, "287811": 301, "050762": 301, "932130": 301, "928925": 301, "351302": 301, "131493": 301, "004366": 301, "043210": 301, "023098": 301, "363688e": 301, "12755": 301, "169179": 301, "049930": 301, "930711": 301, "929200": 301, "350987": 301, "131361": 301, "004669": 301, "043120": 301, "023218": 301, "935102e": 301, "12758": 301, "049960": 301, "049131": 301, "927025": 301, "927415": 301, "350433": 301, "131227": 301, "004973": 301, "043030": 301, "023338": 301, "135705e": 301, "12760": 301, "927854": 301, "048360": 301, "913890": 301, "916573": 301, "000013": 301, "000762": 301, "349457": 301, "131094": 301, "005276": 301, "042940": 301, "023457": 301, "602659e": 301, "12763": 301, "793384": 301, "048777": 301, "892041": 301, "899888": 301, "000756": 301, "344420": 301, "130960": 301, "005580": 301, "042849": 301, "023576": 301, "509239e": 301, "12766": 301, "636648": 301, "049344": 301, "846310": 301, "866150": 301, "000742": 301, "332396": 301, "130828": 301, "005885": 301, "042759": 301, "023694": 301, "460522e": 301, "12769": 301, "433613": 301, "current_d": 302, "get_values_for_a_zon": 302, "zone_valu": 302, "888134": 302, "152751e": 302, "384521e": 302, "068518e": 302, "9448": 302, "000542": 302, "499542": 302, "470953": 302, "822217": 302, "507244e": 302, "151709": 302, "492766e": 302, "get_title_lin": 306, "spreadsheet": 307, "get_n_title_lin": 307, "zone_definition_fil": 308, "definit": [308, 309, 310, 311], "post": 308, "processor": 308, "adjac": 308, "sampl": [308, 316, 317, 318, 319], "folder": [308, 317, 318, 319], "get_zone_list": [309, 311], "get_zone_nam": [309, 310], "get_n_zon": [310, 311], "section": 312, "detail": 312, "document": 312, "built": 312, "three": 312, "around": 312, "summar": 312, "preset": 312, "extent": 312, "custom": 312, "util": 312, "geometri": 312, "properti": 312, "overview": 316, "primari": 316, "content": 316, "walk": [316, 317, 318, 319], "k": [316, 318], "tyler": [317, 318, 319], "hatch": [317, 318, 319], "dwr": [317, 318, 319], "descript": [317, 318, 319], "def": 317, "run_model": 317, "templat": 317, "basi": 317, "simulate_al": 317, "rel": [317, 318, 319], "sm": [317, 318, 319], "context": 317, "manag": 317, "successfulli": [318, 319], "aquifer_hk": 318, "rang": 318, "_hk": 318, "fig": [318, 319], "subplot": [318, 319], "nrow": 318, "figsiz": [318, 319], "scatter": [318, 319], "layer1_hk": 318, "set_titl": [318, 319], "layer2_hk": 318, "contour_interv": 319, "arang": 319, "reshap": 319, "clabel": 319, "fmt": 319, "1f": 319, "nodal": 319, "": 319, "approach": 319, "mesh": 319, "rectangular": 319, "irregular": 319, "consid": 319, "tricontour": 319}, "objects": {"pywfm": [[252, 0, 1, "", "IWFMBudget"], [253, 0, 1, "", "IWFMModel"], [254, 0, 1, "", "IWFMZBudget"]], "pywfm.IWFMBudget": [[252, 1, 1, "", "__init__"], [17, 1, 1, "", "close_budget_file"], [11, 1, 1, "", "get_column_headers"], [15, 1, 1, "", "get_location_names"], [12, 1, 1, "", "get_n_columns"], [16, 1, 1, "", "get_n_locations"], [18, 1, 1, "", "get_n_time_steps"], [20, 1, 1, "", "get_n_title_lines"], [19, 1, 1, "", "get_time_specs"], [21, 1, 1, "", "get_title_length"], [22, 1, 1, "", "get_title_lines"], [13, 1, 1, "", "get_values"], [14, 1, 1, "", "get_values_for_a_column"]], "pywfm.IWFMModel": [[253, 1, 1, "", "__init__"], [232, 1, 1, "", "_get_hydrograph"], [233, 1, 1, "", "_get_hydrograph_coordinates"], [234, 1, 1, "", "_get_hydrograph_ids"], [235, 1, 1, "", "_get_location_ids"], [236, 1, 1, "", "_get_n_hydrographs"], [237, 1, 1, "", "_get_n_locations"], [238, 1, 1, "", "_get_names"], [239, 1, 1, "", "_get_supply_purpose"], [240, 1, 1, "", "_get_supply_requirement_ag"], [241, 1, 1, "", "_get_supply_requirement_urban"], [242, 1, 1, "", "_get_supply_shortage_at_origin_ag"], [243, 1, 1, "", "_get_supply_shortage_at_origin_urban"], [244, 1, 1, "", "_is_time_interval_greater_or_equal"], [245, 1, 1, "", "_string_to_list_by_array"], [246, 1, 1, "", "_validate_iwfm_date"], [247, 1, 1, "", "_validate_time_interval"], [256, 1, 1, "", "advance_state"], [257, 1, 1, "", "advance_time"], [258, 1, 1, "", "close_log_file"], [53, 1, 1, "", "delete_inquiry_data_file"], [275, 1, 1, "", "get_actual_stream_diversions_at_some_locations"], [30, 1, 1, "", "get_ag_diversion_supply_shortage_at_origin"], [31, 1, 1, "", "get_ag_elempump_supply_shortage_at_origin"], [32, 1, 1, "", "get_ag_well_supply_shortage_at_origin"], [73, 1, 1, "", "get_aquifer_bottom_elevation"], [5, 1, 1, "", "get_aquifer_horizontal_k"], [6, 1, 1, "", "get_aquifer_parameters"], [7, 1, 1, "", "get_aquifer_specific_storage"], [8, 1, 1, "", "get_aquifer_specific_yield"], [74, 1, 1, "", "get_aquifer_top_elevation"], [9, 1, 1, "", "get_aquifer_vertical_k"], [10, 1, 1, "", "get_aquitard_vertical_k"], [67, 1, 1, "", "get_boundary_nodes"], [137, 1, 1, "", "get_budget_type_ids"], [23, 1, 1, "", "get_bypass_export_nodes"], [24, 1, 1, "", "get_bypass_exports_destinations"], [25, 1, 1, "", "get_bypass_ids"], [26, 1, 1, "", "get_bypass_nonrecoverable_loss_factor"], [27, 1, 1, "", "get_bypass_outflows"], [28, 1, 1, "", "get_bypass_recoverable_loss_factor"], [289, 1, 1, "", "get_current_date_and_time"], [138, 1, 1, "", "get_data_unit_type_id_area"], [139, 1, 1, "", "get_data_unit_type_id_length"], [140, 1, 1, "", "get_data_unit_type_ids"], [141, 1, 1, "", "get_data_unit_type_volume"], [104, 1, 1, "", "get_depth_to_water"], [33, 1, 1, "", "get_diversion_ids"], [34, 1, 1, "", "get_diversion_purpose"], [78, 1, 1, "", "get_downstream_node_in_stream_reaches"], [58, 1, 1, "", "get_element_config"], [59, 1, 1, "", "get_element_ids"], [60, 1, 1, "", "get_element_info"], [35, 1, 1, "", "get_element_pump_ids"], [36, 1, 1, "", "get_element_pump_purpose"], [61, 1, 1, "", "get_element_spatial_info"], [63, 1, 1, "", "get_elements_in_lake"], [142, 1, 1, "", "get_flow_destination_type_id"], [143, 1, 1, "", "get_flow_destination_type_id_element"], [144, 1, 1, "", "get_flow_destination_type_id_elementset"], [145, 1, 1, "", "get_flow_destination_type_id_gwelement"], [146, 1, 1, "", "get_flow_destination_type_id_lake"], [147, 1, 1, "", "get_flow_destination_type_id_outside"], [148, 1, 1, "", "get_flow_destination_type_id_streamnode"], [149, 1, 1, "", "get_flow_destination_type_id_subregion"], [75, 1, 1, "", "get_ground_surface_elevation"], [110, 1, 1, "", "get_groundwater_hydrograph"], [111, 1, 1, "", "get_groundwater_hydrograph_at_node_and_layer"], [112, 1, 1, "", "get_groundwater_hydrograph_coordinates"], [113, 1, 1, "", "get_groundwater_hydrograph_ids"], [114, 1, 1, "", "get_groundwater_hydrograph_info"], [115, 1, 1, "", "get_groundwater_hydrograph_names"], [105, 1, 1, "", "get_gwheads_all"], [106, 1, 1, "", "get_gwheads_foralayer"], [116, 1, 1, "", "get_hydrograph_type_list"], [64, 1, 1, "", "get_lake_ids"], [150, 1, 1, "", "get_land_use_type_id_gen_ag"], [151, 1, 1, "", "get_land_use_type_id_native_riparian"], [152, 1, 1, "", "get_land_use_type_id_nonponded_ag"], [153, 1, 1, "", "get_land_use_type_id_refuge"], [154, 1, 1, "", "get_land_use_type_id_rice"], [155, 1, 1, "", "get_land_use_type_id_urban"], [156, 1, 1, "", "get_land_use_type_ids"], [259, 1, 1, "", "get_last_message"], [157, 1, 1, "", "get_location_type_id_element"], [158, 1, 1, "", "get_location_type_id_gwheadobs"], [159, 1, 1, "", "get_location_type_id_lake"], [160, 1, 1, "", "get_location_type_id_node"], [161, 1, 1, "", "get_location_type_id_smallwatershed"], [162, 1, 1, "", "get_location_type_id_streamhydobs"], [163, 1, 1, "", "get_location_type_id_streamnode"], [164, 1, 1, "", "get_location_type_id_streamnodebud"], [165, 1, 1, "", "get_location_type_id_streamreach"], [166, 1, 1, "", "get_location_type_id_subregion"], [167, 1, 1, "", "get_location_type_id_subsidenceobs"], [168, 1, 1, "", "get_location_type_id_tiledrainobs"], [169, 1, 1, "", "get_location_type_id_zone"], [170, 1, 1, "", "get_location_type_ids"], [225, 1, 1, "", "get_n_ag_crops"], [29, 1, 1, "", "get_n_bypasses"], [37, 1, 1, "", "get_n_diversions"], [38, 1, 1, "", "get_n_element_pumps"], [62, 1, 1, "", "get_n_elements"], [65, 1, 1, "", "get_n_elements_in_lake"], [117, 1, 1, "", "get_n_groundwater_hydrographs"], [118, 1, 1, "", "get_n_hydrograph_types"], [290, 1, 1, "", "get_n_intervals"], [66, 1, 1, "", "get_n_lakes"], [76, 1, 1, "", "get_n_layers"], [68, 1, 1, "", "get_n_nodes"], [79, 1, 1, "", "get_n_nodes_in_stream_reach"], [80, 1, 1, "", "get_n_rating_table_points"], [81, 1, 1, "", "get_n_reaches_upstream_of_reach"], [132, 1, 1, "", "get_n_small_watersheds"], [119, 1, 1, "", "get_n_stream_hydrographs"], [133, 1, 1, "", "get_n_stream_inflows"], [82, 1, 1, "", "get_n_stream_nodes"], [83, 1, 1, "", "get_n_stream_nodes_upstream_of_stream_node"], [84, 1, 1, "", "get_n_stream_reaches"], [99, 1, 1, "", "get_n_subregions"], [120, 1, 1, "", "get_n_subsidence_hydrographs"], [121, 1, 1, "", "get_n_tile_drain_hydrographs"], [50, 1, 1, "", "get_n_tile_drains"], [291, 1, 1, "", "get_n_time_steps"], [39, 1, 1, "", "get_n_wells"], [276, 1, 1, "", "get_net_bypass_inflows"], [69, 1, 1, "", "get_node_coordinates"], [70, 1, 1, "", "get_node_ids"], [71, 1, 1, "", "get_node_info"], [292, 1, 1, "", "get_output_interval"], [85, 1, 1, "", "get_reach_outflow_destination"], [86, 1, 1, "", "get_reach_outflow_destination_types"], [87, 1, 1, "", "get_reaches_upstream_of_reach"], [134, 1, 1, "", "get_small_watershed_ids"], [77, 1, 1, "", "get_stratigraphy_atXYcoordinate"], [88, 1, 1, "", "get_stream_bottom_elevations"], [40, 1, 1, "", "get_stream_diversion_locations"], [277, 1, 1, "", "get_stream_flow_at_location"], [278, 1, 1, "", "get_stream_flows"], [279, 1, 1, "", "get_stream_gain_from_groundwater"], [280, 1, 1, "", "get_stream_gain_from_lakes"], [122, 1, 1, "", "get_stream_hydrograph"], [123, 1, 1, "", "get_stream_hydrograph_coordinates"], [124, 1, 1, "", "get_stream_hydrograph_ids"], [125, 1, 1, "", "get_stream_hydrograph_names"], [135, 1, 1, "", "get_stream_inflow_ids"], [136, 1, 1, "", "get_stream_inflow_nodes"], [281, 1, 1, "", "get_stream_inflows_at_some_locations"], [89, 1, 1, "", "get_stream_network"], [90, 1, 1, "", "get_stream_node_ids"], [91, 1, 1, "", "get_stream_nodes_upstream_of_stream_node"], [282, 1, 1, "", "get_stream_rainfall_runoff"], [92, 1, 1, "", "get_stream_rating_table"], [93, 1, 1, "", "get_stream_reach_groundwater_nodes"], [94, 1, 1, "", "get_stream_reach_ids"], [95, 1, 1, "", "get_stream_reach_names"], [96, 1, 1, "", "get_stream_reach_stream_nodes"], [283, 1, 1, "", "get_stream_reaches_for_stream_nodes"], [284, 1, 1, "", "get_stream_return_flows"], [285, 1, 1, "", "get_stream_riparian_evapotranspiration"], [286, 1, 1, "", "get_stream_stages"], [287, 1, 1, "", "get_stream_tile_drain_flows"], [288, 1, 1, "", "get_stream_tributary_inflows"], [107, 1, 1, "", "get_subregion_ag_pumping_average_depth_to_water"], [100, 1, 1, "", "get_subregion_ids"], [101, 1, 1, "", "get_subregion_name"], [102, 1, 1, "", "get_subregion_names"], [103, 1, 1, "", "get_subregions_by_element"], [108, 1, 1, "", "get_subsidence_all"], [126, 1, 1, "", "get_subsidence_hydrograph"], [127, 1, 1, "", "get_subsidence_hydrograph_coordinates"], [128, 1, 1, "", "get_subsidence_hydrograph_ids"], [129, 1, 1, "", "get_subsidence_hydrograph_names"], [41, 1, 1, "", "get_supply_requirement_ag_elements"], [42, 1, 1, "", "get_supply_requirement_ag_subregions"], [43, 1, 1, "", "get_supply_requirement_urban_elements"], [44, 1, 1, "", "get_supply_requirement_urban_subregions"], [171, 1, 1, "", "get_supply_type_id_diversion"], [172, 1, 1, "", "get_supply_type_id_elempump"], [173, 1, 1, "", "get_supply_type_id_well"], [130, 1, 1, "", "get_tile_drain_hydrograph_coordinates"], [131, 1, 1, "", "get_tile_drain_hydrograph_ids"], [51, 1, 1, "", "get_tile_drain_ids"], [52, 1, 1, "", "get_tile_drain_nodes"], [293, 1, 1, "", "get_time_specs"], [97, 1, 1, "", "get_upstream_nodes_in_stream_reaches"], [45, 1, 1, "", "get_urban_diversion_supply_shortage_at_origin"], [46, 1, 1, "", "get_urban_elempump_supply_shortage_at_origin"], [47, 1, 1, "", "get_urban_well_supply_shortage_at_origin"], [54, 1, 1, "", "get_version"], [48, 1, 1, "", "get_well_ids"], [49, 1, 1, "", "get_well_pumping_purpose"], [174, 1, 1, "", "get_zbudget_type_ids"], [109, 1, 1, "", "get_zone_ag_pumping_average_depth_to_water"], [175, 1, 1, "", "get_zone_extent_id_horizontal"], [176, 1, 1, "", "get_zone_extent_id_vertical"], [177, 1, 1, "", "get_zone_extent_ids"], [294, 1, 1, "", "increment_time"], [295, 1, 1, "", "is_date_greater"], [260, 1, 1, "", "is_end_of_simulation"], [55, 1, 1, "", "is_model_instantiated"], [98, 1, 1, "", "is_stream_upstream_node"], [56, 1, 1, "", "kill"], [261, 1, 1, "", "log_last_message"], [57, 1, 1, "", "new"], [72, 1, 1, "", "order_boundary_nodes"], [230, 1, 1, "", "plot_elements"], [231, 1, 1, "", "plot_nodes"], [262, 1, 1, "", "print_results"], [263, 1, 1, "", "read_timeseries_data"], [264, 1, 1, "", "read_timeseries_data_overwrite"], [265, 1, 1, "", "restore_pumping_to_read_values"], [266, 1, 1, "", "set_log_file"], [267, 1, 1, "", "set_preprocessor_path"], [268, 1, 1, "", "set_simulation_path"], [269, 1, 1, "", "set_supply_adjustment_max_iterations"], [270, 1, 1, "", "set_supply_adjustment_tolerance"], [271, 1, 1, "", "simulate_all"], [272, 1, 1, "", "simulate_for_an_interval"], [273, 1, 1, "", "simulate_for_one_timestep"], [274, 1, 1, "", "turn_supply_adjustment_on_off"]], "pywfm.IWFMZBudget": [[254, 1, 1, "", "__init__"], [303, 1, 1, "", "close_zbudget_file"], [308, 1, 1, "", "generate_zone_list_from_file"], [300, 1, 1, "", "get_column_headers_for_a_zone"], [304, 1, 1, "", "get_n_time_steps"], [306, 1, 1, "", "get_n_title_lines"], [309, 1, 1, "", "get_n_zones"], [305, 1, 1, "", "get_time_specs"], [307, 1, 1, "", "get_title_lines"], [301, 1, 1, "", "get_values_for_a_zone"], [302, 1, 1, "", "get_values_for_some_zones_for_an_interval"], [310, 1, 1, "", "get_zone_list"], [311, 1, 1, "", "get_zone_names"]], "pywfm.misc": [[255, 0, 1, "", "IWFMMiscellaneous"]], "pywfm.misc.IWFMMiscellaneous": [[255, 1, 1, "", "__init__"], [248, 1, 1, "", "_is_time_interval_greater_or_equal"], [249, 1, 1, "", "_string_to_list_by_array"], [250, 1, 1, "", "_validate_iwfm_date"], [251, 1, 1, "", "_validate_time_interval"], [226, 1, 1, "", "close_log_file"], [178, 1, 1, "", "get_budget_type_ids"], [179, 1, 1, "", "get_data_unit_type_id_area"], [180, 1, 1, "", "get_data_unit_type_id_length"], [181, 1, 1, "", "get_data_unit_type_ids"], [182, 1, 1, "", "get_data_unit_type_volume"], [183, 1, 1, "", "get_flow_destination_type_id"], [184, 1, 1, "", "get_flow_destination_type_id_element"], [185, 1, 1, "", "get_flow_destination_type_id_elementset"], [186, 1, 1, "", "get_flow_destination_type_id_gwelement"], [187, 1, 1, "", "get_flow_destination_type_id_lake"], [188, 1, 1, "", "get_flow_destination_type_id_outside"], [189, 1, 1, "", "get_flow_destination_type_id_streamnode"], [190, 1, 1, "", "get_flow_destination_type_id_subregion"], [191, 1, 1, "", "get_land_use_type_id_gen_ag"], [192, 1, 1, "", "get_land_use_type_id_native_riparian"], [193, 1, 1, "", "get_land_use_type_id_nonponded_ag"], [194, 1, 1, "", "get_land_use_type_id_refuge"], [195, 1, 1, "", "get_land_use_type_id_rice"], [196, 1, 1, "", "get_land_use_type_id_urban"], [197, 1, 1, "", "get_land_use_type_id_urban_indoor"], [198, 1, 1, "", "get_land_use_type_id_urban_outdoor"], [199, 1, 1, "", "get_land_use_type_ids"], [200, 1, 1, "", "get_land_use_type_ids_1"], [227, 1, 1, "", "get_last_message"], [201, 1, 1, "", "get_location_type_id_bypass"], [202, 1, 1, "", "get_location_type_id_diversion"], [203, 1, 1, "", "get_location_type_id_element"], [204, 1, 1, "", "get_location_type_id_gwheadobs"], [205, 1, 1, "", "get_location_type_id_lake"], [206, 1, 1, "", "get_location_type_id_node"], [207, 1, 1, "", "get_location_type_id_smallwatershed"], [208, 1, 1, "", "get_location_type_id_streamhydobs"], [209, 1, 1, "", "get_location_type_id_streamnode"], [210, 1, 1, "", "get_location_type_id_streamnodebud"], [211, 1, 1, "", "get_location_type_id_streamreach"], [212, 1, 1, "", "get_location_type_id_subregion"], [213, 1, 1, "", "get_location_type_id_subsidenceobs"], [214, 1, 1, "", "get_location_type_id_tiledrainobs"], [215, 1, 1, "", "get_location_type_id_zone"], [216, 1, 1, "", "get_location_type_ids"], [217, 1, 1, "", "get_location_type_ids_1"], [296, 1, 1, "", "get_n_intervals"], [218, 1, 1, "", "get_supply_type_id_diversion"], [219, 1, 1, "", "get_supply_type_id_elempump"], [220, 1, 1, "", "get_supply_type_id_well"], [299, 1, 1, "", "get_version"], [221, 1, 1, "", "get_zbudget_type_ids"], [222, 1, 1, "", "get_zone_extent_id_horizontal"], [223, 1, 1, "", "get_zone_extent_id_vertical"], [224, 1, 1, "", "get_zone_extent_ids"], [297, 1, 1, "", "increment_time"], [298, 1, 1, "", "is_date_greater"], [228, 1, 1, "", "log_last_message"], [229, 1, 1, "", "set_log_file"]]}, "objtypes": {"0": "py:class", "1": "py:method"}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "method", "Python method"]}, "titleterms": {"pywfm": [0, 1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 317, 318, 319], "document": 0, "overview": [0, 2], "design": 0, "us": [0, 1, 3, 314], "link": 0, "instal": [1, 2, 3], "anaconda": 1, "1": [1, 3, 317, 319], "make": [1, 3], "sure": [1, 3], "i": [1, 3], "2": [1, 3, 318], "open": [1, 3], "prompt": 1, "creat": [1, 317, 318, 319], "new": [1, 57], "virtual": [1, 3], "environ": [1, 3], "3": [1, 3, 319], "activ": 1, "conda": 1, "you": [1, 3], "4": [1, 3], "python": 3, "your": 3, "comput": 3, "pip": 3, "run": [3, 316, 317], "from": [3, 316], "command": 3, "line": 3, "download": 3, "code": 3, "latest": 3, "version": [3, 313], "iwfm": [3, 313, 314, 316], "copi": 3, "iwfm2015_c_x64": 3, "dll": 3, "librari": 3, "bin": 3, "folder": 3, "onc": 3, "should": 3, "abl": 3, "consol": 3, "jupyt": 3, "notebook": 3, "follow": 3, "iwfmbudget": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 252], "time": [4, 313, 314, 315], "relat": [4, 313, 314, 315], "locat": 4, "inform": [4, 315], "titl": [4, 315], "data": [4, 315, 316], "retriev": [4, 315, 316, 318, 319], "other": [4, 315], "iwfmmodel": [5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 314], "get_aquifer_horizontal_k": 5, "get_aquifer_paramet": 6, "get_aquifer_specific_storag": 7, "get_aquifer_specific_yield": 8, "get_aquifer_vertical_k": 9, "get_aquitard_vertical_k": 10, "get_column_head": 11, "get_n_column": 12, "get_valu": 13, "get_values_for_a_column": 14, "get_location_nam": 15, "get_n_loc": 16, "close_budget_fil": 17, "get_n_time_step": [18, 291, 304], "get_time_spec": [19, 293, 305], "get_n_title_lin": [20, 306], "get_title_length": 21, "get_title_lin": [22, 307], "get_bypass_export_nod": 23, "get_bypass_exports_destin": 24, "get_bypass_id": 25, "get_bypass_nonrecoverable_loss_factor": 26, "get_bypass_outflow": 27, "get_bypass_recoverable_loss_factor": 28, "get_n_bypass": 29, "get_ag_diversion_supply_shortage_at_origin": 30, "get_ag_elempump_supply_shortage_at_origin": 31, "get_ag_well_supply_shortage_at_origin": 32, "get_diversion_id": 33, "get_diversion_purpos": 34, "get_element_pump_id": 35, "get_element_pump_purpos": 36, "get_n_divers": 37, "get_n_element_pump": 38, "get_n_wel": 39, "get_stream_diversion_loc": 40, "get_supply_requirement_ag_el": 41, "get_supply_requirement_ag_subregion": 42, "get_supply_requirement_urban_el": 43, "get_supply_requirement_urban_subregion": 44, "get_urban_diversion_supply_shortage_at_origin": 45, "get_urban_elempump_supply_shortage_at_origin": 46, "get_urban_well_supply_shortage_at_origin": 47, "get_well_id": 48, "get_well_pumping_purpos": 49, "get_n_tile_drain": 50, "get_tile_drain_id": 51, "get_tile_drain_nod": 52, "delete_inquiry_data_fil": 53, "get_vers": [54, 299], "is_model_instanti": 55, "kill": 56, "get_element_config": 58, "get_element_id": 59, "get_element_info": 60, "get_element_spatial_info": 61, "get_n_el": 62, "get_elements_in_lak": 63, "get_lake_id": 64, "get_n_elements_in_lak": 65, "get_n_lak": 66, "get_boundary_nod": 67, "get_n_nod": 68, "get_node_coordin": 69, "get_node_id": 70, "get_node_info": 71, "order_boundary_nod": 72, "get_aquifer_bottom_elev": 73, "get_aquifer_top_elev": 74, "get_ground_surface_elev": 75, "get_n_lay": 76, "get_stratigraphy_atxycoordin": 77, "get_downstream_node_in_stream_reach": 78, "get_n_nodes_in_stream_reach": 79, "get_n_rating_table_point": 80, "get_n_reaches_upstream_of_reach": 81, "get_n_stream_nod": 82, "get_n_stream_nodes_upstream_of_stream_nod": 83, "get_n_stream_reach": 84, "get_reach_outflow_destin": 85, "get_reach_outflow_destination_typ": 86, "get_reaches_upstream_of_reach": 87, "get_stream_bottom_elev": 88, "get_stream_network": 89, "get_stream_node_id": 90, "get_stream_nodes_upstream_of_stream_nod": 91, "get_stream_rating_t": 92, "get_stream_reach_groundwater_nod": 93, "get_stream_reach_id": 94, "get_stream_reach_nam": 95, "get_stream_reach_stream_nod": 96, "get_upstream_nodes_in_stream_reach": 97, "is_stream_upstream_nod": 98, "get_n_subregion": 99, "get_subregion_id": 100, "get_subregion_nam": [101, 102], "get_subregions_by_el": 103, "get_depth_to_wat": 104, "get_gwheads_al": 105, "get_gwheads_foralay": 106, "get_subregion_ag_pumping_average_depth_to_wat": 107, "get_subsidence_al": 108, "get_zone_ag_pumping_average_depth_to_wat": 109, "get_groundwater_hydrograph": 110, "get_groundwater_hydrograph_at_node_and_lay": 111, "get_groundwater_hydrograph_coordin": 112, "get_groundwater_hydrograph_id": 113, "get_groundwater_hydrograph_info": 114, "get_groundwater_hydrograph_nam": 115, "get_hydrograph_type_list": 116, "get_n_groundwater_hydrograph": 117, "get_n_hydrograph_typ": 118, "get_n_stream_hydrograph": 119, "get_n_subsidence_hydrograph": 120, "get_n_tile_drain_hydrograph": 121, "get_stream_hydrograph": 122, "get_stream_hydrograph_coordin": 123, "get_stream_hydrograph_id": 124, "get_stream_hydrograph_nam": 125, "get_subsidence_hydrograph": 126, "get_subsidence_hydrograph_coordin": 127, "get_subsidence_hydrograph_id": 128, "get_subsidence_hydrograph_nam": 129, "get_tile_drain_hydrograph_coordin": 130, "get_tile_drain_hydrograph_id": 131, "get_n_small_watersh": 132, "get_n_stream_inflow": 133, "get_small_watershed_id": 134, "get_stream_inflow_id": 135, "get_stream_inflow_nod": 136, "get_budget_type_id": [137, 178], "get_data_unit_type_id_area": [138, 179], "get_data_unit_type_id_length": [139, 180], "get_data_unit_type_id": [140, 181], "get_data_unit_type_volum": [141, 182], "get_flow_destination_type_id": [142, 183], "get_flow_destination_type_id_el": [143, 184], "get_flow_destination_type_id_elementset": [144, 185], "get_flow_destination_type_id_gwel": [145, 186], "get_flow_destination_type_id_lak": [146, 187], "get_flow_destination_type_id_outsid": [147, 188], "get_flow_destination_type_id_streamnod": [148, 189], "get_flow_destination_type_id_subregion": [149, 190], "get_land_use_type_id_gen_ag": [150, 191], "get_land_use_type_id_native_riparian": [151, 192], "get_land_use_type_id_nonponded_ag": [152, 193], "get_land_use_type_id_refug": [153, 194], "get_land_use_type_id_ric": [154, 195], "get_land_use_type_id_urban": [155, 196], "get_land_use_type_id": [156, 199], "get_location_type_id_el": [157, 203], "get_location_type_id_gwheadob": [158, 204], "get_location_type_id_lak": [159, 205], "get_location_type_id_nod": [160, 206], "get_location_type_id_smallwatersh": [161, 207], "get_location_type_id_streamhydob": [162, 208], "get_location_type_id_streamnod": [163, 209], "get_location_type_id_streamnodebud": [164, 210], "get_location_type_id_streamreach": [165, 211], "get_location_type_id_subregion": [166, 212], "get_location_type_id_subsidenceob": [167, 213], "get_location_type_id_tiledrainob": [168, 214], "get_location_type_id_zon": [169, 215], "get_location_type_id": [170, 216], "get_supply_type_id_divers": [171, 218], "get_supply_type_id_elempump": [172, 219], "get_supply_type_id_wel": [173, 220], "get_zbudget_type_id": [174, 221], "get_zone_extent_id_horizont": [175, 222], "get_zone_extent_id_vert": [176, 223], "get_zone_extent_id": [177, 224], "misc": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 248, 249, 250, 251, 255, 296, 297, 298, 299], "iwfmmiscellan": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 248, 249, 250, 251, 255, 296, 297, 298, 299, 313], "get_land_use_type_id_urban_indoor": 197, "get_land_use_type_id_urban_outdoor": 198, "get_land_use_type_ids_1": 200, "get_location_type_id_bypass": 201, "get_location_type_id_divers": 202, "get_location_type_ids_1": 217, "get_n_ag_crop": 225, "close_log_fil": [226, 258], "get_last_messag": [227, 259], "log_last_messag": [228, 261], "set_log_fil": [229, 266], "plot_el": 230, "plot_nod": 231, "_get_hydrograph": 232, "_get_hydrograph_coordin": 233, "_get_hydrograph_id": 234, "_get_location_id": 235, "_get_n_hydrograph": 236, "_get_n_loc": 237, "_get_nam": 238, "_get_supply_purpos": 239, "_get_supply_requirement_ag": 240, "_get_supply_requirement_urban": 241, "_get_supply_shortage_at_origin_ag": 242, "_get_supply_shortage_at_origin_urban": 243, "_is_time_interval_greater_or_equ": [244, 248], "_string_to_list_by_arrai": [245, 249], "_validate_iwfm_d": [246, 250], "_validate_time_interv": [247, 251], "iwfmzbudget": [254, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 315], "advance_st": 256, "advance_tim": 257, "is_end_of_simul": 260, "print_result": 262, "read_timeseries_data": 263, "read_timeseries_data_overwrit": 264, "restore_pumping_to_read_valu": 265, "set_preprocessor_path": 267, "set_simulation_path": 268, "set_supply_adjustment_max_iter": 269, "set_supply_adjustment_toler": 270, "simulate_al": 271, "simulate_for_an_interv": 272, "simulate_for_one_timestep": 273, "turn_supply_adjustment_on_off": 274, "get_actual_stream_diversions_at_some_loc": 275, "get_net_bypass_inflow": 276, "get_stream_flow_at_loc": 277, "get_stream_flow": 278, "get_stream_gain_from_groundwat": 279, "get_stream_gain_from_lak": 280, "get_stream_inflows_at_some_loc": 281, "get_stream_rainfall_runoff": 282, "get_stream_reaches_for_stream_nod": 283, "get_stream_return_flow": 284, "get_stream_riparian_evapotranspir": 285, "get_stream_stag": 286, "get_stream_tile_drain_flow": 287, "get_stream_tributary_inflow": 288, "get_current_date_and_tim": 289, "get_n_interv": [290, 296], "get_output_interv": 292, "increment_tim": [294, 297], "is_date_great": [295, 298], "get_column_headers_for_a_zon": 300, "get_values_for_a_zon": 301, "get_values_for_some_zones_for_an_interv": 302, "close_zbudget_fil": 303, "generate_zone_list_from_fil": 308, "get_n_zon": 309, "get_zone_list": 310, "get_zone_nam": 311, "api": [312, 313], "refer": 312, "main": 312, "class": 312, "log": 313, "messag": 313, "intern": [313, 314], "privat": [313, 314], "method": [313, 314], "model": [314, 316, 317, 318, 319], "geometri": 314, "node": [314, 318, 319], "element": 314, "subregion": 314, "stratigraphi": 314, "lake": 314, "stream": 314, "bypass": 314, "inflow": 314, "small": 314, "watersh": 314, "tile": 314, "drain": 314, "land": 314, "flow": 314, "divers": 314, "pump": 314, "aquif": 314, "properti": 314, "simul": [314, 316, 317, 318, 319], "result": [314, 316], "hydrograph": 314, "plot": [314, 316, 318, 319], "gener": 314, "zone": 315, "zbudget": 315, "tutori": [316, 317, 318, 319], "an": 316, "get": [317, 318, 319], "start": [317, 318, 319], "function": 317, "perform": 317, "set": [317, 318, 319], "path": [317, 318, 319], "preprocessor": [317, 318, 319], "input": [317, 318, 319], "file": [317, 318, 319], "object": [317, 318, 319], "id": [318, 319], "coordin": [318, 319], "horizont": 318, "hydraul": 318, "conduct": 318, "valu": 318, "each": 318, "add": 318, "layer": [318, 319], "datafram": 318, "termin": [318, 319], "head": 319, "contour": 319, "last": 319, "timestep": 319}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"PyWFM Documentation": [[0, "pywfm-documentation"]], "Overview": [[0, "overview"], [2, "overview"]], "Design": [[0, "design"]], "Useful Links": [[0, "useful-links"]], "Installation using Anaconda": [[1, "installation-using-anaconda"]], "1. Make sure anaconda is installed": [[1, "make-sure-anaconda-is-installed"]], "2. Open anaconda prompt and create a new virtual environment": [[1, "open-anaconda-prompt-and-create-a-new-virtual-environment"]], "3. Activate the conda environment you created": [[1, "activate-the-conda-environment-you-created"]], "4. Install pywfm": [[1, "install-pywfm"]], "Installation": [[2, "installation"]], "Installation using Python": [[3, "installation-using-python"]], "1. Make sure python 3 1 is installed on your computer and pip runs from the command line": [[3, "make-sure-python-3-is-installed-on-your-computer-and-pip-runs-from-the-command-line"]], "2. Download the pywfm python code": [[3, "download-the-pywfm-python-code"]], "3. Download the latest version of IWFM": [[3, "download-the-latest-version-of-iwfm"]], "4. Copy IWFM2015_C_x64.dll to the Library/bin folder in your python installation or virtual environment": [[3, "copy-iwfm2015-c-x64-dll-to-the-library-bin-folder-in-your-python-installation-or-virtual-environment"]], "4. Once installed, you should be able to open a python console or jupyter notebook and run the following:": [[3, "once-installed-you-should-be-able-to-open-a-python-console-or-jupyter-notebook-and-run-the-following"]], "IWFMBudget": [[4, "iwfmbudget"]], "Time-Related": [[4, "time-related"], [313, "time-related"], [314, "time-related"], [315, "time-related"]], "Location Information": [[4, "location-information"]], "Titles": [[4, "titles"]], "Data-Retrieval": [[4, "data-retrieval"], [315, "data-retrieval"]], "Other": [[4, "other"], [315, "other"]], "pywfm.IWFMModel.get_aquifer_horizontal_k": [[5, "pywfm-iwfmmodel-get-aquifer-horizontal-k"]], "pywfm.IWFMModel.get_aquifer_parameters": [[6, "pywfm-iwfmmodel-get-aquifer-parameters"]], "pywfm.IWFMModel.get_aquifer_specific_storage": [[7, "pywfm-iwfmmodel-get-aquifer-specific-storage"]], "pywfm.IWFMModel.get_aquifer_specific_yield": [[8, "pywfm-iwfmmodel-get-aquifer-specific-yield"]], "pywfm.IWFMModel.get_aquifer_vertical_k": [[9, "pywfm-iwfmmodel-get-aquifer-vertical-k"]], "pywfm.IWFMModel.get_aquitard_vertical_k": [[10, "pywfm-iwfmmodel-get-aquitard-vertical-k"]], "pywfm.IWFMBudget.get_column_headers": [[11, "pywfm-iwfmbudget-get-column-headers"]], "pywfm.IWFMBudget.get_n_columns": [[12, "pywfm-iwfmbudget-get-n-columns"]], "pywfm.IWFMBudget.get_values": [[13, "pywfm-iwfmbudget-get-values"]], "pywfm.IWFMBudget.get_values_for_a_column": [[14, "pywfm-iwfmbudget-get-values-for-a-column"]], "pywfm.IWFMBudget.get_location_names": [[15, "pywfm-iwfmbudget-get-location-names"]], "pywfm.IWFMBudget.get_n_locations": [[16, "pywfm-iwfmbudget-get-n-locations"]], "pywfm.IWFMBudget.close_budget_file": [[17, "pywfm-iwfmbudget-close-budget-file"]], "pywfm.IWFMBudget.get_n_time_steps": [[18, "pywfm-iwfmbudget-get-n-time-steps"]], "pywfm.IWFMBudget.get_time_specs": [[19, "pywfm-iwfmbudget-get-time-specs"]], "pywfm.IWFMBudget.get_n_title_lines": [[20, "pywfm-iwfmbudget-get-n-title-lines"]], "pywfm.IWFMBudget.get_title_length": [[21, "pywfm-iwfmbudget-get-title-length"]], "pywfm.IWFMBudget.get_title_lines": [[22, "pywfm-iwfmbudget-get-title-lines"]], "pywfm.IWFMModel.get_bypass_export_nodes": [[23, "pywfm-iwfmmodel-get-bypass-export-nodes"]], "pywfm.IWFMModel.get_bypass_exports_destinations": [[24, "pywfm-iwfmmodel-get-bypass-exports-destinations"]], "pywfm.IWFMModel.get_bypass_ids": [[25, "pywfm-iwfmmodel-get-bypass-ids"]], "pywfm.IWFMModel.get_bypass_nonrecoverable_loss_factor": [[26, "pywfm-iwfmmodel-get-bypass-nonrecoverable-loss-factor"]], "pywfm.IWFMModel.get_bypass_outflows": [[27, "pywfm-iwfmmodel-get-bypass-outflows"]], "pywfm.IWFMModel.get_bypass_recoverable_loss_factor": [[28, "pywfm-iwfmmodel-get-bypass-recoverable-loss-factor"]], "pywfm.IWFMModel.get_n_bypasses": [[29, "pywfm-iwfmmodel-get-n-bypasses"]], "pywfm.IWFMModel.get_ag_diversion_supply_shortage_at_origin": [[30, "pywfm-iwfmmodel-get-ag-diversion-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_ag_elempump_supply_shortage_at_origin": [[31, "pywfm-iwfmmodel-get-ag-elempump-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_ag_well_supply_shortage_at_origin": [[32, "pywfm-iwfmmodel-get-ag-well-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_diversion_ids": [[33, "pywfm-iwfmmodel-get-diversion-ids"]], "pywfm.IWFMModel.get_diversion_purpose": [[34, "pywfm-iwfmmodel-get-diversion-purpose"]], "pywfm.IWFMModel.get_element_pump_ids": [[35, "pywfm-iwfmmodel-get-element-pump-ids"]], "pywfm.IWFMModel.get_element_pump_purpose": [[36, "pywfm-iwfmmodel-get-element-pump-purpose"]], "pywfm.IWFMModel.get_n_diversions": [[37, "pywfm-iwfmmodel-get-n-diversions"]], "pywfm.IWFMModel.get_n_element_pumps": [[38, "pywfm-iwfmmodel-get-n-element-pumps"]], "pywfm.IWFMModel.get_n_wells": [[39, "pywfm-iwfmmodel-get-n-wells"]], "pywfm.IWFMModel.get_stream_diversion_locations": [[40, "pywfm-iwfmmodel-get-stream-diversion-locations"]], "pywfm.IWFMModel.get_supply_requirement_ag_elements": [[41, "pywfm-iwfmmodel-get-supply-requirement-ag-elements"]], "pywfm.IWFMModel.get_supply_requirement_ag_subregions": [[42, "pywfm-iwfmmodel-get-supply-requirement-ag-subregions"]], "pywfm.IWFMModel.get_supply_requirement_urban_elements": [[43, "pywfm-iwfmmodel-get-supply-requirement-urban-elements"]], "pywfm.IWFMModel.get_supply_requirement_urban_subregions": [[44, "pywfm-iwfmmodel-get-supply-requirement-urban-subregions"]], "pywfm.IWFMModel.get_urban_diversion_supply_shortage_at_origin": [[45, "pywfm-iwfmmodel-get-urban-diversion-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_urban_elempump_supply_shortage_at_origin": [[46, "pywfm-iwfmmodel-get-urban-elempump-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_urban_well_supply_shortage_at_origin": [[47, "pywfm-iwfmmodel-get-urban-well-supply-shortage-at-origin"]], "pywfm.IWFMModel.get_well_ids": [[48, "pywfm-iwfmmodel-get-well-ids"]], "pywfm.IWFMModel.get_well_pumping_purpose": [[49, "pywfm-iwfmmodel-get-well-pumping-purpose"]], "pywfm.IWFMModel.get_n_tile_drains": [[50, "pywfm-iwfmmodel-get-n-tile-drains"]], "pywfm.IWFMModel.get_tile_drain_ids": [[51, "pywfm-iwfmmodel-get-tile-drain-ids"]], "pywfm.IWFMModel.get_tile_drain_nodes": [[52, "pywfm-iwfmmodel-get-tile-drain-nodes"]], "pywfm.IWFMModel.delete_inquiry_data_file": [[53, "pywfm-iwfmmodel-delete-inquiry-data-file"]], "pywfm.IWFMModel.get_version": [[54, "pywfm-iwfmmodel-get-version"]], "pywfm.IWFMModel.is_model_instantiated": [[55, "pywfm-iwfmmodel-is-model-instantiated"]], "pywfm.IWFMModel.kill": [[56, "pywfm-iwfmmodel-kill"]], "pywfm.IWFMModel.new": [[57, "pywfm-iwfmmodel-new"]], "pywfm.IWFMModel.get_element_config": [[58, "pywfm-iwfmmodel-get-element-config"]], "pywfm.IWFMModel.get_element_ids": [[59, "pywfm-iwfmmodel-get-element-ids"]], "pywfm.IWFMModel.get_element_info": [[60, "pywfm-iwfmmodel-get-element-info"]], "pywfm.IWFMModel.get_element_spatial_info": [[61, "pywfm-iwfmmodel-get-element-spatial-info"]], "pywfm.IWFMModel.get_n_elements": [[62, "pywfm-iwfmmodel-get-n-elements"]], "pywfm.IWFMModel.get_elements_in_lake": [[63, "pywfm-iwfmmodel-get-elements-in-lake"]], "pywfm.IWFMModel.get_lake_ids": [[64, "pywfm-iwfmmodel-get-lake-ids"]], "pywfm.IWFMModel.get_n_elements_in_lake": [[65, "pywfm-iwfmmodel-get-n-elements-in-lake"]], "pywfm.IWFMModel.get_n_lakes": [[66, "pywfm-iwfmmodel-get-n-lakes"]], "pywfm.IWFMModel.get_boundary_nodes": [[67, "pywfm-iwfmmodel-get-boundary-nodes"]], "pywfm.IWFMModel.get_n_nodes": [[68, "pywfm-iwfmmodel-get-n-nodes"]], "pywfm.IWFMModel.get_node_coordinates": [[69, "pywfm-iwfmmodel-get-node-coordinates"]], "pywfm.IWFMModel.get_node_ids": [[70, "pywfm-iwfmmodel-get-node-ids"]], "pywfm.IWFMModel.get_node_info": [[71, "pywfm-iwfmmodel-get-node-info"]], "pywfm.IWFMModel.order_boundary_nodes": [[72, "pywfm-iwfmmodel-order-boundary-nodes"]], "pywfm.IWFMModel.get_aquifer_bottom_elevation": [[73, "pywfm-iwfmmodel-get-aquifer-bottom-elevation"]], "pywfm.IWFMModel.get_aquifer_top_elevation": [[74, "pywfm-iwfmmodel-get-aquifer-top-elevation"]], "pywfm.IWFMModel.get_ground_surface_elevation": [[75, "pywfm-iwfmmodel-get-ground-surface-elevation"]], "pywfm.IWFMModel.get_n_layers": [[76, "pywfm-iwfmmodel-get-n-layers"]], "pywfm.IWFMModel.get_stratigraphy_atXYcoordinate": [[77, "pywfm-iwfmmodel-get-stratigraphy-atxycoordinate"]], "pywfm.IWFMModel.get_downstream_node_in_stream_reaches": [[78, "pywfm-iwfmmodel-get-downstream-node-in-stream-reaches"]], "pywfm.IWFMModel.get_n_nodes_in_stream_reach": [[79, "pywfm-iwfmmodel-get-n-nodes-in-stream-reach"]], "pywfm.IWFMModel.get_n_rating_table_points": [[80, "pywfm-iwfmmodel-get-n-rating-table-points"]], "pywfm.IWFMModel.get_n_reaches_upstream_of_reach": [[81, "pywfm-iwfmmodel-get-n-reaches-upstream-of-reach"]], "pywfm.IWFMModel.get_n_stream_nodes": [[82, "pywfm-iwfmmodel-get-n-stream-nodes"]], "pywfm.IWFMModel.get_n_stream_nodes_upstream_of_stream_node": [[83, "pywfm-iwfmmodel-get-n-stream-nodes-upstream-of-stream-node"]], "pywfm.IWFMModel.get_n_stream_reaches": [[84, "pywfm-iwfmmodel-get-n-stream-reaches"]], "pywfm.IWFMModel.get_reach_outflow_destination": [[85, "pywfm-iwfmmodel-get-reach-outflow-destination"]], "pywfm.IWFMModel.get_reach_outflow_destination_types": [[86, "pywfm-iwfmmodel-get-reach-outflow-destination-types"]], "pywfm.IWFMModel.get_reaches_upstream_of_reach": [[87, "pywfm-iwfmmodel-get-reaches-upstream-of-reach"]], "pywfm.IWFMModel.get_stream_bottom_elevations": [[88, "pywfm-iwfmmodel-get-stream-bottom-elevations"]], "pywfm.IWFMModel.get_stream_network": [[89, "pywfm-iwfmmodel-get-stream-network"]], "pywfm.IWFMModel.get_stream_node_ids": [[90, "pywfm-iwfmmodel-get-stream-node-ids"]], "pywfm.IWFMModel.get_stream_nodes_upstream_of_stream_node": [[91, "pywfm-iwfmmodel-get-stream-nodes-upstream-of-stream-node"]], "pywfm.IWFMModel.get_stream_rating_table": [[92, "pywfm-iwfmmodel-get-stream-rating-table"]], "pywfm.IWFMModel.get_stream_reach_groundwater_nodes": [[93, "pywfm-iwfmmodel-get-stream-reach-groundwater-nodes"]], "pywfm.IWFMModel.get_stream_reach_ids": [[94, "pywfm-iwfmmodel-get-stream-reach-ids"]], "pywfm.IWFMModel.get_stream_reach_names": [[95, "pywfm-iwfmmodel-get-stream-reach-names"]], "pywfm.IWFMModel.get_stream_reach_stream_nodes": [[96, "pywfm-iwfmmodel-get-stream-reach-stream-nodes"]], "pywfm.IWFMModel.get_upstream_nodes_in_stream_reaches": [[97, "pywfm-iwfmmodel-get-upstream-nodes-in-stream-reaches"]], "pywfm.IWFMModel.is_stream_upstream_node": [[98, "pywfm-iwfmmodel-is-stream-upstream-node"]], "pywfm.IWFMModel.get_n_subregions": [[99, "pywfm-iwfmmodel-get-n-subregions"]], "pywfm.IWFMModel.get_subregion_ids": [[100, "pywfm-iwfmmodel-get-subregion-ids"]], "pywfm.IWFMModel.get_subregion_name": [[101, "pywfm-iwfmmodel-get-subregion-name"]], "pywfm.IWFMModel.get_subregion_names": [[102, "pywfm-iwfmmodel-get-subregion-names"]], "pywfm.IWFMModel.get_subregions_by_element": [[103, "pywfm-iwfmmodel-get-subregions-by-element"]], "pywfm.IWFMModel.get_depth_to_water": [[104, "pywfm-iwfmmodel-get-depth-to-water"]], "pywfm.IWFMModel.get_gwheads_all": [[105, "pywfm-iwfmmodel-get-gwheads-all"]], "pywfm.IWFMModel.get_gwheads_foralayer": [[106, "pywfm-iwfmmodel-get-gwheads-foralayer"]], "pywfm.IWFMModel.get_subregion_ag_pumping_average_depth_to_water": [[107, "pywfm-iwfmmodel-get-subregion-ag-pumping-average-depth-to-water"]], "pywfm.IWFMModel.get_subsidence_all": [[108, "pywfm-iwfmmodel-get-subsidence-all"]], "pywfm.IWFMModel.get_zone_ag_pumping_average_depth_to_water": [[109, "pywfm-iwfmmodel-get-zone-ag-pumping-average-depth-to-water"]], "pywfm.IWFMModel.get_groundwater_hydrograph": [[110, "pywfm-iwfmmodel-get-groundwater-hydrograph"]], "pywfm.IWFMModel.get_groundwater_hydrograph_at_node_and_layer": [[111, "pywfm-iwfmmodel-get-groundwater-hydrograph-at-node-and-layer"]], "pywfm.IWFMModel.get_groundwater_hydrograph_coordinates": [[112, "pywfm-iwfmmodel-get-groundwater-hydrograph-coordinates"]], "pywfm.IWFMModel.get_groundwater_hydrograph_ids": [[113, "pywfm-iwfmmodel-get-groundwater-hydrograph-ids"]], "pywfm.IWFMModel.get_groundwater_hydrograph_info": [[114, "pywfm-iwfmmodel-get-groundwater-hydrograph-info"]], "pywfm.IWFMModel.get_groundwater_hydrograph_names": [[115, "pywfm-iwfmmodel-get-groundwater-hydrograph-names"]], "pywfm.IWFMModel.get_hydrograph_type_list": [[116, "pywfm-iwfmmodel-get-hydrograph-type-list"]], "pywfm.IWFMModel.get_n_groundwater_hydrographs": [[117, "pywfm-iwfmmodel-get-n-groundwater-hydrographs"]], "pywfm.IWFMModel.get_n_hydrograph_types": [[118, "pywfm-iwfmmodel-get-n-hydrograph-types"]], "pywfm.IWFMModel.get_n_stream_hydrographs": [[119, "pywfm-iwfmmodel-get-n-stream-hydrographs"]], "pywfm.IWFMModel.get_n_subsidence_hydrographs": [[120, "pywfm-iwfmmodel-get-n-subsidence-hydrographs"]], "pywfm.IWFMModel.get_n_tile_drain_hydrographs": [[121, "pywfm-iwfmmodel-get-n-tile-drain-hydrographs"]], "pywfm.IWFMModel.get_stream_hydrograph": [[122, "pywfm-iwfmmodel-get-stream-hydrograph"]], "pywfm.IWFMModel.get_stream_hydrograph_coordinates": [[123, "pywfm-iwfmmodel-get-stream-hydrograph-coordinates"]], "pywfm.IWFMModel.get_stream_hydrograph_ids": [[124, "pywfm-iwfmmodel-get-stream-hydrograph-ids"]], "pywfm.IWFMModel.get_stream_hydrograph_names": [[125, "pywfm-iwfmmodel-get-stream-hydrograph-names"]], "pywfm.IWFMModel.get_subsidence_hydrograph": [[126, "pywfm-iwfmmodel-get-subsidence-hydrograph"]], "pywfm.IWFMModel.get_subsidence_hydrograph_coordinates": [[127, "pywfm-iwfmmodel-get-subsidence-hydrograph-coordinates"]], "pywfm.IWFMModel.get_subsidence_hydrograph_ids": [[128, "pywfm-iwfmmodel-get-subsidence-hydrograph-ids"]], "pywfm.IWFMModel.get_subsidence_hydrograph_names": [[129, "pywfm-iwfmmodel-get-subsidence-hydrograph-names"]], "pywfm.IWFMModel.get_tile_drain_hydrograph_coordinates": [[130, "pywfm-iwfmmodel-get-tile-drain-hydrograph-coordinates"]], "pywfm.IWFMModel.get_tile_drain_hydrograph_ids": [[131, "pywfm-iwfmmodel-get-tile-drain-hydrograph-ids"]], "pywfm.IWFMModel.get_n_small_watersheds": [[132, "pywfm-iwfmmodel-get-n-small-watersheds"]], "pywfm.IWFMModel.get_n_stream_inflows": [[133, "pywfm-iwfmmodel-get-n-stream-inflows"]], "pywfm.IWFMModel.get_small_watershed_ids": [[134, "pywfm-iwfmmodel-get-small-watershed-ids"]], "pywfm.IWFMModel.get_stream_inflow_ids": [[135, "pywfm-iwfmmodel-get-stream-inflow-ids"]], "pywfm.IWFMModel.get_stream_inflow_nodes": [[136, "pywfm-iwfmmodel-get-stream-inflow-nodes"]], "pywfm.IWFMModel.get_budget_type_ids": [[137, "pywfm-iwfmmodel-get-budget-type-ids"]], "pywfm.IWFMModel.get_data_unit_type_id_area": [[138, "pywfm-iwfmmodel-get-data-unit-type-id-area"]], "pywfm.IWFMModel.get_data_unit_type_id_length": [[139, "pywfm-iwfmmodel-get-data-unit-type-id-length"]], "pywfm.IWFMModel.get_data_unit_type_ids": [[140, "pywfm-iwfmmodel-get-data-unit-type-ids"]], "pywfm.IWFMModel.get_data_unit_type_volume": [[141, "pywfm-iwfmmodel-get-data-unit-type-volume"]], "pywfm.IWFMModel.get_flow_destination_type_id": [[142, "pywfm-iwfmmodel-get-flow-destination-type-id"]], "pywfm.IWFMModel.get_flow_destination_type_id_element": [[143, "pywfm-iwfmmodel-get-flow-destination-type-id-element"]], "pywfm.IWFMModel.get_flow_destination_type_id_elementset": [[144, "pywfm-iwfmmodel-get-flow-destination-type-id-elementset"]], "pywfm.IWFMModel.get_flow_destination_type_id_gwelement": [[145, "pywfm-iwfmmodel-get-flow-destination-type-id-gwelement"]], "pywfm.IWFMModel.get_flow_destination_type_id_lake": [[146, "pywfm-iwfmmodel-get-flow-destination-type-id-lake"]], "pywfm.IWFMModel.get_flow_destination_type_id_outside": [[147, "pywfm-iwfmmodel-get-flow-destination-type-id-outside"]], "pywfm.IWFMModel.get_flow_destination_type_id_streamnode": [[148, "pywfm-iwfmmodel-get-flow-destination-type-id-streamnode"]], "pywfm.IWFMModel.get_flow_destination_type_id_subregion": [[149, "pywfm-iwfmmodel-get-flow-destination-type-id-subregion"]], "pywfm.IWFMModel.get_land_use_type_id_gen_ag": [[150, "pywfm-iwfmmodel-get-land-use-type-id-gen-ag"]], "pywfm.IWFMModel.get_land_use_type_id_native_riparian": [[151, "pywfm-iwfmmodel-get-land-use-type-id-native-riparian"]], "pywfm.IWFMModel.get_land_use_type_id_nonponded_ag": [[152, "pywfm-iwfmmodel-get-land-use-type-id-nonponded-ag"]], "pywfm.IWFMModel.get_land_use_type_id_refuge": [[153, "pywfm-iwfmmodel-get-land-use-type-id-refuge"]], "pywfm.IWFMModel.get_land_use_type_id_rice": [[154, "pywfm-iwfmmodel-get-land-use-type-id-rice"]], "pywfm.IWFMModel.get_land_use_type_id_urban": [[155, "pywfm-iwfmmodel-get-land-use-type-id-urban"]], "pywfm.IWFMModel.get_land_use_type_ids": [[156, "pywfm-iwfmmodel-get-land-use-type-ids"]], "pywfm.IWFMModel.get_location_type_id_element": [[157, "pywfm-iwfmmodel-get-location-type-id-element"]], "pywfm.IWFMModel.get_location_type_id_gwheadobs": [[158, "pywfm-iwfmmodel-get-location-type-id-gwheadobs"]], "pywfm.IWFMModel.get_location_type_id_lake": [[159, "pywfm-iwfmmodel-get-location-type-id-lake"]], "pywfm.IWFMModel.get_location_type_id_node": [[160, "pywfm-iwfmmodel-get-location-type-id-node"]], "pywfm.IWFMModel.get_location_type_id_smallwatershed": [[161, "pywfm-iwfmmodel-get-location-type-id-smallwatershed"]], "pywfm.IWFMModel.get_location_type_id_streamhydobs": [[162, "pywfm-iwfmmodel-get-location-type-id-streamhydobs"]], "pywfm.IWFMModel.get_location_type_id_streamnode": [[163, "pywfm-iwfmmodel-get-location-type-id-streamnode"]], "pywfm.IWFMModel.get_location_type_id_streamnodebud": [[164, "pywfm-iwfmmodel-get-location-type-id-streamnodebud"]], "pywfm.IWFMModel.get_location_type_id_streamreach": [[165, "pywfm-iwfmmodel-get-location-type-id-streamreach"]], "pywfm.IWFMModel.get_location_type_id_subregion": [[166, "pywfm-iwfmmodel-get-location-type-id-subregion"]], "pywfm.IWFMModel.get_location_type_id_subsidenceobs": [[167, "pywfm-iwfmmodel-get-location-type-id-subsidenceobs"]], "pywfm.IWFMModel.get_location_type_id_tiledrainobs": [[168, "pywfm-iwfmmodel-get-location-type-id-tiledrainobs"]], "pywfm.IWFMModel.get_location_type_id_zone": [[169, "pywfm-iwfmmodel-get-location-type-id-zone"]], "pywfm.IWFMModel.get_location_type_ids": [[170, "pywfm-iwfmmodel-get-location-type-ids"]], "pywfm.IWFMModel.get_supply_type_id_diversion": [[171, "pywfm-iwfmmodel-get-supply-type-id-diversion"]], "pywfm.IWFMModel.get_supply_type_id_elempump": [[172, "pywfm-iwfmmodel-get-supply-type-id-elempump"]], "pywfm.IWFMModel.get_supply_type_id_well": [[173, "pywfm-iwfmmodel-get-supply-type-id-well"]], "pywfm.IWFMModel.get_zbudget_type_ids": [[174, "pywfm-iwfmmodel-get-zbudget-type-ids"]], "pywfm.IWFMModel.get_zone_extent_id_horizontal": [[175, "pywfm-iwfmmodel-get-zone-extent-id-horizontal"]], "pywfm.IWFMModel.get_zone_extent_id_vertical": [[176, "pywfm-iwfmmodel-get-zone-extent-id-vertical"]], "pywfm.IWFMModel.get_zone_extent_ids": [[177, "pywfm-iwfmmodel-get-zone-extent-ids"]], "pywfm.misc.IWFMMiscellaneous.get_budget_type_ids": [[178, "pywfm-misc-iwfmmiscellaneous-get-budget-type-ids"]], "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_area": [[179, "pywfm-misc-iwfmmiscellaneous-get-data-unit-type-id-area"]], "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_length": [[180, "pywfm-misc-iwfmmiscellaneous-get-data-unit-type-id-length"]], "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_ids": [[181, "pywfm-misc-iwfmmiscellaneous-get-data-unit-type-ids"]], "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_volume": [[182, "pywfm-misc-iwfmmiscellaneous-get-data-unit-type-volume"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id": [[183, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_element": [[184, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-element"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_elementset": [[185, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-elementset"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_gwelement": [[186, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-gwelement"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_lake": [[187, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-lake"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_outside": [[188, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-outside"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_streamnode": [[189, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-streamnode"]], "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_subregion": [[190, "pywfm-misc-iwfmmiscellaneous-get-flow-destination-type-id-subregion"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_gen_ag": [[191, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-gen-ag"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_native_riparian": [[192, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-native-riparian"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_nonponded_ag": [[193, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-nonponded-ag"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_refuge": [[194, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-refuge"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_rice": [[195, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-rice"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban": [[196, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-urban"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_indoor": [[197, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-urban-indoor"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_outdoor": [[198, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-id-urban-outdoor"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids": [[199, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-ids"]], "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids_1": [[200, "pywfm-misc-iwfmmiscellaneous-get-land-use-type-ids-1"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_bypass": [[201, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-bypass"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_diversion": [[202, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-diversion"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_element": [[203, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-element"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_gwheadobs": [[204, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-gwheadobs"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_lake": [[205, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-lake"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_node": [[206, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-node"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_smallwatershed": [[207, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-smallwatershed"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamhydobs": [[208, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-streamhydobs"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnode": [[209, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-streamnode"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnodebud": [[210, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-streamnodebud"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamreach": [[211, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-streamreach"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subregion": [[212, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-subregion"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subsidenceobs": [[213, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-subsidenceobs"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_tiledrainobs": [[214, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-tiledrainobs"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_id_zone": [[215, "pywfm-misc-iwfmmiscellaneous-get-location-type-id-zone"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_ids": [[216, "pywfm-misc-iwfmmiscellaneous-get-location-type-ids"]], "pywfm.misc.IWFMMiscellaneous.get_location_type_ids_1": [[217, "pywfm-misc-iwfmmiscellaneous-get-location-type-ids-1"]], "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_diversion": [[218, "pywfm-misc-iwfmmiscellaneous-get-supply-type-id-diversion"]], "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_elempump": [[219, "pywfm-misc-iwfmmiscellaneous-get-supply-type-id-elempump"]], "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_well": [[220, "pywfm-misc-iwfmmiscellaneous-get-supply-type-id-well"]], "pywfm.misc.IWFMMiscellaneous.get_zbudget_type_ids": [[221, "pywfm-misc-iwfmmiscellaneous-get-zbudget-type-ids"]], "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_horizontal": [[222, "pywfm-misc-iwfmmiscellaneous-get-zone-extent-id-horizontal"]], "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_vertical": [[223, "pywfm-misc-iwfmmiscellaneous-get-zone-extent-id-vertical"]], "pywfm.misc.IWFMMiscellaneous.get_zone_extent_ids": [[224, "pywfm-misc-iwfmmiscellaneous-get-zone-extent-ids"]], "pywfm.IWFMModel.get_n_ag_crops": [[225, "pywfm-iwfmmodel-get-n-ag-crops"]], "pywfm.misc.IWFMMiscellaneous.close_log_file": [[226, "pywfm-misc-iwfmmiscellaneous-close-log-file"]], "pywfm.misc.IWFMMiscellaneous.get_last_message": [[227, "pywfm-misc-iwfmmiscellaneous-get-last-message"]], "pywfm.misc.IWFMMiscellaneous.log_last_message": [[228, "pywfm-misc-iwfmmiscellaneous-log-last-message"]], "pywfm.misc.IWFMMiscellaneous.set_log_file": [[229, "pywfm-misc-iwfmmiscellaneous-set-log-file"]], "pywfm.IWFMModel.plot_elements": [[230, "pywfm-iwfmmodel-plot-elements"]], "pywfm.IWFMModel.plot_nodes": [[231, "pywfm-iwfmmodel-plot-nodes"]], "pywfm.IWFMModel._get_hydrograph": [[232, "pywfm-iwfmmodel-get-hydrograph"]], "pywfm.IWFMModel._get_hydrograph_coordinates": [[233, "pywfm-iwfmmodel-get-hydrograph-coordinates"]], "pywfm.IWFMModel._get_hydrograph_ids": [[234, "pywfm-iwfmmodel-get-hydrograph-ids"]], "pywfm.IWFMModel._get_location_ids": [[235, "pywfm-iwfmmodel-get-location-ids"]], "pywfm.IWFMModel._get_n_hydrographs": [[236, "pywfm-iwfmmodel-get-n-hydrographs"]], "pywfm.IWFMModel._get_n_locations": [[237, "pywfm-iwfmmodel-get-n-locations"]], "pywfm.IWFMModel._get_names": [[238, "pywfm-iwfmmodel-get-names"]], "pywfm.IWFMModel._get_supply_purpose": [[239, "pywfm-iwfmmodel-get-supply-purpose"]], "pywfm.IWFMModel._get_supply_requirement_ag": [[240, "pywfm-iwfmmodel-get-supply-requirement-ag"]], "pywfm.IWFMModel._get_supply_requirement_urban": [[241, "pywfm-iwfmmodel-get-supply-requirement-urban"]], "pywfm.IWFMModel._get_supply_shortage_at_origin_ag": [[242, "pywfm-iwfmmodel-get-supply-shortage-at-origin-ag"]], "pywfm.IWFMModel._get_supply_shortage_at_origin_urban": [[243, "pywfm-iwfmmodel-get-supply-shortage-at-origin-urban"]], "pywfm.IWFMModel._is_time_interval_greater_or_equal": [[244, "pywfm-iwfmmodel-is-time-interval-greater-or-equal"]], "pywfm.IWFMModel._string_to_list_by_array": [[245, "pywfm-iwfmmodel-string-to-list-by-array"]], "pywfm.IWFMModel._validate_iwfm_date": [[246, "pywfm-iwfmmodel-validate-iwfm-date"]], "pywfm.IWFMModel._validate_time_interval": [[247, "pywfm-iwfmmodel-validate-time-interval"]], "pywfm.misc.IWFMMiscellaneous._is_time_interval_greater_or_equal": [[248, "pywfm-misc-iwfmmiscellaneous-is-time-interval-greater-or-equal"]], "pywfm.misc.IWFMMiscellaneous._string_to_list_by_array": [[249, "pywfm-misc-iwfmmiscellaneous-string-to-list-by-array"]], "pywfm.misc.IWFMMiscellaneous._validate_iwfm_date": [[250, "pywfm-misc-iwfmmiscellaneous-validate-iwfm-date"]], "pywfm.misc.IWFMMiscellaneous._validate_time_interval": [[251, "pywfm-misc-iwfmmiscellaneous-validate-time-interval"]], "pywfm.IWFMBudget": [[252, "pywfm-iwfmbudget"]], "pywfm.IWFMModel": [[253, "pywfm-iwfmmodel"]], "pywfm.IWFMZBudget": [[254, "pywfm-iwfmzbudget"]], "pywfm.misc.IWFMMiscellaneous": [[255, "pywfm-misc-iwfmmiscellaneous"]], "pywfm.IWFMModel.advance_state": [[256, "pywfm-iwfmmodel-advance-state"]], "pywfm.IWFMModel.advance_time": [[257, "pywfm-iwfmmodel-advance-time"]], "pywfm.IWFMModel.close_log_file": [[258, "pywfm-iwfmmodel-close-log-file"]], "pywfm.IWFMModel.get_last_message": [[259, "pywfm-iwfmmodel-get-last-message"]], "pywfm.IWFMModel.is_end_of_simulation": [[260, "pywfm-iwfmmodel-is-end-of-simulation"]], "pywfm.IWFMModel.log_last_message": [[261, "pywfm-iwfmmodel-log-last-message"]], "pywfm.IWFMModel.print_results": [[262, "pywfm-iwfmmodel-print-results"]], "pywfm.IWFMModel.read_timeseries_data": [[263, "pywfm-iwfmmodel-read-timeseries-data"]], "pywfm.IWFMModel.read_timeseries_data_overwrite": [[264, "pywfm-iwfmmodel-read-timeseries-data-overwrite"]], "pywfm.IWFMModel.restore_pumping_to_read_values": [[265, "pywfm-iwfmmodel-restore-pumping-to-read-values"]], "pywfm.IWFMModel.set_log_file": [[266, "pywfm-iwfmmodel-set-log-file"]], "pywfm.IWFMModel.set_preprocessor_path": [[267, "pywfm-iwfmmodel-set-preprocessor-path"]], "pywfm.IWFMModel.set_simulation_path": [[268, "pywfm-iwfmmodel-set-simulation-path"]], "pywfm.IWFMModel.set_supply_adjustment_max_iterations": [[269, "pywfm-iwfmmodel-set-supply-adjustment-max-iterations"]], "pywfm.IWFMModel.set_supply_adjustment_tolerance": [[270, "pywfm-iwfmmodel-set-supply-adjustment-tolerance"]], "pywfm.IWFMModel.simulate_all": [[271, "pywfm-iwfmmodel-simulate-all"]], "pywfm.IWFMModel.simulate_for_an_interval": [[272, "pywfm-iwfmmodel-simulate-for-an-interval"]], "pywfm.IWFMModel.simulate_for_one_timestep": [[273, "pywfm-iwfmmodel-simulate-for-one-timestep"]], "pywfm.IWFMModel.turn_supply_adjustment_on_off": [[274, "pywfm-iwfmmodel-turn-supply-adjustment-on-off"]], "pywfm.IWFMModel.get_actual_stream_diversions_at_some_locations": [[275, "pywfm-iwfmmodel-get-actual-stream-diversions-at-some-locations"]], "pywfm.IWFMModel.get_net_bypass_inflows": [[276, "pywfm-iwfmmodel-get-net-bypass-inflows"]], "pywfm.IWFMModel.get_stream_flow_at_location": [[277, "pywfm-iwfmmodel-get-stream-flow-at-location"]], "pywfm.IWFMModel.get_stream_flows": [[278, "pywfm-iwfmmodel-get-stream-flows"]], "pywfm.IWFMModel.get_stream_gain_from_groundwater": [[279, "pywfm-iwfmmodel-get-stream-gain-from-groundwater"]], "pywfm.IWFMModel.get_stream_gain_from_lakes": [[280, "pywfm-iwfmmodel-get-stream-gain-from-lakes"]], "pywfm.IWFMModel.get_stream_inflows_at_some_locations": [[281, "pywfm-iwfmmodel-get-stream-inflows-at-some-locations"]], "pywfm.IWFMModel.get_stream_rainfall_runoff": [[282, "pywfm-iwfmmodel-get-stream-rainfall-runoff"]], "pywfm.IWFMModel.get_stream_reaches_for_stream_nodes": [[283, "pywfm-iwfmmodel-get-stream-reaches-for-stream-nodes"]], "pywfm.IWFMModel.get_stream_return_flows": [[284, "pywfm-iwfmmodel-get-stream-return-flows"]], "pywfm.IWFMModel.get_stream_riparian_evapotranspiration": [[285, "pywfm-iwfmmodel-get-stream-riparian-evapotranspiration"]], "pywfm.IWFMModel.get_stream_stages": [[286, "pywfm-iwfmmodel-get-stream-stages"]], "pywfm.IWFMModel.get_stream_tile_drain_flows": [[287, "pywfm-iwfmmodel-get-stream-tile-drain-flows"]], "pywfm.IWFMModel.get_stream_tributary_inflows": [[288, "pywfm-iwfmmodel-get-stream-tributary-inflows"]], "pywfm.IWFMModel.get_current_date_and_time": [[289, "pywfm-iwfmmodel-get-current-date-and-time"]], "pywfm.IWFMModel.get_n_intervals": [[290, "pywfm-iwfmmodel-get-n-intervals"]], "pywfm.IWFMModel.get_n_time_steps": [[291, "pywfm-iwfmmodel-get-n-time-steps"]], "pywfm.IWFMModel.get_output_interval": [[292, "pywfm-iwfmmodel-get-output-interval"]], "pywfm.IWFMModel.get_time_specs": [[293, "pywfm-iwfmmodel-get-time-specs"]], "pywfm.IWFMModel.increment_time": [[294, "pywfm-iwfmmodel-increment-time"]], "pywfm.IWFMModel.is_date_greater": [[295, "pywfm-iwfmmodel-is-date-greater"]], "pywfm.misc.IWFMMiscellaneous.get_n_intervals": [[296, "pywfm-misc-iwfmmiscellaneous-get-n-intervals"]], "pywfm.misc.IWFMMiscellaneous.increment_time": [[297, "pywfm-misc-iwfmmiscellaneous-increment-time"]], "pywfm.misc.IWFMMiscellaneous.is_date_greater": [[298, "pywfm-misc-iwfmmiscellaneous-is-date-greater"]], "pywfm.misc.IWFMMiscellaneous.get_version": [[299, "pywfm-misc-iwfmmiscellaneous-get-version"]], "pywfm.IWFMZBudget.get_column_headers_for_a_zone": [[300, "pywfm-iwfmzbudget-get-column-headers-for-a-zone"]], "pywfm.IWFMZBudget.get_values_for_a_zone": [[301, "pywfm-iwfmzbudget-get-values-for-a-zone"]], "pywfm.IWFMZBudget.get_values_for_some_zones_for_an_interval": [[302, "pywfm-iwfmzbudget-get-values-for-some-zones-for-an-interval"]], "pywfm.IWFMZBudget.close_zbudget_file": [[303, "pywfm-iwfmzbudget-close-zbudget-file"]], "pywfm.IWFMZBudget.get_n_time_steps": [[304, "pywfm-iwfmzbudget-get-n-time-steps"]], "pywfm.IWFMZBudget.get_time_specs": [[305, "pywfm-iwfmzbudget-get-time-specs"]], "pywfm.IWFMZBudget.get_n_title_lines": [[306, "pywfm-iwfmzbudget-get-n-title-lines"]], "pywfm.IWFMZBudget.get_title_lines": [[307, "pywfm-iwfmzbudget-get-title-lines"]], "pywfm.IWFMZBudget.generate_zone_list_from_file": [[308, "pywfm-iwfmzbudget-generate-zone-list-from-file"]], "pywfm.IWFMZBudget.get_n_zones": [[309, "pywfm-iwfmzbudget-get-n-zones"]], "pywfm.IWFMZBudget.get_zone_list": [[310, "pywfm-iwfmzbudget-get-zone-list"]], "pywfm.IWFMZBudget.get_zone_names": [[311, "pywfm-iwfmzbudget-get-zone-names"]], "API Reference": [[312, "api-reference"]], "Main PyWFM Classes": [[312, "main-pywfm-classes"]], "Class Reference": [[312, "class-reference"]], "IWFMMiscellaneous": [[313, "iwfmmiscellaneous"]], "API Version": [[313, "api-version"]], "Logging Messages": [[313, "logging-messages"]], "IWFM-Internal": [[313, "iwfm-internal"], [314, "iwfm-internal"]], "Private Methods": [[313, "private-methods"], [314, "private-methods"]], "IWFMModel": [[314, "iwfmmodel"]], "Model Geometry": [[314, "model-geometry"]], "Nodes": [[314, "nodes"]], "Elements": [[314, "elements"]], "Subregions": [[314, "subregions"]], "Stratigraphy": [[314, "stratigraphy"]], "Lakes": [[314, "lakes"]], "Streams": [[314, "streams"]], "Bypasses": [[314, "bypasses"]], "Inflows and Small Watersheds": [[314, "inflows-and-small-watersheds"]], "Tile Drains": [[314, "tile-drains"]], "Land Use": [[314, "land-use"]], "Stream and Bypass Flows": [[314, "stream-and-bypass-flows"]], "Diversions and Pumping": [[314, "diversions-and-pumping"]], "Aquifer Properties": [[314, "aquifer-properties"]], "Simulation Results": [[314, "simulation-results"]], "Simulation Hydrographs": [[314, "simulation-hydrographs"]], "Plotting": [[314, "plotting"]], "Model Simulation": [[314, "model-simulation"]], "General": [[314, "general"]], "IWFMZBudget": [[315, "iwfmzbudget"]], "Zone Information": [[315, "zone-information"]], "ZBudget Titles": [[315, "zbudget-titles"]], "Tutorials": [[316, "tutorials"]], "Running an IWFM Simulation": [[316, "running-an-iwfm-simulation"]], "Retrieving Data from an IWFM Simulation": [[316, "retrieving-data-from-an-iwfm-simulation"]], "Plotting Model Results": [[316, "plotting-model-results"]], "PyWFM Tutorial 1": [[317, "pywfm-tutorial-1"]], "Getting Started": [[317, "getting-started"], [318, "getting-started"], [319, "getting-started"]], "Create a Function to Perform the Simulation": [[317, "create-a-function-to-perform-the-simulation"]], "Set Paths to the Preprocessor Input File and Simulation Input File": [[317, "set-paths-to-the-preprocessor-input-file-and-simulation-input-file"], [318, "set-paths-to-the-preprocessor-input-file-and-simulation-input-file"], [319, "set-paths-to-the-preprocessor-input-file-and-simulation-input-file"]], "Create the Model Object and Run the Simulation": [[317, "create-the-model-object-and-run-the-simulation"]], "PyWFM Tutorial 2": [[318, "pywfm-tutorial-2"]], "Create the Model Object": [[318, "create-the-model-object"], [319, "create-the-model-object"]], "Retrieve Node IDs and Node Coordinates": [[318, "retrieve-node-ids-and-node-coordinates"], [319, "retrieve-node-ids-and-node-coordinates"]], "Retrieve Horizontal Hydraulic Conductivity values at each nodes": [[318, "retrieve-horizontal-hydraulic-conductivity-values-at-each-nodes"]], "Add Hydraulic Conductivities for each layer to the nodes DataFrame": [[318, "add-hydraulic-conductivities-for-each-layer-to-the-nodes-dataframe"]], "Plot Hydraulic Conductivities for each model layer": [[318, "plot-hydraulic-conductivities-for-each-model-layer"]], "Terminate the Model Object": [[318, "terminate-the-model-object"], [319, "terminate-the-model-object"]], "PyWFM Tutorial 3": [[319, "pywfm-tutorial-3"]], "Retrieve Simulated Heads for Model Layer 1": [[319, "retrieve-simulated-heads-for-model-layer-1"]], "Plot Head Contours for Model Layer 1 for the Last Timestep": [[319, "plot-head-contours-for-model-layer-1-for-the-last-timestep"]]}, "indexentries": {"get_aquifer_horizontal_k() (pywfm.iwfmmodel method)": [[5, "pywfm.IWFMModel.get_aquifer_horizontal_k"]], "get_aquifer_parameters() (pywfm.iwfmmodel method)": [[6, "pywfm.IWFMModel.get_aquifer_parameters"]], "get_aquifer_specific_storage() (pywfm.iwfmmodel method)": [[7, "pywfm.IWFMModel.get_aquifer_specific_storage"]], "get_aquifer_specific_yield() (pywfm.iwfmmodel method)": [[8, "pywfm.IWFMModel.get_aquifer_specific_yield"]], "get_aquifer_vertical_k() (pywfm.iwfmmodel method)": [[9, "pywfm.IWFMModel.get_aquifer_vertical_k"]], "get_aquitard_vertical_k() (pywfm.iwfmmodel method)": [[10, "pywfm.IWFMModel.get_aquitard_vertical_k"]], "get_column_headers() (pywfm.iwfmbudget method)": [[11, "pywfm.IWFMBudget.get_column_headers"]], "get_n_columns() (pywfm.iwfmbudget method)": [[12, "pywfm.IWFMBudget.get_n_columns"]], "get_values() (pywfm.iwfmbudget method)": [[13, "pywfm.IWFMBudget.get_values"]], "get_values_for_a_column() (pywfm.iwfmbudget method)": [[14, "pywfm.IWFMBudget.get_values_for_a_column"]], "get_location_names() (pywfm.iwfmbudget method)": [[15, "pywfm.IWFMBudget.get_location_names"]], "get_n_locations() (pywfm.iwfmbudget method)": [[16, "pywfm.IWFMBudget.get_n_locations"]], "close_budget_file() (pywfm.iwfmbudget method)": [[17, "pywfm.IWFMBudget.close_budget_file"]], "get_n_time_steps() (pywfm.iwfmbudget method)": [[18, "pywfm.IWFMBudget.get_n_time_steps"]], "get_time_specs() (pywfm.iwfmbudget method)": [[19, "pywfm.IWFMBudget.get_time_specs"]], "get_n_title_lines() (pywfm.iwfmbudget method)": [[20, "pywfm.IWFMBudget.get_n_title_lines"]], "get_title_length() (pywfm.iwfmbudget method)": [[21, "pywfm.IWFMBudget.get_title_length"]], "get_title_lines() (pywfm.iwfmbudget method)": [[22, "pywfm.IWFMBudget.get_title_lines"]], "get_bypass_export_nodes() (pywfm.iwfmmodel method)": [[23, "pywfm.IWFMModel.get_bypass_export_nodes"]], "get_bypass_exports_destinations() (pywfm.iwfmmodel method)": [[24, "pywfm.IWFMModel.get_bypass_exports_destinations"]], "get_bypass_ids() (pywfm.iwfmmodel method)": [[25, "pywfm.IWFMModel.get_bypass_ids"]], "get_bypass_nonrecoverable_loss_factor() (pywfm.iwfmmodel method)": [[26, "pywfm.IWFMModel.get_bypass_nonrecoverable_loss_factor"]], "get_bypass_outflows() (pywfm.iwfmmodel method)": [[27, "pywfm.IWFMModel.get_bypass_outflows"]], "get_bypass_recoverable_loss_factor() (pywfm.iwfmmodel method)": [[28, "pywfm.IWFMModel.get_bypass_recoverable_loss_factor"]], "get_n_bypasses() (pywfm.iwfmmodel method)": [[29, "pywfm.IWFMModel.get_n_bypasses"]], "get_ag_diversion_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[30, "pywfm.IWFMModel.get_ag_diversion_supply_shortage_at_origin"]], "get_ag_elempump_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[31, "pywfm.IWFMModel.get_ag_elempump_supply_shortage_at_origin"]], "get_ag_well_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[32, "pywfm.IWFMModel.get_ag_well_supply_shortage_at_origin"]], "get_diversion_ids() (pywfm.iwfmmodel method)": [[33, "pywfm.IWFMModel.get_diversion_ids"]], "get_diversion_purpose() (pywfm.iwfmmodel method)": [[34, "pywfm.IWFMModel.get_diversion_purpose"]], "get_element_pump_ids() (pywfm.iwfmmodel method)": [[35, "pywfm.IWFMModel.get_element_pump_ids"]], "get_element_pump_purpose() (pywfm.iwfmmodel method)": [[36, "pywfm.IWFMModel.get_element_pump_purpose"]], "get_n_diversions() (pywfm.iwfmmodel method)": [[37, "pywfm.IWFMModel.get_n_diversions"]], "get_n_element_pumps() (pywfm.iwfmmodel method)": [[38, "pywfm.IWFMModel.get_n_element_pumps"]], "get_n_wells() (pywfm.iwfmmodel method)": [[39, "pywfm.IWFMModel.get_n_wells"]], "get_stream_diversion_locations() (pywfm.iwfmmodel method)": [[40, "pywfm.IWFMModel.get_stream_diversion_locations"]], "get_supply_requirement_ag_elements() (pywfm.iwfmmodel method)": [[41, "pywfm.IWFMModel.get_supply_requirement_ag_elements"]], "get_supply_requirement_ag_subregions() (pywfm.iwfmmodel method)": [[42, "pywfm.IWFMModel.get_supply_requirement_ag_subregions"]], "get_supply_requirement_urban_elements() (pywfm.iwfmmodel method)": [[43, "pywfm.IWFMModel.get_supply_requirement_urban_elements"]], "get_supply_requirement_urban_subregions() (pywfm.iwfmmodel method)": [[44, "pywfm.IWFMModel.get_supply_requirement_urban_subregions"]], "get_urban_diversion_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[45, "pywfm.IWFMModel.get_urban_diversion_supply_shortage_at_origin"]], "get_urban_elempump_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[46, "pywfm.IWFMModel.get_urban_elempump_supply_shortage_at_origin"]], "get_urban_well_supply_shortage_at_origin() (pywfm.iwfmmodel method)": [[47, "pywfm.IWFMModel.get_urban_well_supply_shortage_at_origin"]], "get_well_ids() (pywfm.iwfmmodel method)": [[48, "pywfm.IWFMModel.get_well_ids"]], "get_well_pumping_purpose() (pywfm.iwfmmodel method)": [[49, "pywfm.IWFMModel.get_well_pumping_purpose"]], "get_n_tile_drains() (pywfm.iwfmmodel method)": [[50, "pywfm.IWFMModel.get_n_tile_drains"]], "get_tile_drain_ids() (pywfm.iwfmmodel method)": [[51, "pywfm.IWFMModel.get_tile_drain_ids"]], "get_tile_drain_nodes() (pywfm.iwfmmodel method)": [[52, "pywfm.IWFMModel.get_tile_drain_nodes"]], "delete_inquiry_data_file() (pywfm.iwfmmodel method)": [[53, "pywfm.IWFMModel.delete_inquiry_data_file"]], "get_version() (pywfm.iwfmmodel method)": [[54, "pywfm.IWFMModel.get_version"]], "is_model_instantiated() (pywfm.iwfmmodel method)": [[55, "pywfm.IWFMModel.is_model_instantiated"]], "kill() (pywfm.iwfmmodel method)": [[56, "pywfm.IWFMModel.kill"]], "new() (pywfm.iwfmmodel method)": [[57, "pywfm.IWFMModel.new"]], "get_element_config() (pywfm.iwfmmodel method)": [[58, "pywfm.IWFMModel.get_element_config"]], "get_element_ids() (pywfm.iwfmmodel method)": [[59, "pywfm.IWFMModel.get_element_ids"]], "get_element_info() (pywfm.iwfmmodel method)": [[60, "pywfm.IWFMModel.get_element_info"]], "get_element_spatial_info() (pywfm.iwfmmodel method)": [[61, "pywfm.IWFMModel.get_element_spatial_info"]], "get_n_elements() (pywfm.iwfmmodel method)": [[62, "pywfm.IWFMModel.get_n_elements"]], "get_elements_in_lake() (pywfm.iwfmmodel method)": [[63, "pywfm.IWFMModel.get_elements_in_lake"]], "get_lake_ids() (pywfm.iwfmmodel method)": [[64, "pywfm.IWFMModel.get_lake_ids"]], "get_n_elements_in_lake() (pywfm.iwfmmodel method)": [[65, "pywfm.IWFMModel.get_n_elements_in_lake"]], "get_n_lakes() (pywfm.iwfmmodel method)": [[66, "pywfm.IWFMModel.get_n_lakes"]], "get_boundary_nodes() (pywfm.iwfmmodel method)": [[67, "pywfm.IWFMModel.get_boundary_nodes"]], "get_n_nodes() (pywfm.iwfmmodel method)": [[68, "pywfm.IWFMModel.get_n_nodes"]], "get_node_coordinates() (pywfm.iwfmmodel method)": [[69, "pywfm.IWFMModel.get_node_coordinates"]], "get_node_ids() (pywfm.iwfmmodel method)": [[70, "pywfm.IWFMModel.get_node_ids"]], "get_node_info() (pywfm.iwfmmodel method)": [[71, "pywfm.IWFMModel.get_node_info"]], "order_boundary_nodes() (pywfm.iwfmmodel static method)": [[72, "pywfm.IWFMModel.order_boundary_nodes"]], "get_aquifer_bottom_elevation() (pywfm.iwfmmodel method)": [[73, "pywfm.IWFMModel.get_aquifer_bottom_elevation"]], "get_aquifer_top_elevation() (pywfm.iwfmmodel method)": [[74, "pywfm.IWFMModel.get_aquifer_top_elevation"]], "get_ground_surface_elevation() (pywfm.iwfmmodel method)": [[75, "pywfm.IWFMModel.get_ground_surface_elevation"]], "get_n_layers() (pywfm.iwfmmodel method)": [[76, "pywfm.IWFMModel.get_n_layers"]], "get_stratigraphy_atxycoordinate() (pywfm.iwfmmodel method)": [[77, "pywfm.IWFMModel.get_stratigraphy_atXYcoordinate"]], "get_downstream_node_in_stream_reaches() (pywfm.iwfmmodel method)": [[78, "pywfm.IWFMModel.get_downstream_node_in_stream_reaches"]], "get_n_nodes_in_stream_reach() (pywfm.iwfmmodel method)": [[79, "pywfm.IWFMModel.get_n_nodes_in_stream_reach"]], "get_n_rating_table_points() (pywfm.iwfmmodel method)": [[80, "pywfm.IWFMModel.get_n_rating_table_points"]], "get_n_reaches_upstream_of_reach() (pywfm.iwfmmodel method)": [[81, "pywfm.IWFMModel.get_n_reaches_upstream_of_reach"]], "get_n_stream_nodes() (pywfm.iwfmmodel method)": [[82, "pywfm.IWFMModel.get_n_stream_nodes"]], "get_n_stream_nodes_upstream_of_stream_node() (pywfm.iwfmmodel method)": [[83, "pywfm.IWFMModel.get_n_stream_nodes_upstream_of_stream_node"]], "get_n_stream_reaches() (pywfm.iwfmmodel method)": [[84, "pywfm.IWFMModel.get_n_stream_reaches"]], "get_reach_outflow_destination() (pywfm.iwfmmodel method)": [[85, "pywfm.IWFMModel.get_reach_outflow_destination"]], "get_reach_outflow_destination_types() (pywfm.iwfmmodel method)": [[86, "pywfm.IWFMModel.get_reach_outflow_destination_types"]], "get_reaches_upstream_of_reach() (pywfm.iwfmmodel method)": [[87, "pywfm.IWFMModel.get_reaches_upstream_of_reach"]], "get_stream_bottom_elevations() (pywfm.iwfmmodel method)": [[88, "pywfm.IWFMModel.get_stream_bottom_elevations"]], "get_stream_network() (pywfm.iwfmmodel method)": [[89, "pywfm.IWFMModel.get_stream_network"]], "get_stream_node_ids() (pywfm.iwfmmodel method)": [[90, "pywfm.IWFMModel.get_stream_node_ids"]], "get_stream_nodes_upstream_of_stream_node() (pywfm.iwfmmodel method)": [[91, "pywfm.IWFMModel.get_stream_nodes_upstream_of_stream_node"]], "get_stream_rating_table() (pywfm.iwfmmodel method)": [[92, "pywfm.IWFMModel.get_stream_rating_table"]], "get_stream_reach_groundwater_nodes() (pywfm.iwfmmodel method)": [[93, "pywfm.IWFMModel.get_stream_reach_groundwater_nodes"]], "get_stream_reach_ids() (pywfm.iwfmmodel method)": [[94, "pywfm.IWFMModel.get_stream_reach_ids"]], "get_stream_reach_names() (pywfm.iwfmmodel method)": [[95, "pywfm.IWFMModel.get_stream_reach_names"]], "get_stream_reach_stream_nodes() (pywfm.iwfmmodel method)": [[96, "pywfm.IWFMModel.get_stream_reach_stream_nodes"]], "get_upstream_nodes_in_stream_reaches() (pywfm.iwfmmodel method)": [[97, "pywfm.IWFMModel.get_upstream_nodes_in_stream_reaches"]], "is_stream_upstream_node() (pywfm.iwfmmodel method)": [[98, "pywfm.IWFMModel.is_stream_upstream_node"]], "get_n_subregions() (pywfm.iwfmmodel method)": [[99, "pywfm.IWFMModel.get_n_subregions"]], "get_subregion_ids() (pywfm.iwfmmodel method)": [[100, "pywfm.IWFMModel.get_subregion_ids"]], "get_subregion_name() (pywfm.iwfmmodel method)": [[101, "pywfm.IWFMModel.get_subregion_name"]], "get_subregion_names() (pywfm.iwfmmodel method)": [[102, "pywfm.IWFMModel.get_subregion_names"]], "get_subregions_by_element() (pywfm.iwfmmodel method)": [[103, "pywfm.IWFMModel.get_subregions_by_element"]], "get_depth_to_water() (pywfm.iwfmmodel method)": [[104, "pywfm.IWFMModel.get_depth_to_water"]], "get_gwheads_all() (pywfm.iwfmmodel method)": [[105, "pywfm.IWFMModel.get_gwheads_all"]], "get_gwheads_foralayer() (pywfm.iwfmmodel method)": [[106, "pywfm.IWFMModel.get_gwheads_foralayer"]], "get_subregion_ag_pumping_average_depth_to_water() (pywfm.iwfmmodel method)": [[107, "pywfm.IWFMModel.get_subregion_ag_pumping_average_depth_to_water"]], "get_subsidence_all() (pywfm.iwfmmodel method)": [[108, "pywfm.IWFMModel.get_subsidence_all"]], "get_zone_ag_pumping_average_depth_to_water() (pywfm.iwfmmodel method)": [[109, "pywfm.IWFMModel.get_zone_ag_pumping_average_depth_to_water"]], "get_groundwater_hydrograph() (pywfm.iwfmmodel method)": [[110, "pywfm.IWFMModel.get_groundwater_hydrograph"]], "get_groundwater_hydrograph_at_node_and_layer() (pywfm.iwfmmodel method)": [[111, "pywfm.IWFMModel.get_groundwater_hydrograph_at_node_and_layer"]], "get_groundwater_hydrograph_coordinates() (pywfm.iwfmmodel method)": [[112, "pywfm.IWFMModel.get_groundwater_hydrograph_coordinates"]], "get_groundwater_hydrograph_ids() (pywfm.iwfmmodel method)": [[113, "pywfm.IWFMModel.get_groundwater_hydrograph_ids"]], "get_groundwater_hydrograph_info() (pywfm.iwfmmodel method)": [[114, "pywfm.IWFMModel.get_groundwater_hydrograph_info"]], "get_groundwater_hydrograph_names() (pywfm.iwfmmodel method)": [[115, "pywfm.IWFMModel.get_groundwater_hydrograph_names"]], "get_hydrograph_type_list() (pywfm.iwfmmodel method)": [[116, "pywfm.IWFMModel.get_hydrograph_type_list"]], "get_n_groundwater_hydrographs() (pywfm.iwfmmodel method)": [[117, "pywfm.IWFMModel.get_n_groundwater_hydrographs"]], "get_n_hydrograph_types() (pywfm.iwfmmodel method)": [[118, "pywfm.IWFMModel.get_n_hydrograph_types"]], "get_n_stream_hydrographs() (pywfm.iwfmmodel method)": [[119, "pywfm.IWFMModel.get_n_stream_hydrographs"]], "get_n_subsidence_hydrographs() (pywfm.iwfmmodel method)": [[120, "pywfm.IWFMModel.get_n_subsidence_hydrographs"]], "get_n_tile_drain_hydrographs() (pywfm.iwfmmodel method)": [[121, "pywfm.IWFMModel.get_n_tile_drain_hydrographs"]], "get_stream_hydrograph() (pywfm.iwfmmodel method)": [[122, "pywfm.IWFMModel.get_stream_hydrograph"]], "get_stream_hydrograph_coordinates() (pywfm.iwfmmodel method)": [[123, "pywfm.IWFMModel.get_stream_hydrograph_coordinates"]], "get_stream_hydrograph_ids() (pywfm.iwfmmodel method)": [[124, "pywfm.IWFMModel.get_stream_hydrograph_ids"]], "get_stream_hydrograph_names() (pywfm.iwfmmodel method)": [[125, "pywfm.IWFMModel.get_stream_hydrograph_names"]], "get_subsidence_hydrograph() (pywfm.iwfmmodel method)": [[126, "pywfm.IWFMModel.get_subsidence_hydrograph"]], "get_subsidence_hydrograph_coordinates() (pywfm.iwfmmodel method)": [[127, "pywfm.IWFMModel.get_subsidence_hydrograph_coordinates"]], "get_subsidence_hydrograph_ids() (pywfm.iwfmmodel method)": [[128, "pywfm.IWFMModel.get_subsidence_hydrograph_ids"]], "get_subsidence_hydrograph_names() (pywfm.iwfmmodel method)": [[129, "pywfm.IWFMModel.get_subsidence_hydrograph_names"]], "get_tile_drain_hydrograph_coordinates() (pywfm.iwfmmodel method)": [[130, "pywfm.IWFMModel.get_tile_drain_hydrograph_coordinates"]], "get_tile_drain_hydrograph_ids() (pywfm.iwfmmodel method)": [[131, "pywfm.IWFMModel.get_tile_drain_hydrograph_ids"]], "get_n_small_watersheds() (pywfm.iwfmmodel method)": [[132, "pywfm.IWFMModel.get_n_small_watersheds"]], "get_n_stream_inflows() (pywfm.iwfmmodel method)": [[133, "pywfm.IWFMModel.get_n_stream_inflows"]], "get_small_watershed_ids() (pywfm.iwfmmodel method)": [[134, "pywfm.IWFMModel.get_small_watershed_ids"]], "get_stream_inflow_ids() (pywfm.iwfmmodel method)": [[135, "pywfm.IWFMModel.get_stream_inflow_ids"]], "get_stream_inflow_nodes() (pywfm.iwfmmodel method)": [[136, "pywfm.IWFMModel.get_stream_inflow_nodes"]], "get_budget_type_ids() (pywfm.iwfmmodel method)": [[137, "pywfm.IWFMModel.get_budget_type_ids"]], "get_data_unit_type_id_area() (pywfm.iwfmmodel method)": [[138, "pywfm.IWFMModel.get_data_unit_type_id_area"]], "get_data_unit_type_id_length() (pywfm.iwfmmodel method)": [[139, "pywfm.IWFMModel.get_data_unit_type_id_length"]], "get_data_unit_type_ids() (pywfm.iwfmmodel method)": [[140, "pywfm.IWFMModel.get_data_unit_type_ids"]], "get_data_unit_type_volume() (pywfm.iwfmmodel method)": [[141, "pywfm.IWFMModel.get_data_unit_type_volume"]], "get_flow_destination_type_id() (pywfm.iwfmmodel method)": [[142, "pywfm.IWFMModel.get_flow_destination_type_id"]], "get_flow_destination_type_id_element() (pywfm.iwfmmodel method)": [[143, "pywfm.IWFMModel.get_flow_destination_type_id_element"]], "get_flow_destination_type_id_elementset() (pywfm.iwfmmodel method)": [[144, "pywfm.IWFMModel.get_flow_destination_type_id_elementset"]], "get_flow_destination_type_id_gwelement() (pywfm.iwfmmodel method)": [[145, "pywfm.IWFMModel.get_flow_destination_type_id_gwelement"]], "get_flow_destination_type_id_lake() (pywfm.iwfmmodel method)": [[146, "pywfm.IWFMModel.get_flow_destination_type_id_lake"]], "get_flow_destination_type_id_outside() (pywfm.iwfmmodel method)": [[147, "pywfm.IWFMModel.get_flow_destination_type_id_outside"]], "get_flow_destination_type_id_streamnode() (pywfm.iwfmmodel method)": [[148, "pywfm.IWFMModel.get_flow_destination_type_id_streamnode"]], "get_flow_destination_type_id_subregion() (pywfm.iwfmmodel method)": [[149, "pywfm.IWFMModel.get_flow_destination_type_id_subregion"]], "get_land_use_type_id_gen_ag() (pywfm.iwfmmodel method)": [[150, "pywfm.IWFMModel.get_land_use_type_id_gen_ag"]], "get_land_use_type_id_native_riparian() (pywfm.iwfmmodel method)": [[151, "pywfm.IWFMModel.get_land_use_type_id_native_riparian"]], "get_land_use_type_id_nonponded_ag() (pywfm.iwfmmodel method)": [[152, "pywfm.IWFMModel.get_land_use_type_id_nonponded_ag"]], "get_land_use_type_id_refuge() (pywfm.iwfmmodel method)": [[153, "pywfm.IWFMModel.get_land_use_type_id_refuge"]], "get_land_use_type_id_rice() (pywfm.iwfmmodel method)": [[154, "pywfm.IWFMModel.get_land_use_type_id_rice"]], "get_land_use_type_id_urban() (pywfm.iwfmmodel method)": [[155, "pywfm.IWFMModel.get_land_use_type_id_urban"]], "get_land_use_type_ids() (pywfm.iwfmmodel method)": [[156, "pywfm.IWFMModel.get_land_use_type_ids"]], "get_location_type_id_element() (pywfm.iwfmmodel method)": [[157, "pywfm.IWFMModel.get_location_type_id_element"]], "get_location_type_id_gwheadobs() (pywfm.iwfmmodel method)": [[158, "pywfm.IWFMModel.get_location_type_id_gwheadobs"]], "get_location_type_id_lake() (pywfm.iwfmmodel method)": [[159, "pywfm.IWFMModel.get_location_type_id_lake"]], "get_location_type_id_node() (pywfm.iwfmmodel method)": [[160, "pywfm.IWFMModel.get_location_type_id_node"]], "get_location_type_id_smallwatershed() (pywfm.iwfmmodel method)": [[161, "pywfm.IWFMModel.get_location_type_id_smallwatershed"]], "get_location_type_id_streamhydobs() (pywfm.iwfmmodel method)": [[162, "pywfm.IWFMModel.get_location_type_id_streamhydobs"]], "get_location_type_id_streamnode() (pywfm.iwfmmodel method)": [[163, "pywfm.IWFMModel.get_location_type_id_streamnode"]], "get_location_type_id_streamnodebud() (pywfm.iwfmmodel method)": [[164, "pywfm.IWFMModel.get_location_type_id_streamnodebud"]], "get_location_type_id_streamreach() (pywfm.iwfmmodel method)": [[165, "pywfm.IWFMModel.get_location_type_id_streamreach"]], "get_location_type_id_subregion() (pywfm.iwfmmodel method)": [[166, "pywfm.IWFMModel.get_location_type_id_subregion"]], "get_location_type_id_subsidenceobs() (pywfm.iwfmmodel method)": [[167, "pywfm.IWFMModel.get_location_type_id_subsidenceobs"]], "get_location_type_id_tiledrainobs() (pywfm.iwfmmodel method)": [[168, "pywfm.IWFMModel.get_location_type_id_tiledrainobs"]], "get_location_type_id_zone() (pywfm.iwfmmodel method)": [[169, "pywfm.IWFMModel.get_location_type_id_zone"]], "get_location_type_ids() (pywfm.iwfmmodel method)": [[170, "pywfm.IWFMModel.get_location_type_ids"]], "get_supply_type_id_diversion() (pywfm.iwfmmodel method)": [[171, "pywfm.IWFMModel.get_supply_type_id_diversion"]], "get_supply_type_id_elempump() (pywfm.iwfmmodel method)": [[172, "pywfm.IWFMModel.get_supply_type_id_elempump"]], "get_supply_type_id_well() (pywfm.iwfmmodel method)": [[173, "pywfm.IWFMModel.get_supply_type_id_well"]], "get_zbudget_type_ids() (pywfm.iwfmmodel method)": [[174, "pywfm.IWFMModel.get_zbudget_type_ids"]], "get_zone_extent_id_horizontal() (pywfm.iwfmmodel method)": [[175, "pywfm.IWFMModel.get_zone_extent_id_horizontal"]], "get_zone_extent_id_vertical() (pywfm.iwfmmodel method)": [[176, "pywfm.IWFMModel.get_zone_extent_id_vertical"]], "get_zone_extent_ids() (pywfm.iwfmmodel method)": [[177, "pywfm.IWFMModel.get_zone_extent_ids"]], "get_budget_type_ids() (pywfm.misc.iwfmmiscellaneous method)": [[178, "pywfm.misc.IWFMMiscellaneous.get_budget_type_ids"]], "get_data_unit_type_id_area() (pywfm.misc.iwfmmiscellaneous method)": [[179, "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_area"]], "get_data_unit_type_id_length() (pywfm.misc.iwfmmiscellaneous method)": [[180, "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_id_length"]], "get_data_unit_type_ids() (pywfm.misc.iwfmmiscellaneous method)": [[181, "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_ids"]], "get_data_unit_type_volume() (pywfm.misc.iwfmmiscellaneous method)": [[182, "pywfm.misc.IWFMMiscellaneous.get_data_unit_type_volume"]], "get_flow_destination_type_id() (pywfm.misc.iwfmmiscellaneous method)": [[183, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id"]], "get_flow_destination_type_id_element() (pywfm.misc.iwfmmiscellaneous method)": [[184, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_element"]], "get_flow_destination_type_id_elementset() (pywfm.misc.iwfmmiscellaneous method)": [[185, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_elementset"]], "get_flow_destination_type_id_gwelement() (pywfm.misc.iwfmmiscellaneous method)": [[186, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_gwelement"]], "get_flow_destination_type_id_lake() (pywfm.misc.iwfmmiscellaneous method)": [[187, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_lake"]], "get_flow_destination_type_id_outside() (pywfm.misc.iwfmmiscellaneous method)": [[188, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_outside"]], "get_flow_destination_type_id_streamnode() (pywfm.misc.iwfmmiscellaneous method)": [[189, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_streamnode"]], "get_flow_destination_type_id_subregion() (pywfm.misc.iwfmmiscellaneous method)": [[190, "pywfm.misc.IWFMMiscellaneous.get_flow_destination_type_id_subregion"]], "get_land_use_type_id_gen_ag() (pywfm.misc.iwfmmiscellaneous method)": [[191, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_gen_ag"]], "get_land_use_type_id_native_riparian() (pywfm.misc.iwfmmiscellaneous method)": [[192, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_native_riparian"]], "get_land_use_type_id_nonponded_ag() (pywfm.misc.iwfmmiscellaneous method)": [[193, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_nonponded_ag"]], "get_land_use_type_id_refuge() (pywfm.misc.iwfmmiscellaneous method)": [[194, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_refuge"]], "get_land_use_type_id_rice() (pywfm.misc.iwfmmiscellaneous method)": [[195, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_rice"]], "get_land_use_type_id_urban() (pywfm.misc.iwfmmiscellaneous method)": [[196, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban"]], "get_land_use_type_id_urban_indoor() (pywfm.misc.iwfmmiscellaneous method)": [[197, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_indoor"]], "get_land_use_type_id_urban_outdoor() (pywfm.misc.iwfmmiscellaneous method)": [[198, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_id_urban_outdoor"]], "get_land_use_type_ids() (pywfm.misc.iwfmmiscellaneous method)": [[199, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids"]], "get_land_use_type_ids_1() (pywfm.misc.iwfmmiscellaneous method)": [[200, "pywfm.misc.IWFMMiscellaneous.get_land_use_type_ids_1"]], "get_location_type_id_bypass() (pywfm.misc.iwfmmiscellaneous method)": [[201, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_bypass"]], "get_location_type_id_diversion() (pywfm.misc.iwfmmiscellaneous method)": [[202, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_diversion"]], "get_location_type_id_element() (pywfm.misc.iwfmmiscellaneous method)": [[203, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_element"]], "get_location_type_id_gwheadobs() (pywfm.misc.iwfmmiscellaneous method)": [[204, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_gwheadobs"]], "get_location_type_id_lake() (pywfm.misc.iwfmmiscellaneous method)": [[205, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_lake"]], "get_location_type_id_node() (pywfm.misc.iwfmmiscellaneous method)": [[206, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_node"]], "get_location_type_id_smallwatershed() (pywfm.misc.iwfmmiscellaneous method)": [[207, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_smallwatershed"]], "get_location_type_id_streamhydobs() (pywfm.misc.iwfmmiscellaneous method)": [[208, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamhydobs"]], "get_location_type_id_streamnode() (pywfm.misc.iwfmmiscellaneous method)": [[209, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnode"]], "get_location_type_id_streamnodebud() (pywfm.misc.iwfmmiscellaneous method)": [[210, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamnodebud"]], "get_location_type_id_streamreach() (pywfm.misc.iwfmmiscellaneous method)": [[211, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_streamreach"]], "get_location_type_id_subregion() (pywfm.misc.iwfmmiscellaneous method)": [[212, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subregion"]], "get_location_type_id_subsidenceobs() (pywfm.misc.iwfmmiscellaneous method)": [[213, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_subsidenceobs"]], "get_location_type_id_tiledrainobs() (pywfm.misc.iwfmmiscellaneous method)": [[214, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_tiledrainobs"]], "get_location_type_id_zone() (pywfm.misc.iwfmmiscellaneous method)": [[215, "pywfm.misc.IWFMMiscellaneous.get_location_type_id_zone"]], "get_location_type_ids() (pywfm.misc.iwfmmiscellaneous method)": [[216, "pywfm.misc.IWFMMiscellaneous.get_location_type_ids"]], "get_location_type_ids_1() (pywfm.misc.iwfmmiscellaneous method)": [[217, "pywfm.misc.IWFMMiscellaneous.get_location_type_ids_1"]], "get_supply_type_id_diversion() (pywfm.misc.iwfmmiscellaneous method)": [[218, "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_diversion"]], "get_supply_type_id_elempump() (pywfm.misc.iwfmmiscellaneous method)": [[219, "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_elempump"]], "get_supply_type_id_well() (pywfm.misc.iwfmmiscellaneous method)": [[220, "pywfm.misc.IWFMMiscellaneous.get_supply_type_id_well"]], "get_zbudget_type_ids() (pywfm.misc.iwfmmiscellaneous method)": [[221, "pywfm.misc.IWFMMiscellaneous.get_zbudget_type_ids"]], "get_zone_extent_id_horizontal() (pywfm.misc.iwfmmiscellaneous method)": [[222, "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_horizontal"]], "get_zone_extent_id_vertical() (pywfm.misc.iwfmmiscellaneous method)": [[223, "pywfm.misc.IWFMMiscellaneous.get_zone_extent_id_vertical"]], "get_zone_extent_ids() (pywfm.misc.iwfmmiscellaneous method)": [[224, "pywfm.misc.IWFMMiscellaneous.get_zone_extent_ids"]], "get_n_ag_crops() (pywfm.iwfmmodel method)": [[225, "pywfm.IWFMModel.get_n_ag_crops"]], "close_log_file() (pywfm.misc.iwfmmiscellaneous method)": [[226, "pywfm.misc.IWFMMiscellaneous.close_log_file"]], "get_last_message() (pywfm.misc.iwfmmiscellaneous method)": [[227, "pywfm.misc.IWFMMiscellaneous.get_last_message"]], "log_last_message() (pywfm.misc.iwfmmiscellaneous method)": [[228, "pywfm.misc.IWFMMiscellaneous.log_last_message"]], "set_log_file() (pywfm.misc.iwfmmiscellaneous method)": [[229, "pywfm.misc.IWFMMiscellaneous.set_log_file"]], "plot_elements() (pywfm.iwfmmodel method)": [[230, "pywfm.IWFMModel.plot_elements"]], "plot_nodes() (pywfm.iwfmmodel method)": [[231, "pywfm.IWFMModel.plot_nodes"]], "_get_hydrograph() (pywfm.iwfmmodel method)": [[232, "pywfm.IWFMModel._get_hydrograph"]], "_get_hydrograph_coordinates() (pywfm.iwfmmodel method)": [[233, "pywfm.IWFMModel._get_hydrograph_coordinates"]], "_get_hydrograph_ids() (pywfm.iwfmmodel method)": [[234, "pywfm.IWFMModel._get_hydrograph_ids"]], "_get_location_ids() (pywfm.iwfmmodel method)": [[235, "pywfm.IWFMModel._get_location_ids"]], "_get_n_hydrographs() (pywfm.iwfmmodel method)": [[236, "pywfm.IWFMModel._get_n_hydrographs"]], "_get_n_locations() (pywfm.iwfmmodel method)": [[237, "pywfm.IWFMModel._get_n_locations"]], "_get_names() (pywfm.iwfmmodel method)": [[238, "pywfm.IWFMModel._get_names"]], "_get_supply_purpose() (pywfm.iwfmmodel method)": [[239, "pywfm.IWFMModel._get_supply_purpose"]], "_get_supply_requirement_ag() (pywfm.iwfmmodel method)": [[240, "pywfm.IWFMModel._get_supply_requirement_ag"]], "_get_supply_requirement_urban() (pywfm.iwfmmodel method)": [[241, "pywfm.IWFMModel._get_supply_requirement_urban"]], "_get_supply_shortage_at_origin_ag() (pywfm.iwfmmodel method)": [[242, "pywfm.IWFMModel._get_supply_shortage_at_origin_ag"]], "_get_supply_shortage_at_origin_urban() (pywfm.iwfmmodel method)": [[243, "pywfm.IWFMModel._get_supply_shortage_at_origin_urban"]], "_is_time_interval_greater_or_equal() (pywfm.iwfmmodel method)": [[244, "pywfm.IWFMModel._is_time_interval_greater_or_equal"]], "_string_to_list_by_array() (pywfm.iwfmmodel method)": [[245, "pywfm.IWFMModel._string_to_list_by_array"]], "_validate_iwfm_date() (pywfm.iwfmmodel method)": [[246, "pywfm.IWFMModel._validate_iwfm_date"]], "_validate_time_interval() (pywfm.iwfmmodel method)": [[247, "pywfm.IWFMModel._validate_time_interval"]], "_is_time_interval_greater_or_equal() (pywfm.misc.iwfmmiscellaneous method)": [[248, "pywfm.misc.IWFMMiscellaneous._is_time_interval_greater_or_equal"]], "_string_to_list_by_array() (pywfm.misc.iwfmmiscellaneous method)": [[249, "pywfm.misc.IWFMMiscellaneous._string_to_list_by_array"]], "_validate_iwfm_date() (pywfm.misc.iwfmmiscellaneous method)": [[250, "pywfm.misc.IWFMMiscellaneous._validate_iwfm_date"]], "_validate_time_interval() (pywfm.misc.iwfmmiscellaneous method)": [[251, "pywfm.misc.IWFMMiscellaneous._validate_time_interval"]], "iwfmbudget (class in pywfm)": [[252, "pywfm.IWFMBudget"]], "__init__() (pywfm.iwfmbudget method)": [[252, "pywfm.IWFMBudget.__init__"]], "iwfmmodel (class in pywfm)": [[253, "pywfm.IWFMModel"]], "__init__() (pywfm.iwfmmodel method)": [[253, "pywfm.IWFMModel.__init__"]], "iwfmzbudget (class in pywfm)": [[254, "pywfm.IWFMZBudget"]], "__init__() (pywfm.iwfmzbudget method)": [[254, "pywfm.IWFMZBudget.__init__"]], "iwfmmiscellaneous (class in pywfm.misc)": [[255, "pywfm.misc.IWFMMiscellaneous"]], "__init__() (pywfm.misc.iwfmmiscellaneous method)": [[255, "pywfm.misc.IWFMMiscellaneous.__init__"]], "advance_state() (pywfm.iwfmmodel method)": [[256, "pywfm.IWFMModel.advance_state"]], "advance_time() (pywfm.iwfmmodel method)": [[257, "pywfm.IWFMModel.advance_time"]], "close_log_file() (pywfm.iwfmmodel method)": [[258, "pywfm.IWFMModel.close_log_file"]], "get_last_message() (pywfm.iwfmmodel method)": [[259, "pywfm.IWFMModel.get_last_message"]], "is_end_of_simulation() (pywfm.iwfmmodel method)": [[260, "pywfm.IWFMModel.is_end_of_simulation"]], "log_last_message() (pywfm.iwfmmodel method)": [[261, "pywfm.IWFMModel.log_last_message"]], "print_results() (pywfm.iwfmmodel method)": [[262, "pywfm.IWFMModel.print_results"]], "read_timeseries_data() (pywfm.iwfmmodel method)": [[263, "pywfm.IWFMModel.read_timeseries_data"]], "read_timeseries_data_overwrite() (pywfm.iwfmmodel method)": [[264, "pywfm.IWFMModel.read_timeseries_data_overwrite"]], "restore_pumping_to_read_values() (pywfm.iwfmmodel method)": [[265, "pywfm.IWFMModel.restore_pumping_to_read_values"]], "set_log_file() (pywfm.iwfmmodel method)": [[266, "pywfm.IWFMModel.set_log_file"]], "set_preprocessor_path() (pywfm.iwfmmodel method)": [[267, "pywfm.IWFMModel.set_preprocessor_path"]], "set_simulation_path() (pywfm.iwfmmodel method)": [[268, "pywfm.IWFMModel.set_simulation_path"]], "set_supply_adjustment_max_iterations() (pywfm.iwfmmodel method)": [[269, "pywfm.IWFMModel.set_supply_adjustment_max_iterations"]], "set_supply_adjustment_tolerance() (pywfm.iwfmmodel method)": [[270, "pywfm.IWFMModel.set_supply_adjustment_tolerance"]], "simulate_all() (pywfm.iwfmmodel method)": [[271, "pywfm.IWFMModel.simulate_all"]], "simulate_for_an_interval() (pywfm.iwfmmodel method)": [[272, "pywfm.IWFMModel.simulate_for_an_interval"]], "simulate_for_one_timestep() (pywfm.iwfmmodel method)": [[273, "pywfm.IWFMModel.simulate_for_one_timestep"]], "turn_supply_adjustment_on_off() (pywfm.iwfmmodel method)": [[274, "pywfm.IWFMModel.turn_supply_adjustment_on_off"]], "get_actual_stream_diversions_at_some_locations() (pywfm.iwfmmodel method)": [[275, "pywfm.IWFMModel.get_actual_stream_diversions_at_some_locations"]], "get_net_bypass_inflows() (pywfm.iwfmmodel method)": [[276, "pywfm.IWFMModel.get_net_bypass_inflows"]], "get_stream_flow_at_location() (pywfm.iwfmmodel method)": [[277, "pywfm.IWFMModel.get_stream_flow_at_location"]], "get_stream_flows() (pywfm.iwfmmodel method)": [[278, "pywfm.IWFMModel.get_stream_flows"]], "get_stream_gain_from_groundwater() (pywfm.iwfmmodel method)": [[279, "pywfm.IWFMModel.get_stream_gain_from_groundwater"]], "get_stream_gain_from_lakes() (pywfm.iwfmmodel method)": [[280, "pywfm.IWFMModel.get_stream_gain_from_lakes"]], "get_stream_inflows_at_some_locations() (pywfm.iwfmmodel method)": [[281, "pywfm.IWFMModel.get_stream_inflows_at_some_locations"]], "get_stream_rainfall_runoff() (pywfm.iwfmmodel method)": [[282, "pywfm.IWFMModel.get_stream_rainfall_runoff"]], "get_stream_reaches_for_stream_nodes() (pywfm.iwfmmodel method)": [[283, "pywfm.IWFMModel.get_stream_reaches_for_stream_nodes"]], "get_stream_return_flows() (pywfm.iwfmmodel method)": [[284, "pywfm.IWFMModel.get_stream_return_flows"]], "get_stream_riparian_evapotranspiration() (pywfm.iwfmmodel method)": [[285, "pywfm.IWFMModel.get_stream_riparian_evapotranspiration"]], "get_stream_stages() (pywfm.iwfmmodel method)": [[286, "pywfm.IWFMModel.get_stream_stages"]], "get_stream_tile_drain_flows() (pywfm.iwfmmodel method)": [[287, "pywfm.IWFMModel.get_stream_tile_drain_flows"]], "get_stream_tributary_inflows() (pywfm.iwfmmodel method)": [[288, "pywfm.IWFMModel.get_stream_tributary_inflows"]], "get_current_date_and_time() (pywfm.iwfmmodel method)": [[289, "pywfm.IWFMModel.get_current_date_and_time"]], "get_n_intervals() (pywfm.iwfmmodel method)": [[290, "pywfm.IWFMModel.get_n_intervals"]], "get_n_time_steps() (pywfm.iwfmmodel method)": [[291, "pywfm.IWFMModel.get_n_time_steps"]], "get_output_interval() (pywfm.iwfmmodel method)": [[292, "pywfm.IWFMModel.get_output_interval"]], "get_time_specs() (pywfm.iwfmmodel method)": [[293, "pywfm.IWFMModel.get_time_specs"]], "increment_time() (pywfm.iwfmmodel method)": [[294, "pywfm.IWFMModel.increment_time"]], "is_date_greater() (pywfm.iwfmmodel method)": [[295, "pywfm.IWFMModel.is_date_greater"]], "get_n_intervals() (pywfm.misc.iwfmmiscellaneous method)": [[296, "pywfm.misc.IWFMMiscellaneous.get_n_intervals"]], "increment_time() (pywfm.misc.iwfmmiscellaneous method)": [[297, "pywfm.misc.IWFMMiscellaneous.increment_time"]], "is_date_greater() (pywfm.misc.iwfmmiscellaneous method)": [[298, "pywfm.misc.IWFMMiscellaneous.is_date_greater"]], "get_version() (pywfm.misc.iwfmmiscellaneous method)": [[299, "pywfm.misc.IWFMMiscellaneous.get_version"]], "get_column_headers_for_a_zone() (pywfm.iwfmzbudget method)": [[300, "pywfm.IWFMZBudget.get_column_headers_for_a_zone"]], "get_values_for_a_zone() (pywfm.iwfmzbudget method)": [[301, "pywfm.IWFMZBudget.get_values_for_a_zone"]], "get_values_for_some_zones_for_an_interval() (pywfm.iwfmzbudget method)": [[302, "pywfm.IWFMZBudget.get_values_for_some_zones_for_an_interval"]], "close_zbudget_file() (pywfm.iwfmzbudget method)": [[303, "pywfm.IWFMZBudget.close_zbudget_file"]], "get_n_time_steps() (pywfm.iwfmzbudget method)": [[304, "pywfm.IWFMZBudget.get_n_time_steps"]], "get_time_specs() (pywfm.iwfmzbudget method)": [[305, "pywfm.IWFMZBudget.get_time_specs"]], "get_n_title_lines() (pywfm.iwfmzbudget method)": [[306, "pywfm.IWFMZBudget.get_n_title_lines"]], "get_title_lines() (pywfm.iwfmzbudget method)": [[307, "pywfm.IWFMZBudget.get_title_lines"]], "generate_zone_list_from_file() (pywfm.iwfmzbudget method)": [[308, "pywfm.IWFMZBudget.generate_zone_list_from_file"]], "get_n_zones() (pywfm.iwfmzbudget method)": [[309, "pywfm.IWFMZBudget.get_n_zones"]], "get_zone_list() (pywfm.iwfmzbudget method)": [[310, "pywfm.IWFMZBudget.get_zone_list"]], "get_zone_names() (pywfm.iwfmzbudget method)": [[311, "pywfm.IWFMZBudget.get_zone_names"]]}})